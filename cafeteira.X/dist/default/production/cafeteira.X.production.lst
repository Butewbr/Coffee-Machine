

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 27 11:17:37 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179                           
   180                           	psect	idataBANK0
   181  0490                     __pidataBANK0:
   182                           
   183                           ;initializer for _milk_flag
   184  0490  3401               	retlw	1
   185  0491  3400               	retlw	0
   186  0006                     _PORTBbits	set	6
   187  0010                     _T1CONbits	set	16
   188  000B                     _INTCONbits	set	11
   189  0007                     _PORTCbits	set	7
   190  000F                     _TMR1H	set	15
   191  000E                     _TMR1L	set	14
   192  000C                     _PIR1bits	set	12
   193  0008                     _PORTDbits	set	8
   194  0059                     _INTF	set	89
   195  0060                     _TMR1IF	set	96
   196  008C                     _PIE1bits	set	140
   197  0087                     _TRISC	set	135
   198  0088                     _TRISD	set	136
   199  0081                     _OPTION_REGbits	set	129
   200                           
   201                           	psect	strings
   202  0200                     __pstrings:
   203  0200                     stringtab:
   204  0200                     __stringtab:
   205  0200                     stringcode:	
   206                           ;	String table - string pointers are 1 byte each
   207                           
   208  0200                     stringdir:
   209  0200  3002               	movlw	high stringdir
   210  0201  008A               	movwf	10
   211  0202  0804               	movf	4,w
   212  0203  0A84               	incf	4,f
   213  0204  0782               	addwf	2,f
   214  0205                     __stringbase:
   215  0205  3400               	retlw	0
   216  0206                     __end_of__stringtab:
   217  0206                     STR_2:
   218  0206  3420               	retlw	32	;' '
   219  0207  3420               	retlw	32	;' '
   220  0208  3420               	retlw	32	;' '
   221  0209  3420               	retlw	32	;' '
   222  020A  3420               	retlw	32	;' '
   223  020B  3420               	retlw	32	;' '
   224  020C  3420               	retlw	32	;' '
   225  020D  3420               	retlw	32	;' '
   226  020E  3420               	retlw	32	;' '
   227  020F  3420               	retlw	32	;' '
   228  0210  3420               	retlw	32	;' '
   229  0211  3420               	retlw	32	;' '
   230  0212  3420               	retlw	32	;' '
   231  0213  3420               	retlw	32	;' '
   232  0214  3420               	retlw	32	;' '
   233  0215  3420               	retlw	32	;' '
   234  0216  3400               	retlw	0
   235  0217                     STR_11:
   236  0217  3448               	retlw	72	;'H'
   237  0218  346F               	retlw	111	;'o'
   238  0219  3474               	retlw	116	;'t'
   239  021A  3420               	retlw	32	;' '
   240  021B  3477               	retlw	119	;'w'
   241  021C  342F               	retlw	47	;'/'
   242  021D  3420               	retlw	32	;' '
   243  021E  344D               	retlw	77	;'M'
   244  021F  3469               	retlw	105	;'i'
   245  0220  346C               	retlw	108	;'l'
   246  0221  346B               	retlw	107	;'k'
   247  0222  3420               	retlw	32	;' '
   248  0223  3420               	retlw	32	;' '
   249  0224  3420               	retlw	32	;' '
   250  0225  3420               	retlw	32	;' '
   251  0226  3420               	retlw	32	;' '
   252  0227  3400               	retlw	0
   253  0228                     STR_8:
   254  0228  3459               	retlw	89	;'Y'
   255  0229  346F               	retlw	111	;'o'
   256  022A  3475               	retlw	117	;'u'
   257  022B  3472               	retlw	114	;'r'
   258  022C  3420               	retlw	32	;' '
   259  022D  3463               	retlw	99	;'c'
   260  022E  346F               	retlw	111	;'o'
   261  022F  3466               	retlw	102	;'f'
   262  0230  3466               	retlw	102	;'f'
   263  0231  3465               	retlw	101	;'e'
   264  0232  3465               	retlw	101	;'e'
   265  0233  343A               	retlw	58	;':'
   266  0234  3420               	retlw	32	;' '
   267  0235  3420               	retlw	32	;' '
   268  0236  3420               	retlw	32	;' '
   269  0237  3420               	retlw	32	;' '
   270  0238  3400               	retlw	0
   271  0239                     STR_12:
   272  0239  3448               	retlw	72	;'H'
   273  023A  346F               	retlw	111	;'o'
   274  023B  3474               	retlw	116	;'t'
   275  023C  3420               	retlw	32	;' '
   276  023D  3477               	retlw	119	;'w'
   277  023E  346F               	retlw	111	;'o'
   278  023F  342F               	retlw	47	;'/'
   279  0240  3420               	retlw	32	;' '
   280  0241  344D               	retlw	77	;'M'
   281  0242  3469               	retlw	105	;'i'
   282  0243  346C               	retlw	108	;'l'
   283  0244  346B               	retlw	107	;'k'
   284  0245  3420               	retlw	32	;' '
   285  0246  3420               	retlw	32	;' '
   286  0247  3420               	retlw	32	;' '
   287  0248  3420               	retlw	32	;' '
   288  0249  3400               	retlw	0
   289  024A                     STR_9:
   290  024A  3443               	retlw	67	;'C'
   291  024B  346F               	retlw	111	;'o'
   292  024C  346C               	retlw	108	;'l'
   293  024D  3464               	retlw	100	;'d'
   294  024E  3420               	retlw	32	;' '
   295  024F  3477               	retlw	119	;'w'
   296  0250  342F               	retlw	47	;'/'
   297  0251  3420               	retlw	32	;' '
   298  0252  344D               	retlw	77	;'M'
   299  0253  3469               	retlw	105	;'i'
   300  0254  346C               	retlw	108	;'l'
   301  0255  346B               	retlw	107	;'k'
   302  0256  3420               	retlw	32	;' '
   303  0257  3420               	retlw	32	;' '
   304  0258  3420               	retlw	32	;' '
   305  0259  3420               	retlw	32	;' '
   306  025A  3400               	retlw	0
   307  025B                     STR_14:
   308  025B  3457               	retlw	87	;'W'
   309  025C  3461               	retlw	97	;'a'
   310  025D  3472               	retlw	114	;'r'
   311  025E  346D               	retlw	109	;'m'
   312  025F  3469               	retlw	105	;'i'
   313  0260  346E               	retlw	110	;'n'
   314  0261  3467               	retlw	103	;'g'
   315  0262  3420               	retlw	32	;' '
   316  0263  3455               	retlw	85	;'U'
   317  0264  3470               	retlw	112	;'p'
   318  0265  342E               	retlw	46	;'.'
   319  0266  342E               	retlw	46	;'.'
   320  0267  342E               	retlw	46	;'.'
   321  0268  3420               	retlw	32	;' '
   322  0269  3420               	retlw	32	;' '
   323  026A  3420               	retlw	32	;' '
   324  026B  3400               	retlw	0
   325  026C                     STR_10:
   326  026C  3443               	retlw	67	;'C'
   327  026D  346F               	retlw	111	;'o'
   328  026E  346C               	retlw	108	;'l'
   329  026F  3464               	retlw	100	;'d'
   330  0270  3420               	retlw	32	;' '
   331  0271  3477               	retlw	119	;'w'
   332  0272  346F               	retlw	111	;'o'
   333  0273  342F               	retlw	47	;'/'
   334  0274  3420               	retlw	32	;' '
   335  0275  344D               	retlw	77	;'M'
   336  0276  3469               	retlw	105	;'i'
   337  0277  346C               	retlw	108	;'l'
   338  0278  346B               	retlw	107	;'k'
   339  0279  3420               	retlw	32	;' '
   340  027A  3420               	retlw	32	;' '
   341  027B  3420               	retlw	32	;' '
   342  027C  3400               	retlw	0
   343  027D                     STR_7:
   344  027D  344E               	retlw	78	;'N'
   345  027E  344F               	retlw	79	;'O'
   346  027F  3420               	retlw	32	;' '
   347  0280  344D               	retlw	77	;'M'
   348  0281  3449               	retlw	73	;'I'
   349  0282  344C               	retlw	76	;'L'
   350  0283  344B               	retlw	75	;'K'
   351  0284  3420               	retlw	32	;' '
   352  0285  344C               	retlw	76	;'L'
   353  0286  3445               	retlw	69	;'E'
   354  0287  3446               	retlw	70	;'F'
   355  0288  3454               	retlw	84	;'T'
   356  0289  3421               	retlw	33	;'!'
   357  028A  3421               	retlw	33	;'!'
   358  028B  3420               	retlw	32	;' '
   359  028C  3420               	retlw	32	;' '
   360  028D  3400               	retlw	0
   361  028E                     STR_1:
   362  028E  344E               	retlw	78	;'N'
   363  028F  344F               	retlw	79	;'O'
   364  0290  3420               	retlw	32	;' '
   365  0291  3457               	retlw	87	;'W'
   366  0292  3441               	retlw	65	;'A'
   367  0293  3454               	retlw	84	;'T'
   368  0294  3445               	retlw	69	;'E'
   369  0295  3452               	retlw	82	;'R'
   370  0296  3420               	retlw	32	;' '
   371  0297  344C               	retlw	76	;'L'
   372  0298  3445               	retlw	69	;'E'
   373  0299  3446               	retlw	70	;'F'
   374  029A  3454               	retlw	84	;'T'
   375  029B  3421               	retlw	33	;'!'
   376  029C  3421               	retlw	33	;'!'
   377  029D  3420               	retlw	32	;' '
   378  029E  3400               	retlw	0
   379  029F                     STR_15:
   380  029F  3450               	retlw	80	;'P'
   381  02A0  346F               	retlw	111	;'o'
   382  02A1  3475               	retlw	117	;'u'
   383  02A2  3472               	retlw	114	;'r'
   384  02A3  3469               	retlw	105	;'i'
   385  02A4  346E               	retlw	110	;'n'
   386  02A5  3467               	retlw	103	;'g'
   387  02A6  3420               	retlw	32	;' '
   388  02A7  344D               	retlw	77	;'M'
   389  02A8  3469               	retlw	105	;'i'
   390  02A9  346C               	retlw	108	;'l'
   391  02AA  346B               	retlw	107	;'k'
   392  02AB  342E               	retlw	46	;'.'
   393  02AC  342E               	retlw	46	;'.'
   394  02AD  342E               	retlw	46	;'.'
   395  02AE  3420               	retlw	32	;' '
   396  02AF  3400               	retlw	0
   397  02B0                     STR_3:
   398  02B0  344E               	retlw	78	;'N'
   399  02B1  344F               	retlw	79	;'O'
   400  02B2  3420               	retlw	32	;' '
   401  02B3  3443               	retlw	67	;'C'
   402  02B4  344F               	retlw	79	;'O'
   403  02B5  3446               	retlw	70	;'F'
   404  02B6  3446               	retlw	70	;'F'
   405  02B7  3445               	retlw	69	;'E'
   406  02B8  3445               	retlw	69	;'E'
   407  02B9  3420               	retlw	32	;' '
   408  02BA  344C               	retlw	76	;'L'
   409  02BB  3445               	retlw	69	;'E'
   410  02BC  3446               	retlw	70	;'F'
   411  02BD  3454               	retlw	84	;'T'
   412  02BE  3421               	retlw	33	;'!'
   413  02BF  3421               	retlw	33	;'!'
   414  02C0  3400               	retlw	0
   415  02C1                     STR_16:
   416  02C1  3450               	retlw	80	;'P'
   417  02C2  346F               	retlw	111	;'o'
   418  02C3  3475               	retlw	117	;'u'
   419  02C4  3472               	retlw	114	;'r'
   420  02C5  3469               	retlw	105	;'i'
   421  02C6  346E               	retlw	110	;'n'
   422  02C7  3467               	retlw	103	;'g'
   423  02C8  3420               	retlw	32	;' '
   424  02C9  3443               	retlw	67	;'C'
   425  02CA  346F               	retlw	111	;'o'
   426  02CB  3466               	retlw	102	;'f'
   427  02CC  3466               	retlw	102	;'f'
   428  02CD  3465               	retlw	101	;'e'
   429  02CE  3465               	retlw	101	;'e'
   430  02CF  342E               	retlw	46	;'.'
   431  02D0  342E               	retlw	46	;'.'
   432  02D1  3400               	retlw	0
   433  02D2                     STR_13:
   434  02D2  3450               	retlw	80	;'P'
   435  02D3  3472               	retlw	114	;'r'
   436  02D4  3465               	retlw	101	;'e'
   437  02D5  3470               	retlw	112	;'p'
   438  02D6  3461               	retlw	97	;'a'
   439  02D7  3472               	retlw	114	;'r'
   440  02D8  3469               	retlw	105	;'i'
   441  02D9  346E               	retlw	110	;'n'
   442  02DA  3467               	retlw	103	;'g'
   443  02DB  3420               	retlw	32	;' '
   444  02DC  3443               	retlw	67	;'C'
   445  02DD  346F               	retlw	111	;'o'
   446  02DE  3466               	retlw	102	;'f'
   447  02DF  3466               	retlw	102	;'f'
   448  02E0  3465               	retlw	101	;'e'
   449  02E1  3465               	retlw	101	;'e'
   450  02E2  3400               	retlw	0
   451  0206                     
   452                           	psect	cinit
   453  000F                     start_initialization:	
   454                           ; #config settings
   455                           
   456  000F                     __initialization:
   457                           
   458                           ; Initialize objects allocated to BANK0
   459  000F  120A  118A  2490  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   460  0014  00AA               	movwf	__pdataBANK0& (0+127)
   461  0015  120A  118A  2491  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   462  001A  00AB               	movwf	(__pdataBANK0+1)& (0+127)
   463                           
   464                           ; Clear objects allocated to BANK0
   465  001B  01A6               	clrf	__pbssBANK0& (0+127)
   466  001C  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   467  001D  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   468  001E  01A9               	clrf	(__pbssBANK0+3)& (0+127)
   469                           
   470                           ; Clear objects allocated to COMMON
   471  001F  01F8               	clrf	__pbssCOMMON& (0+127)
   472  0020  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   473  0021  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   474  0022  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   475  0023                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478  0023                     __end_of__initialization:
   479  0023  0183               	clrf	3
   480  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssCOMMON
   483  0078                     __pbssCOMMON:
   484  0078                     _coffee_or_milk:
   485  0078                     	ds	2
   486  007A                     _conta:
   487  007A                     	ds	2
   488                           
   489                           	psect	bssBANK0
   490  0026                     __pbssBANK0:
   491  0026                     _preparating:
   492  0026                     	ds	2
   493  0028                     _coffee_flag:
   494  0028                     	ds	2
   495                           
   496                           	psect	dataBANK0
   497  002A                     __pdataBANK0:
   498  002A                     _milk_flag:
   499  002A                     	ds	2
   500                           
   501                           	psect	cstackCOMMON
   502  0070                     __pcstackCOMMON:
   503  0070                     ?_Lcd_Port:
   504  0070                     ?_Lcd_Cmd:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_Lcd_Clear:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_Lcd_Init:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_Lcd_Write_Char:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_Lcd_Write_String:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_TrataInt:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_TrataInt:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528                           
   529                           ; 2 bytes @ 0x0
   530  0070                     	ds	2
   531  0072                     ??_Lcd_Port:
   532  0072                     Lcd_Port@a:	
   533                           ; 1 bytes @ 0x2
   534                           
   535                           
   536                           ; 1 bytes @ 0x2
   537  0072                     	ds	1
   538  0073                     ??_Lcd_Cmd:
   539  0073                     ??_Lcd_Write_Char:	
   540                           ; 1 bytes @ 0x3
   541                           
   542                           
   543                           ; 1 bytes @ 0x3
   544  0073                     	ds	1
   545  0074                     Lcd_Write_Char@temp:
   546                           
   547                           ; 1 bytes @ 0x4
   548  0074                     	ds	1
   549  0075                     Lcd_Cmd@a:
   550  0075                     Lcd_Write_Char@y:	
   551                           ; 1 bytes @ 0x5
   552                           
   553                           
   554                           ; 1 bytes @ 0x5
   555  0075                     	ds	1
   556  0076                     ??_Lcd_Clear:
   557  0076                     ?_Lcd_Set_Cursor:	
   558                           ; 1 bytes @ 0x6
   559                           
   560  0076                     ??_Lcd_Init:	
   561                           ; 1 bytes @ 0x6
   562                           
   563  0076                     Lcd_Set_Cursor@b:	
   564                           ; 1 bytes @ 0x6
   565                           
   566  0076                     Lcd_Write_Char@a:	
   567                           ; 1 bytes @ 0x6
   568                           
   569                           
   570                           ; 1 bytes @ 0x6
   571  0076                     	ds	1
   572  0077                     ??_Lcd_Write_String:
   573                           
   574                           ; 1 bytes @ 0x7
   575  0077                     	ds	1
   576  0078                     ??_main:
   577                           
   578                           	psect	cstackBANK0
   579  0020                     __pcstackBANK0:	
   580                           ; 1 bytes @ 0x8
   581                           
   582  0020                     ??_Lcd_Set_Cursor:
   583  0020                     Lcd_Write_String@i:	
   584                           ; 1 bytes @ 0x0
   585                           
   586                           
   587                           ; 2 bytes @ 0x0
   588  0020                     	ds	2
   589  0022                     Lcd_Set_Cursor@a:
   590  0022                     Lcd_Write_String@a:	
   591                           ; 1 bytes @ 0x2
   592                           
   593                           
   594                           ; 1 bytes @ 0x2
   595  0022                     	ds	1
   596  0023                     Lcd_Set_Cursor@z:
   597                           
   598                           ; 1 bytes @ 0x3
   599  0023                     	ds	1
   600  0024                     Lcd_Set_Cursor@y:
   601                           
   602                           ; 1 bytes @ 0x4
   603  0024                     	ds	1
   604  0025                     Lcd_Set_Cursor@temp:
   605                           
   606                           ; 1 bytes @ 0x5
   607  0025                     	ds	1
   608                           
   609                           	psect	maintext
   610  0027                     __pmaintext:	
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 95 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  2   98[None  ] int 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels required when called: 4
   636 ;; This function calls:
   637 ;;		_Lcd_Clear
   638 ;;		_Lcd_Init
   639 ;;		_Lcd_Set_Cursor
   640 ;;		_Lcd_Write_String
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646  0027                     _main:	
   647                           ;psect for function _main
   648                           
   649  0027                     l1305:	
   650                           ;incstack = 0
   651                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   652                           
   653                           
   654                           ;main.c: 96:     OPTION_REGbits.nRBPU = 0;
   655  0027  1683               	bsf	3,5	;RP0=1, select bank1
   656  0028  1303               	bcf	3,6	;RP1=0, select bank1
   657  0029  1381               	bcf	1,7	;volatile
   658  002A                     l1307:
   659                           
   660                           ;main.c: 98:     TRISD = 0x00;
   661  002A  0188               	clrf	8	;volatile
   662                           
   663                           ;main.c: 99:     TRISC = 0x00;
   664  002B  0187               	clrf	7	;volatile
   665  002C                     l1309:
   666                           
   667                           ;main.c: 100:     PORTCbits.RC0 = 0;
   668  002C  1283               	bcf	3,5	;RP0=0, select bank0
   669  002D  1303               	bcf	3,6	;RP1=0, select bank0
   670  002E  1007               	bcf	7,0	;volatile
   671  002F                     l1311:
   672                           
   673                           ;main.c: 101:     PORTCbits.RC1 = 0;
   674  002F  1087               	bcf	7,1	;volatile
   675  0030                     l1313:
   676                           
   677                           ;main.c: 102:     PORTCbits.RC2 = 0;
   678  0030  1107               	bcf	7,2	;volatile
   679  0031                     l1315:
   680                           
   681                           ;main.c: 103:     PORTCbits.RC3 = 0;
   682  0031  1187               	bcf	7,3	;volatile
   683  0032                     l1317:
   684                           
   685                           ;main.c: 105:     INTCONbits.GIE = 1;
   686  0032  178B               	bsf	11,7	;volatile
   687  0033                     l1319:
   688                           
   689                           ;main.c: 106:     INTCONbits.PEIE = 1;
   690  0033  170B               	bsf	11,6	;volatile
   691  0034                     l1321:
   692                           
   693                           ;main.c: 107:     PIE1bits.TMR1IE = 1;
   694  0034  1683               	bsf	3,5	;RP0=1, select bank1
   695  0035  1303               	bcf	3,6	;RP1=0, select bank1
   696  0036  140C               	bsf	12,0	;volatile
   697  0037                     l1323:
   698                           
   699                           ;main.c: 109:     T1CONbits.TMR1CS = 0;
   700  0037  1283               	bcf	3,5	;RP0=0, select bank0
   701  0038  1303               	bcf	3,6	;RP1=0, select bank0
   702  0039  1090               	bcf	16,1	;volatile
   703  003A                     l1325:
   704                           
   705                           ;main.c: 110:     T1CONbits.T1CKPS0 = 1;
   706  003A  1610               	bsf	16,4	;volatile
   707  003B                     l1327:
   708                           
   709                           ;main.c: 111:     T1CONbits.T1CKPS1 = 1;
   710  003B  1690               	bsf	16,5	;volatile
   711  003C                     l1329:
   712                           
   713                           ;main.c: 113:     TMR1L = 0xDC;
   714  003C  30DC               	movlw	220
   715  003D  008E               	movwf	14	;volatile
   716  003E                     l1331:
   717                           
   718                           ;main.c: 114:     TMR1H = 0x0B;
   719  003E  300B               	movlw	11
   720  003F  008F               	movwf	15	;volatile
   721  0040                     l1333:
   722                           
   723                           ;main.c: 116:     Lcd_Init();
   724  0040  120A  118A  22E3  120A  118A  	fcall	_Lcd_Init
   725  0045                     l1335:
   726                           
   727                           ;main.c: 119:         coffee_flag = 0;
   728  0045  1283               	bcf	3,5	;RP0=0, select bank0
   729  0046  1303               	bcf	3,6	;RP1=0, select bank0
   730  0047  01A8               	clrf	_coffee_flag
   731  0048  01A9               	clrf	_coffee_flag+1
   732  0049                     l1337:
   733                           
   734                           ;main.c: 120:         milk_flag = 0;
   735  0049  01AA               	clrf	_milk_flag
   736  004A  01AB               	clrf	_milk_flag+1
   737  004B                     l1339:
   738                           
   739                           ;main.c: 121:         if (PORTBbits.RB3 == 1 && PORTBbits.RB5 == 0) {
   740  004B  1D86               	btfss	6,3	;volatile
   741  004C  284E               	goto	u911
   742  004D  284F               	goto	u910
   743  004E                     u911:
   744  004E  2870               	goto	l100
   745  004F                     u910:
   746  004F                     l1341:
   747  004F  1A86               	btfsc	6,5	;volatile
   748  0050  2852               	goto	u921
   749  0051  2853               	goto	u920
   750  0052                     u921:
   751  0052  2870               	goto	l100
   752  0053                     u920:
   753  0053                     l1343:
   754                           
   755                           ;main.c: 122:             Lcd_Set_Cursor(1, 1);
   756  0053  01F6               	clrf	Lcd_Set_Cursor@b
   757  0054  0AF6               	incf	Lcd_Set_Cursor@b,f
   758  0055  3001               	movlw	1
   759  0056  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   760  005B                     l1345:
   761                           
   762                           ;main.c: 123:             Lcd_Write_String("NO WATER LEFT!! ");
   763  005B  3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   764  005C  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   765  0061                     l1347:
   766                           
   767                           ;main.c: 124:             Lcd_Set_Cursor(2, 1);
   768  0061  01F6               	clrf	Lcd_Set_Cursor@b
   769  0062  0AF6               	incf	Lcd_Set_Cursor@b,f
   770  0063  3002               	movlw	2
   771  0064  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   772                           
   773                           ;main.c: 125:             Lcd_Write_String("                ");
   774  0069  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   775  006A  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   776                           
   777                           ;main.c: 126:         } else if (PORTBbits.RB3 == 0 && PORTBbits.RB5 == 1) {
   778  006F  2845               	goto	l1335
   779  0070                     l100:
   780  0070  1986               	btfsc	6,3	;volatile
   781  0071  2873               	goto	u931
   782  0072  2874               	goto	u930
   783  0073                     u931:
   784  0073  2895               	goto	l102
   785  0074                     u930:
   786  0074                     l1349:
   787  0074  1E86               	btfss	6,5	;volatile
   788  0075  2877               	goto	u941
   789  0076  2878               	goto	u940
   790  0077                     u941:
   791  0077  2895               	goto	l102
   792  0078                     u940:
   793  0078                     l1351:
   794                           
   795                           ;main.c: 127:             Lcd_Set_Cursor(1, 1);
   796  0078  01F6               	clrf	Lcd_Set_Cursor@b
   797  0079  0AF6               	incf	Lcd_Set_Cursor@b,f
   798  007A  3001               	movlw	1
   799  007B  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   800  0080                     l1353:
   801                           
   802                           ;main.c: 128:             Lcd_Write_String("NO COFFEE LEFT!!");
   803  0080  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   804  0081  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   805  0086                     l1355:
   806                           
   807                           ;main.c: 129:             Lcd_Set_Cursor(2, 1);
   808  0086  01F6               	clrf	Lcd_Set_Cursor@b
   809  0087  0AF6               	incf	Lcd_Set_Cursor@b,f
   810  0088  3002               	movlw	2
   811  0089  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   812                           
   813                           ;main.c: 130:             Lcd_Write_String("                ");
   814  008E  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   815  008F  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   816                           
   817                           ;main.c: 131:         } else if (PORTBbits.RB3 == 1 && PORTBbits.RB5 == 1) {
   818  0094  2845               	goto	l1335
   819  0095                     l102:
   820  0095  1D86               	btfss	6,3	;volatile
   821  0096  2898               	goto	u951
   822  0097  2899               	goto	u950
   823  0098                     u951:
   824  0098  28BA               	goto	l104
   825  0099                     u950:
   826  0099                     l1357:
   827  0099  1E86               	btfss	6,5	;volatile
   828  009A  289C               	goto	u961
   829  009B  289D               	goto	u960
   830  009C                     u961:
   831  009C  28BA               	goto	l104
   832  009D                     u960:
   833  009D                     l1359:
   834                           
   835                           ;main.c: 132:             Lcd_Set_Cursor(1, 1);
   836  009D  01F6               	clrf	Lcd_Set_Cursor@b
   837  009E  0AF6               	incf	Lcd_Set_Cursor@b,f
   838  009F  3001               	movlw	1
   839  00A0  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   840  00A5                     l1361:
   841                           
   842                           ;main.c: 133:             Lcd_Write_String("NO WATER LEFT!! ");
   843  00A5  3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   844  00A6  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   845  00AB                     l1363:
   846                           
   847                           ;main.c: 134:             Lcd_Set_Cursor(2, 1);
   848  00AB  01F6               	clrf	Lcd_Set_Cursor@b
   849  00AC  0AF6               	incf	Lcd_Set_Cursor@b,f
   850  00AD  3002               	movlw	2
   851  00AE  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   852                           
   853                           ;main.c: 135:             Lcd_Write_String("NO COFFEE LEFT!!");
   854  00B3  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   855  00B4  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   856                           
   857                           ;main.c: 136:         } else if (PORTBbits.RB4 == 1 && PORTBbits.RB2 == 1) {
   858  00B9  2845               	goto	l1335
   859  00BA                     l104:
   860  00BA  1E06               	btfss	6,4	;volatile
   861  00BB  28BD               	goto	u971
   862  00BC  28BE               	goto	u970
   863  00BD                     u971:
   864  00BD  28D1               	goto	l1371
   865  00BE                     u970:
   866  00BE                     l1365:
   867  00BE  1D06               	btfss	6,2	;volatile
   868  00BF  28C1               	goto	u981
   869  00C0  28C2               	goto	u980
   870  00C1                     u981:
   871  00C1  28D1               	goto	l1371
   872  00C2                     u980:
   873  00C2                     l1367:
   874                           
   875                           ;main.c: 137:             Lcd_Set_Cursor(1, 1);
   876  00C2  01F6               	clrf	Lcd_Set_Cursor@b
   877  00C3  0AF6               	incf	Lcd_Set_Cursor@b,f
   878  00C4  3001               	movlw	1
   879  00C5  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   880  00CA                     l1369:
   881                           
   882                           ;main.c: 138:             Lcd_Write_String("NO MILK LEFT!!  ");
   883  00CA  3078               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   884  00CB  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   885                           
   886                           ;main.c: 139:         } else {
   887  00D0  2845               	goto	l1335
   888  00D1                     l1371:
   889                           
   890                           ;main.c: 140:             Lcd_Set_Cursor(1, 1);
   891  00D1  01F6               	clrf	Lcd_Set_Cursor@b
   892  00D2  0AF6               	incf	Lcd_Set_Cursor@b,f
   893  00D3  3001               	movlw	1
   894  00D4  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   895  00D9                     l1373:
   896                           
   897                           ;main.c: 141:             Lcd_Write_String("Your coffee:    ");
   898  00D9  3023               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   899  00DA  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   900  00DF                     l1375:
   901                           
   902                           ;main.c: 142:             Lcd_Set_Cursor(2, 1);
   903  00DF  01F6               	clrf	Lcd_Set_Cursor@b
   904  00E0  0AF6               	incf	Lcd_Set_Cursor@b,f
   905  00E1  3002               	movlw	2
   906  00E2  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
   907  00E7                     l1377:
   908                           
   909                           ;main.c: 144:             if (PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && PORTBbits.RB4 
      +                          == 0) {
   910  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   911  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   912  00E9  1C86               	btfss	6,1	;volatile
   913  00EA  28EC               	goto	u991
   914  00EB  28ED               	goto	u990
   915  00EC                     u991:
   916  00EC  28FC               	goto	l108
   917  00ED                     u990:
   918  00ED                     l1379:
   919  00ED  1D06               	btfss	6,2	;volatile
   920  00EE  28F0               	goto	u1001
   921  00EF  28F1               	goto	u1000
   922  00F0                     u1001:
   923  00F0  28FC               	goto	l108
   924  00F1                     u1000:
   925  00F1                     l1381:
   926  00F1  1A06               	btfsc	6,4	;volatile
   927  00F2  28F4               	goto	u1011
   928  00F3  28F5               	goto	u1010
   929  00F4                     u1011:
   930  00F4  28FC               	goto	l108
   931  00F5                     u1010:
   932  00F5                     l1383:
   933                           
   934                           ;main.c: 145:                 Lcd_Write_String("Cold w/ Milk    ");
   935  00F5  3045               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   936  00F6  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   937                           
   938                           ;main.c: 146:             } else if (PORTBbits.RB1 == 1 && PORTBbits.RB2 == 0) {
   939  00FB  292D               	goto	l1399
   940  00FC                     l108:
   941  00FC  1C86               	btfss	6,1	;volatile
   942  00FD  28FF               	goto	u1021
   943  00FE  2900               	goto	u1020
   944  00FF                     u1021:
   945  00FF  290B               	goto	l110
   946  0100                     u1020:
   947  0100                     l1385:
   948  0100  1906               	btfsc	6,2	;volatile
   949  0101  2903               	goto	u1031
   950  0102  2904               	goto	u1030
   951  0103                     u1031:
   952  0103  290B               	goto	l110
   953  0104                     u1030:
   954  0104                     l1387:
   955                           
   956                           ;main.c: 147:                 Lcd_Write_String("Cold wo/ Milk   ");
   957  0104  3067               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   958  0105  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   959                           
   960                           ;main.c: 148:             } else if (PORTBbits.RB1 == 0 && PORTBbits.RB2 == 1 && PORTBbi
      +                          ts.RB4 == 0) {
   961  010A  292D               	goto	l1399
   962  010B                     l110:
   963  010B  1886               	btfsc	6,1	;volatile
   964  010C  290E               	goto	u1041
   965  010D  290F               	goto	u1040
   966  010E                     u1041:
   967  010E  291E               	goto	l112
   968  010F                     u1040:
   969  010F                     l1389:
   970  010F  1D06               	btfss	6,2	;volatile
   971  0110  2912               	goto	u1051
   972  0111  2913               	goto	u1050
   973  0112                     u1051:
   974  0112  291E               	goto	l112
   975  0113                     u1050:
   976  0113                     l1391:
   977  0113  1A06               	btfsc	6,4	;volatile
   978  0114  2916               	goto	u1061
   979  0115  2917               	goto	u1060
   980  0116                     u1061:
   981  0116  291E               	goto	l112
   982  0117                     u1060:
   983  0117                     l1393:
   984                           
   985                           ;main.c: 149:                 Lcd_Write_String("Hot w/ Milk     ");
   986  0117  3012               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   987  0118  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
   988                           
   989                           ;main.c: 150:             } else if (PORTBbits.RB1 == 0 && PORTBbits.RB2 == 0) {
   990  011D  292D               	goto	l1399
   991  011E                     l112:
   992  011E  1886               	btfsc	6,1	;volatile
   993  011F  2921               	goto	u1071
   994  0120  2922               	goto	u1070
   995  0121                     u1071:
   996  0121  292D               	goto	l111
   997  0122                     u1070:
   998  0122                     l1395:
   999  0122  1906               	btfsc	6,2	;volatile
  1000  0123  2925               	goto	u1081
  1001  0124  2926               	goto	u1080
  1002  0125                     u1081:
  1003  0125  292D               	goto	l111
  1004  0126                     u1080:
  1005  0126                     l1397:
  1006                           
  1007                           ;main.c: 151:                 Lcd_Write_String("Hot wo/ Milk    ");
  1008  0126  3034               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1009  0127  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
  1010  012C  292D               	goto	l1399
  1011  012D                     l111:
  1012  012D                     l1399:
  1013                           
  1014                           ;main.c: 154:             if (PORTBbits.RB7 == 1) {
  1015  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1016  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1017  012F  1F86               	btfss	6,7	;volatile
  1018  0130  2932               	goto	u1091
  1019  0131  2933               	goto	u1090
  1020  0132                     u1091:
  1021  0132  29AC               	goto	l103
  1022  0133                     u1090:
  1023  0133                     l1401:
  1024                           
  1025                           ;main.c: 155:                 T1CONbits.TMR1ON = 0;
  1026  0133  1010               	bcf	16,0	;volatile
  1027  0134                     l1403:
  1028                           
  1029                           ;main.c: 156:                 preparating = 1;
  1030  0134  3001               	movlw	1
  1031  0135  00A6               	movwf	_preparating
  1032  0136  3000               	movlw	0
  1033  0137  00A7               	movwf	_preparating+1
  1034  0138                     l1405:
  1035                           
  1036                           ;main.c: 157:                 Lcd_Clear();
  1037  0138  120A  118A  2483  120A  118A  	fcall	_Lcd_Clear
  1038  013D                     l1407:
  1039                           
  1040                           ;main.c: 158:                 Lcd_Set_Cursor(1, 1);
  1041  013D  01F6               	clrf	Lcd_Set_Cursor@b
  1042  013E  0AF6               	incf	Lcd_Set_Cursor@b,f
  1043  013F  3001               	movlw	1
  1044  0140  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
  1045  0145                     l1409:
  1046                           
  1047                           ;main.c: 159:                 Lcd_Write_String("Preparing Coffee");
  1048  0145  30CD               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1049  0146  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
  1050  014B                     l1411:
  1051                           
  1052                           ;main.c: 160:                 if (PORTBbits.RB1 == 0) {
  1053  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1054  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1055  014D  1886               	btfsc	6,1	;volatile
  1056  014E  2950               	goto	u1101
  1057  014F  2951               	goto	u1100
  1058  0150                     u1101:
  1059  0150  2968               	goto	l116
  1060  0151                     u1100:
  1061  0151                     l1413:
  1062                           
  1063                           ;main.c: 161:                     Lcd_Set_Cursor(2, 1);
  1064  0151  01F6               	clrf	Lcd_Set_Cursor@b
  1065  0152  0AF6               	incf	Lcd_Set_Cursor@b,f
  1066  0153  3002               	movlw	2
  1067  0154  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
  1068  0159                     l1415:
  1069                           
  1070                           ;main.c: 162:                     Lcd_Write_String("Warming Up...   ");
  1071  0159  3056               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1072  015A  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
  1073                           
  1074                           ;main.c: 163:                     while (PORTBbits.RB6 == 0) {
  1075  015F  2961               	goto	l117
  1076  0160                     l118:
  1077                           
  1078                           ;main.c: 164:                         PORTCbits.RC0 = 1;
  1079  0160  1407               	bsf	7,0	;volatile
  1080  0161                     l117:	
  1081                           ;main.c: 165:                     }
  1082                           
  1083                           
  1084                           ;main.c: 163:                     while (PORTBbits.RB6 == 0) {
  1085  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0163  1F06               	btfss	6,6	;volatile
  1088  0164  2966               	goto	u1111
  1089  0165  2967               	goto	u1110
  1090  0166                     u1111:
  1091  0166  2960               	goto	l118
  1092  0167                     u1110:
  1093  0167                     l119:
  1094                           
  1095                           ;main.c: 166:                     PORTCbits.RC0 = 0;
  1096  0167  1007               	bcf	7,0	;volatile
  1097  0168                     l116:	
  1098                           ;main.c: 167:                 }
  1099                           
  1100                           
  1101                           ;main.c: 168:                 T1CONbits.TMR1ON = 1;
  1102  0168  1410               	bsf	16,0	;volatile
  1103                           
  1104                           ;main.c: 169:                 if (PORTBbits.RB2 == 1) {
  1105  0169  1D06               	btfss	6,2	;volatile
  1106  016A  296C               	goto	u1121
  1107  016B  296D               	goto	u1120
  1108  016C                     u1121:
  1109  016C  298C               	goto	l1427
  1110  016D                     u1120:
  1111  016D                     l1417:
  1112                           
  1113                           ;main.c: 170:                     milk_flag = 0;
  1114  016D  01AA               	clrf	_milk_flag
  1115  016E  01AB               	clrf	_milk_flag+1
  1116  016F                     l1419:
  1117                           
  1118                           ;main.c: 171:                     Lcd_Set_Cursor(2, 1);
  1119  016F  01F6               	clrf	Lcd_Set_Cursor@b
  1120  0170  0AF6               	incf	Lcd_Set_Cursor@b,f
  1121  0171  3002               	movlw	2
  1122  0172  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
  1123  0177                     l1421:
  1124                           
  1125                           ;main.c: 172:                     Lcd_Write_String("Pouring Milk... ");
  1126  0177  309A               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1127  0178  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
  1128                           
  1129                           ;main.c: 174:                     while (milk_flag == 0) {
  1130  017D  2983               	goto	l1425
  1131  017E                     l122:
  1132                           
  1133                           ;main.c: 175:                         PORTCbits.RC2 = 1;
  1134  017E  1507               	bsf	7,2	;volatile
  1135  017F                     l1423:
  1136                           
  1137                           ;main.c: 176:                         coffee_or_milk = 1;
  1138  017F  3001               	movlw	1
  1139  0180  00F8               	movwf	_coffee_or_milk
  1140  0181  3000               	movlw	0
  1141  0182  00F9               	movwf	_coffee_or_milk+1
  1142  0183                     l1425:
  1143                           
  1144                           ;main.c: 174:                     while (milk_flag == 0) {
  1145  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0185  082A               	movf	_milk_flag,w
  1148  0186  042B               	iorwf	_milk_flag+1,w
  1149  0187  1903               	btfsc	3,2
  1150  0188  298A               	goto	u1131
  1151  0189  298B               	goto	u1130
  1152  018A                     u1131:
  1153  018A  297E               	goto	l122
  1154  018B                     u1130:
  1155  018B                     l123:
  1156                           
  1157                           ;main.c: 178:                     PORTCbits.RC2 = 0;
  1158  018B  1107               	bcf	7,2	;volatile
  1159  018C                     l1427:
  1160                           
  1161                           ;main.c: 181:                 Lcd_Set_Cursor(2, 1);
  1162  018C  01F6               	clrf	Lcd_Set_Cursor@b
  1163  018D  0AF6               	incf	Lcd_Set_Cursor@b,f
  1164  018E  3002               	movlw	2
  1165  018F  120A  118A  2340  120A  118A  	fcall	_Lcd_Set_Cursor
  1166  0194                     l1429:
  1167                           
  1168                           ;main.c: 182:                 Lcd_Write_String("Pouring Coffee..");
  1169  0194  30BC               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1170  0195  120A  118A  241E  120A  118A  	fcall	_Lcd_Write_String
  1171                           
  1172                           ;main.c: 183:                 while (coffee_flag == 0) {
  1173  019A  299E               	goto	l1433
  1174  019B                     l125:
  1175                           
  1176                           ;main.c: 184:                     PORTCbits.RC1 = 1;
  1177  019B  1487               	bsf	7,1	;volatile
  1178  019C                     l1431:
  1179                           
  1180                           ;main.c: 185:                     coffee_or_milk = 0;
  1181  019C  01F8               	clrf	_coffee_or_milk
  1182  019D  01F9               	clrf	_coffee_or_milk+1
  1183  019E                     l1433:
  1184                           
  1185                           ;main.c: 183:                 while (coffee_flag == 0) {
  1186  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1187  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1188  01A0  0828               	movf	_coffee_flag,w
  1189  01A1  0429               	iorwf	_coffee_flag+1,w
  1190  01A2  1903               	btfsc	3,2
  1191  01A3  29A5               	goto	u1141
  1192  01A4  29A6               	goto	u1140
  1193  01A5                     u1141:
  1194  01A5  299B               	goto	l125
  1195  01A6                     u1140:
  1196  01A6                     l126:
  1197                           
  1198                           ;main.c: 187:                 PORTCbits.RC1 = 0;
  1199  01A6  1087               	bcf	7,1	;volatile
  1200  01A7                     l1435:
  1201                           
  1202                           ;main.c: 188:                 coffee_or_milk = 2;
  1203  01A7  3002               	movlw	2
  1204  01A8  00F8               	movwf	_coffee_or_milk
  1205  01A9  3000               	movlw	0
  1206  01AA  00F9               	movwf	_coffee_or_milk+1
  1207  01AB  2845               	goto	l1335
  1208  01AC                     l103:
  1209  01AC  2845               	goto	l1335
  1210  01AD  120A  118A  280C   	ljmp	start
  1211  01B0                     __end_of_main:
  1212                           
  1213                           	psect	text1
  1214  041E                     __ptext1:	
  1215 ;; *************** function _Lcd_Write_String *****************
  1216 ;; Defined at:
  1217 ;;		line 97 in file "./lcd.h"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  a               1    wreg     PTR unsigned char 
  1220 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  1221 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1222 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1223 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  a               1    2[BANK0 ] PTR unsigned char 
  1226 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  1227 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1228 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1229 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1230 ;;  i               2    0[BANK0 ] int 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         0       3       0       0       0
  1242 ;;      Temps:          0       0       0       0       0
  1243 ;;      Totals:         0       3       0       0       0
  1244 ;;Total ram usage:        3 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 3
  1247 ;; This function calls:
  1248 ;;		_Lcd_Write_Char
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254  041E                     _Lcd_Write_String:	
  1255                           ;psect for function _Lcd_Write_String
  1256                           
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1260                           ;Lcd_Write_String@a stored from wreg
  1261  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1262  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0420  00A2               	movwf	Lcd_Write_String@a
  1264  0421                     l1293:
  1265                           
  1266                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  1267  0421  01A0               	clrf	Lcd_Write_String@i
  1268  0422  01A1               	clrf	Lcd_Write_String@i+1
  1269  0423  2C39               	goto	l1299
  1270  0424                     l1295:
  1271                           
  1272                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  1273  0424  0820               	movf	Lcd_Write_String@i,w
  1274  0425  0722               	addwf	Lcd_Write_String@a,w
  1275  0426  0084               	movwf	4
  1276  0427  120A  118A  2200  120A  118A  	fcall	stringdir
  1277  042C  120A  118A  23E7  120A  118A  	fcall	_Lcd_Write_Char
  1278  0431                     l1297:
  1279  0431  3001               	movlw	1
  1280  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0434  07A0               	addwf	Lcd_Write_String@i,f
  1283  0435  1803               	skipnc
  1284  0436  0AA1               	incf	Lcd_Write_String@i+1,f
  1285  0437  3000               	movlw	0
  1286  0438  07A1               	addwf	Lcd_Write_String@i+1,f
  1287  0439                     l1299:
  1288  0439  0820               	movf	Lcd_Write_String@i,w
  1289  043A  0722               	addwf	Lcd_Write_String@a,w
  1290  043B  0084               	movwf	4
  1291  043C  120A  118A  2200  120A  118A  	fcall	stringdir
  1292  0441  3A00               	xorlw	0
  1293  0442  1D03               	skipz
  1294  0443  2C45               	goto	u901
  1295  0444  2C46               	goto	u900
  1296  0445                     u901:
  1297  0445  2C24               	goto	l1295
  1298  0446                     u900:
  1299  0446                     l65:
  1300  0446  0008               	return
  1301  0447                     __end_of_Lcd_Write_String:
  1302                           
  1303                           	psect	text2
  1304  03E7                     __ptext2:	
  1305 ;; *************** function _Lcd_Write_Char *****************
  1306 ;; Defined at:
  1307 ;;		line 81 in file "./lcd.h"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  a               1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  a               1    6[COMMON] unsigned char 
  1312 ;;  y               1    5[COMMON] unsigned char 
  1313 ;;  temp            1    4[COMMON] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0       0       0       0       0
  1324 ;;      Locals:         3       0       0       0       0
  1325 ;;      Temps:          1       0       0       0       0
  1326 ;;      Totals:         4       0       0       0       0
  1327 ;;Total ram usage:        4 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 2
  1330 ;; This function calls:
  1331 ;;		_Lcd_Port
  1332 ;; This function is called by:
  1333 ;;		_Lcd_Write_String
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337  03E7                     _Lcd_Write_Char:	
  1338                           ;psect for function _Lcd_Write_Char
  1339                           
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1343                           ;Lcd_Write_Char@a stored from wreg
  1344  03E7  00F6               	movwf	Lcd_Write_Char@a
  1345  03E8                     l1241:
  1346                           
  1347                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  1348  03E8  0876               	movf	Lcd_Write_Char@a,w
  1349  03E9  390F               	andlw	15
  1350  03EA  00F3               	movwf	??_Lcd_Write_Char
  1351  03EB  0873               	movf	??_Lcd_Write_Char,w
  1352  03EC  00F4               	movwf	Lcd_Write_Char@temp
  1353                           
  1354                           ;./lcd.h: 85:    y = a&0xF0;
  1355  03ED  0876               	movf	Lcd_Write_Char@a,w
  1356  03EE  39F0               	andlw	240
  1357  03EF  00F3               	movwf	??_Lcd_Write_Char
  1358  03F0  0873               	movf	??_Lcd_Write_Char,w
  1359  03F1  00F5               	movwf	Lcd_Write_Char@y
  1360  03F2                     l1243:
  1361                           
  1362                           ;./lcd.h: 86:    PORTDbits.RD0 = 1;
  1363  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1364  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1365  03F4  1408               	bsf	8,0	;volatile
  1366  03F5                     l1245:
  1367                           
  1368                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  1369  03F5  0875               	movf	Lcd_Write_Char@y,w
  1370  03F6  00F3               	movwf	??_Lcd_Write_Char
  1371  03F7  3004               	movlw	4
  1372  03F8                     u855:
  1373  03F8  1003               	clrc
  1374  03F9  0CF3               	rrf	??_Lcd_Write_Char,f
  1375  03FA  3EFF               	addlw	-1
  1376  03FB  1D03               	skipz
  1377  03FC  2BF8               	goto	u855
  1378  03FD  0873               	movf	??_Lcd_Write_Char,w
  1379  03FE  120A  118A  2447  120A  118A  	fcall	_Lcd_Port
  1380  0403                     l1247:
  1381                           
  1382                           ;./lcd.h: 88:    PORTDbits.RD2 = 1;
  1383  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0405  1508               	bsf	8,2	;volatile
  1386  0406                     l1249:
  1387                           
  1388                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1389  0406  300D               	movlw	13
  1390  0407  00F3               	movwf	??_Lcd_Write_Char
  1391  0408                     u1157:
  1392  0408  0BF3               	decfsz	??_Lcd_Write_Char,f
  1393  0409  2C08               	goto	u1157
  1394  040A                     l1251:
  1395                           
  1396                           ;./lcd.h: 90:    PORTDbits.RD2 = 0;
  1397  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1398  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1399  040C  1108               	bcf	8,2	;volatile
  1400  040D                     l1253:
  1401                           
  1402                           ;./lcd.h: 91:    Lcd_Port(temp);
  1403  040D  0874               	movf	Lcd_Write_Char@temp,w
  1404  040E  120A  118A  2447  120A  118A  	fcall	_Lcd_Port
  1405  0413                     l1255:
  1406                           
  1407                           ;./lcd.h: 92:    PORTDbits.RD2 = 1;
  1408  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0415  1508               	bsf	8,2	;volatile
  1411  0416                     l1257:
  1412                           
  1413                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1414  0416  300D               	movlw	13
  1415  0417  00F3               	movwf	??_Lcd_Write_Char
  1416  0418                     u1167:
  1417  0418  0BF3               	decfsz	??_Lcd_Write_Char,f
  1418  0419  2C18               	goto	u1167
  1419  041A                     l1259:
  1420                           
  1421                           ;./lcd.h: 94:    PORTDbits.RD2 = 0;
  1422  041A  1283               	bcf	3,5	;RP0=0, select bank0
  1423  041B  1303               	bcf	3,6	;RP1=0, select bank0
  1424  041C  1108               	bcf	8,2	;volatile
  1425  041D                     l59:
  1426  041D  0008               	return
  1427  041E                     __end_of_Lcd_Write_Char:
  1428                           
  1429                           	psect	text3
  1430  0340                     __ptext3:	
  1431 ;; *************** function _Lcd_Set_Cursor *****************
  1432 ;; Defined at:
  1433 ;;		line 41 in file "./lcd.h"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  a               1    wreg     unsigned char 
  1436 ;;  b               1    6[COMMON] unsigned char 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  a               1    2[BANK0 ] unsigned char 
  1439 ;;  temp            1    5[BANK0 ] unsigned char 
  1440 ;;  y               1    4[BANK0 ] unsigned char 
  1441 ;;  z               1    3[BANK0 ] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         1       0       0       0       0
  1452 ;;      Locals:         0       4       0       0       0
  1453 ;;      Temps:          0       2       0       0       0
  1454 ;;      Totals:         1       6       0       0       0
  1455 ;;Total ram usage:        7 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 3
  1458 ;; This function calls:
  1459 ;;		_Lcd_Cmd
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465  0340                     _Lcd_Set_Cursor:	
  1466                           ;psect for function _Lcd_Set_Cursor
  1467                           
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1471                           ;Lcd_Set_Cursor@a stored from wreg
  1472  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0342  00A2               	movwf	Lcd_Set_Cursor@a
  1475  0343                     l1263:
  1476                           
  1477                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  1478  0343  0322               	decf	Lcd_Set_Cursor@a,w
  1479  0344  1D03               	btfss	3,2
  1480  0345  2B47               	goto	u861
  1481  0346  2B48               	goto	u860
  1482  0347                     u861:
  1483  0347  2B6D               	goto	l1273
  1484  0348                     u860:
  1485  0348                     l1265:
  1486                           
  1487                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  1488  0348  0876               	movf	Lcd_Set_Cursor@b,w
  1489  0349  3E7F               	addlw	127
  1490  034A  00A0               	movwf	??_Lcd_Set_Cursor
  1491  034B  0820               	movf	??_Lcd_Set_Cursor,w
  1492  034C  00A5               	movwf	Lcd_Set_Cursor@temp
  1493                           
  1494                           ;./lcd.h: 47:   z = temp>>4;
  1495  034D  0825               	movf	Lcd_Set_Cursor@temp,w
  1496  034E  00A0               	movwf	??_Lcd_Set_Cursor
  1497  034F  3004               	movlw	4
  1498  0350                     u875:
  1499  0350  1003               	clrc
  1500  0351  0CA0               	rrf	??_Lcd_Set_Cursor,f
  1501  0352  3EFF               	addlw	-1
  1502  0353  1D03               	skipz
  1503  0354  2B50               	goto	u875
  1504  0355  0820               	movf	??_Lcd_Set_Cursor,w
  1505  0356  00A1               	movwf	??_Lcd_Set_Cursor+1
  1506  0357  0821               	movf	??_Lcd_Set_Cursor+1,w
  1507  0358  00A3               	movwf	Lcd_Set_Cursor@z
  1508  0359                     l1267:
  1509                           
  1510                           ;./lcd.h: 48:   y = temp & 0x0F;
  1511  0359  0825               	movf	Lcd_Set_Cursor@temp,w
  1512  035A  390F               	andlw	15
  1513  035B  00A0               	movwf	??_Lcd_Set_Cursor
  1514  035C  0820               	movf	??_Lcd_Set_Cursor,w
  1515  035D  00A4               	movwf	Lcd_Set_Cursor@y
  1516  035E                     l1269:
  1517                           
  1518                           ;./lcd.h: 49:   Lcd_Cmd(z);
  1519  035E  0823               	movf	Lcd_Set_Cursor@z,w
  1520  035F  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1521  0364                     l1271:
  1522                           
  1523                           ;./lcd.h: 50:   Lcd_Cmd(y);
  1524  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0366  0824               	movf	Lcd_Set_Cursor@y,w
  1527  0367  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1528                           
  1529                           ;./lcd.h: 51:  }
  1530  036C  2B97               	goto	l53
  1531  036D                     l1273:
  1532  036D  3002               	movlw	2
  1533  036E  0622               	xorwf	Lcd_Set_Cursor@a,w
  1534  036F  1D03               	btfss	3,2
  1535  0370  2B72               	goto	u881
  1536  0371  2B73               	goto	u880
  1537  0372                     u881:
  1538  0372  2B97               	goto	l53
  1539  0373                     u880:
  1540  0373                     l1275:
  1541                           
  1542                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  1543  0373  0876               	movf	Lcd_Set_Cursor@b,w
  1544  0374  3EBF               	addlw	191
  1545  0375  00A0               	movwf	??_Lcd_Set_Cursor
  1546  0376  0820               	movf	??_Lcd_Set_Cursor,w
  1547  0377  00A5               	movwf	Lcd_Set_Cursor@temp
  1548                           
  1549                           ;./lcd.h: 55:   z = temp>>4;
  1550  0378  0825               	movf	Lcd_Set_Cursor@temp,w
  1551  0379  00A0               	movwf	??_Lcd_Set_Cursor
  1552  037A  3004               	movlw	4
  1553  037B                     u895:
  1554  037B  1003               	clrc
  1555  037C  0CA0               	rrf	??_Lcd_Set_Cursor,f
  1556  037D  3EFF               	addlw	-1
  1557  037E  1D03               	skipz
  1558  037F  2B7B               	goto	u895
  1559  0380  0820               	movf	??_Lcd_Set_Cursor,w
  1560  0381  00A1               	movwf	??_Lcd_Set_Cursor+1
  1561  0382  0821               	movf	??_Lcd_Set_Cursor+1,w
  1562  0383  00A3               	movwf	Lcd_Set_Cursor@z
  1563  0384                     l1277:
  1564                           
  1565                           ;./lcd.h: 56:   y = temp & 0x0F;
  1566  0384  0825               	movf	Lcd_Set_Cursor@temp,w
  1567  0385  390F               	andlw	15
  1568  0386  00A0               	movwf	??_Lcd_Set_Cursor
  1569  0387  0820               	movf	??_Lcd_Set_Cursor,w
  1570  0388  00A4               	movwf	Lcd_Set_Cursor@y
  1571  0389                     l1279:
  1572                           
  1573                           ;./lcd.h: 57:   Lcd_Cmd(z);
  1574  0389  0823               	movf	Lcd_Set_Cursor@z,w
  1575  038A  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1576  038F                     l1281:
  1577                           
  1578                           ;./lcd.h: 58:   Lcd_Cmd(y);
  1579  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0391  0824               	movf	Lcd_Set_Cursor@y,w
  1582  0392  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1583  0397                     l53:
  1584  0397  0008               	return
  1585  0398                     __end_of_Lcd_Set_Cursor:
  1586                           
  1587                           	psect	text4
  1588  02E3                     __ptext4:	
  1589 ;; *************** function _Lcd_Init *****************
  1590 ;; Defined at:
  1591 ;;		line 62 in file "./lcd.h"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0
  1607 ;;      Temps:          2       0       0       0       0
  1608 ;;      Totals:         2       0       0       0       0
  1609 ;;Total ram usage:        2 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 3
  1612 ;; This function calls:
  1613 ;;		_Lcd_Cmd
  1614 ;;		_Lcd_Port
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620  02E3                     _Lcd_Init:	
  1621                           ;psect for function _Lcd_Init
  1622                           
  1623  02E3                     l1283:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1626                           
  1627                           
  1628                           ;./lcd.h: 64:   Lcd_Port(0x00);
  1629  02E3  3000               	movlw	0
  1630  02E4  120A  118A  2447  120A  118A  	fcall	_Lcd_Port
  1631  02E9                     l1285:
  1632                           
  1633                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1634  02E9  301A               	movlw	26
  1635  02EA  00F7               	movwf	??_Lcd_Init+1
  1636  02EB  30F8               	movlw	248
  1637  02EC  00F6               	movwf	??_Lcd_Init
  1638  02ED                     u1177:
  1639  02ED  0BF6               	decfsz	??_Lcd_Init,f
  1640  02EE  2AED               	goto	u1177
  1641  02EF  0BF7               	decfsz	??_Lcd_Init+1,f
  1642  02F0  2AED               	goto	u1177
  1643  02F1  0000               	nop
  1644  02F2                     l1287:
  1645                           
  1646                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  1647  02F2  3003               	movlw	3
  1648  02F3  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1649                           
  1650                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1651  02F8  3007               	movlw	7
  1652  02F9  00F7               	movwf	??_Lcd_Init+1
  1653  02FA  307D               	movlw	125
  1654  02FB  00F6               	movwf	??_Lcd_Init
  1655  02FC                     u1187:
  1656  02FC  0BF6               	decfsz	??_Lcd_Init,f
  1657  02FD  2AFC               	goto	u1187
  1658  02FE  0BF7               	decfsz	??_Lcd_Init+1,f
  1659  02FF  2AFC               	goto	u1187
  1660  0300                     l1289:
  1661                           
  1662                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  1663  0300  3003               	movlw	3
  1664  0301  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1665  0306                     l1291:
  1666                           
  1667                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1668  0306  300F               	movlw	15
  1669  0307  00F7               	movwf	??_Lcd_Init+1
  1670  0308  3047               	movlw	71
  1671  0309  00F6               	movwf	??_Lcd_Init
  1672  030A                     u1197:
  1673  030A  0BF6               	decfsz	??_Lcd_Init,f
  1674  030B  2B0A               	goto	u1197
  1675  030C  0BF7               	decfsz	??_Lcd_Init+1,f
  1676  030D  2B0A               	goto	u1197
  1677  030E  2B0F               	nop2
  1678                           
  1679                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  1680  030F  3003               	movlw	3
  1681  0310  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1682                           
  1683                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  1684  0315  3002               	movlw	2
  1685  0316  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1686                           
  1687                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  1688  031B  3002               	movlw	2
  1689  031C  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1690                           
  1691                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  1692  0321  3008               	movlw	8
  1693  0322  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1694                           
  1695                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  1696  0327  3000               	movlw	0
  1697  0328  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1698                           
  1699                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  1700  032D  300C               	movlw	12
  1701  032E  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1702                           
  1703                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  1704  0333  3000               	movlw	0
  1705  0334  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1706                           
  1707                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  1708  0339  3006               	movlw	6
  1709  033A  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1710  033F                     l56:
  1711  033F  0008               	return
  1712  0340                     __end_of_Lcd_Init:
  1713                           
  1714                           	psect	text5
  1715  0483                     __ptext5:	
  1716 ;; *************** function _Lcd_Clear *****************
  1717 ;; Defined at:
  1718 ;;		line 35 in file "./lcd.h"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, pclath, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1732 ;;      Params:         0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 3
  1739 ;; This function calls:
  1740 ;;		_Lcd_Cmd
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746  0483                     _Lcd_Clear:	
  1747                           ;psect for function _Lcd_Clear
  1748                           
  1749  0483                     l1261:	
  1750                           ;incstack = 0
  1751                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1752                           
  1753                           
  1754                           ;./lcd.h: 37:  Lcd_Cmd(0);
  1755  0483  3000               	movlw	0
  1756  0484  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1757                           
  1758                           ;./lcd.h: 38:  Lcd_Cmd(1);
  1759  0489  3001               	movlw	1
  1760  048A  120A  118A  2469  120A  118A  	fcall	_Lcd_Cmd
  1761  048F                     l47:
  1762  048F  0008               	return
  1763  0490                     __end_of_Lcd_Clear:
  1764                           
  1765                           	psect	text6
  1766  0469                     __ptext6:	
  1767 ;; *************** function _Lcd_Cmd *****************
  1768 ;; Defined at:
  1769 ;;		line 26 in file "./lcd.h"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  a               1    wreg     unsigned char 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  a               1    5[COMMON] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       0       0       0       0
  1784 ;;      Locals:         1       0       0       0       0
  1785 ;;      Temps:          2       0       0       0       0
  1786 ;;      Totals:         3       0       0       0       0
  1787 ;;Total ram usage:        3 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 2
  1790 ;; This function calls:
  1791 ;;		_Lcd_Port
  1792 ;; This function is called by:
  1793 ;;		_Lcd_Clear
  1794 ;;		_Lcd_Set_Cursor
  1795 ;;		_Lcd_Init
  1796 ;;		_Lcd_Shift_Right
  1797 ;;		_Lcd_Shift_Left
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801  0469                     _Lcd_Cmd:	
  1802                           ;psect for function _Lcd_Cmd
  1803                           
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1807                           ;Lcd_Cmd@a stored from wreg
  1808  0469  00F5               	movwf	Lcd_Cmd@a
  1809  046A                     l1231:
  1810                           
  1811                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTDbits.RD0 = 0;
  1812  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1813  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1814  046C  1008               	bcf	8,0	;volatile
  1815  046D                     l1233:
  1816                           
  1817                           ;./lcd.h: 29:  Lcd_Port(a);
  1818  046D  0875               	movf	Lcd_Cmd@a,w
  1819  046E  120A  118A  2447  120A  118A  	fcall	_Lcd_Port
  1820  0473                     l1235:
  1821                           
  1822                           ;./lcd.h: 30:  PORTDbits.RD2 = 1;
  1823  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0475  1508               	bsf	8,2	;volatile
  1826  0476                     l1237:
  1827                           
  1828                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1829  0476  3006               	movlw	6
  1830  0477  00F4               	movwf	??_Lcd_Cmd+1
  1831  0478  3030               	movlw	48
  1832  0479  00F3               	movwf	??_Lcd_Cmd
  1833  047A                     u1207:
  1834  047A  0BF3               	decfsz	??_Lcd_Cmd,f
  1835  047B  2C7A               	goto	u1207
  1836  047C  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1837  047D  2C7A               	goto	u1207
  1838  047E  0000               	nop
  1839  047F                     l1239:
  1840                           
  1841                           ;./lcd.h: 32:         PORTDbits.RD2 = 0;
  1842  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0481  1108               	bcf	8,2	;volatile
  1845  0482                     l44:
  1846  0482  0008               	return
  1847  0483                     __end_of_Lcd_Cmd:
  1848                           
  1849                           	psect	text7
  1850  0447                     __ptext7:	
  1851 ;; *************** function _Lcd_Port *****************
  1852 ;; Defined at:
  1853 ;;		line 4 in file "./lcd.h"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  a               1    wreg     unsigned char 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  a               1    2[COMMON] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       0       0       0       0
  1868 ;;      Locals:         1       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0
  1870 ;;      Totals:         1       0       0       0       0
  1871 ;;Total ram usage:        1 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 1
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_Lcd_Cmd
  1878 ;;		_Lcd_Init
  1879 ;;		_Lcd_Write_Char
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883  0447                     _Lcd_Port:	
  1884                           ;psect for function _Lcd_Port
  1885                           
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _Lcd_Port: [wreg]
  1889                           ;Lcd_Port@a stored from wreg
  1890  0447  00F2               	movwf	Lcd_Port@a
  1891  0448                     l1221:
  1892                           
  1893                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  1894  0448  1C72               	btfss	Lcd_Port@a,0
  1895  0449  2C4B               	goto	u811
  1896  044A  2C4C               	goto	u810
  1897  044B                     u811:
  1898  044B  2C50               	goto	l33
  1899  044C                     u810:
  1900  044C                     l1223:
  1901                           
  1902                           ;./lcd.h: 7:   PORTDbits.RD4 = 1;
  1903  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1904  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1905  044E  1608               	bsf	8,4	;volatile
  1906  044F  2C53               	goto	l34
  1907  0450                     l33:	
  1908                           ;./lcd.h: 8:  else
  1909                           
  1910                           
  1911                           ;./lcd.h: 9:   PORTDbits.RD4 = 0;
  1912  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0452  1208               	bcf	8,4	;volatile
  1915  0453                     l34:
  1916                           
  1917                           ;./lcd.h: 11:  if(a & 2)
  1918  0453  1CF2               	btfss	Lcd_Port@a,1
  1919  0454  2C56               	goto	u821
  1920  0455  2C57               	goto	u820
  1921  0456                     u821:
  1922  0456  2C59               	goto	l35
  1923  0457                     u820:
  1924  0457                     l1225:
  1925                           
  1926                           ;./lcd.h: 12:   PORTDbits.RD5 = 1;
  1927  0457  1688               	bsf	8,5	;volatile
  1928  0458  2C5A               	goto	l36
  1929  0459                     l35:	
  1930                           ;./lcd.h: 13:  else
  1931                           
  1932                           
  1933                           ;./lcd.h: 14:   PORTDbits.RD5 = 0;
  1934  0459  1288               	bcf	8,5	;volatile
  1935  045A                     l36:
  1936                           
  1937                           ;./lcd.h: 16:  if(a & 4)
  1938  045A  1D72               	btfss	Lcd_Port@a,2
  1939  045B  2C5D               	goto	u831
  1940  045C  2C5E               	goto	u830
  1941  045D                     u831:
  1942  045D  2C60               	goto	l37
  1943  045E                     u830:
  1944  045E                     l1227:
  1945                           
  1946                           ;./lcd.h: 17:   PORTDbits.RD6 = 1;
  1947  045E  1708               	bsf	8,6	;volatile
  1948  045F  2C61               	goto	l38
  1949  0460                     l37:	
  1950                           ;./lcd.h: 18:  else
  1951                           
  1952                           
  1953                           ;./lcd.h: 19:   PORTDbits.RD6 = 0;
  1954  0460  1308               	bcf	8,6	;volatile
  1955  0461                     l38:
  1956                           
  1957                           ;./lcd.h: 21:  if(a & 8)
  1958  0461  1DF2               	btfss	Lcd_Port@a,3
  1959  0462  2C64               	goto	u841
  1960  0463  2C65               	goto	u840
  1961  0464                     u841:
  1962  0464  2C67               	goto	l39
  1963  0465                     u840:
  1964  0465                     l1229:
  1965                           
  1966                           ;./lcd.h: 22:   PORTDbits.RD7 = 1;
  1967  0465  1788               	bsf	8,7	;volatile
  1968  0466  2C68               	goto	l41
  1969  0467                     l39:	
  1970                           ;./lcd.h: 23:  else
  1971                           
  1972                           
  1973                           ;./lcd.h: 24:   PORTDbits.RD7 = 0;
  1974  0467  1388               	bcf	8,7	;volatile
  1975  0468                     l41:
  1976  0468  0008               	return
  1977  0469                     __end_of_Lcd_Port:
  1978                           
  1979                           	psect	text8
  1980  0398                     __ptext8:	
  1981 ;; *************** function _TrataInt *****************
  1982 ;; Defined at:
  1983 ;;		line 57 in file "main.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1997 ;;      Params:         0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0
  1999 ;;      Temps:          2       0       0       0       0
  2000 ;;      Totals:         2       0       0       0       0
  2001 ;;Total ram usage:        2 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		Interrupt level 1
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010  0398                     _TrataInt:	
  2011                           ;psect for function _TrataInt
  2012                           
  2013  0398                     i1l1055:
  2014                           
  2015                           ;main.c: 58:     if (TMR1IF)
  2016  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2018  039A  1C0C               	btfss	12,0	;volatile
  2019  039B  2B9D               	goto	u51_21
  2020  039C  2B9E               	goto	u51_20
  2021  039D                     u51_21:
  2022  039D  2BCA               	goto	i1l1075
  2023  039E                     u51_20:
  2024  039E                     i1l1057:
  2025                           
  2026                           ;main.c: 59:     {;main.c: 60:         PIR1bits.TMR1IF = 0;
  2027  039E  100C               	bcf	12,0	;volatile
  2028  039F                     i1l1059:
  2029                           
  2030                           ;main.c: 61:         TMR1L = 0xDC;
  2031  039F  30DC               	movlw	220
  2032  03A0  008E               	movwf	14	;volatile
  2033                           
  2034                           ;main.c: 62:         TMR1H = 0x0B;
  2035  03A1  300B               	movlw	11
  2036  03A2  008F               	movwf	15	;volatile
  2037                           
  2038                           ;main.c: 64:         conta++;
  2039  03A3  3001               	movlw	1
  2040  03A4  07FA               	addwf	_conta,f
  2041  03A5  1803               	skipnc
  2042  03A6  0AFB               	incf	_conta+1,f
  2043  03A7  3000               	movlw	0
  2044  03A8  07FB               	addwf	_conta+1,f
  2045  03A9                     i1l1061:
  2046                           
  2047                           ;main.c: 65:         if (conta == 10) {
  2048  03A9  300A               	movlw	10
  2049  03AA  067A               	xorwf	_conta,w
  2050  03AB  047B               	iorwf	_conta+1,w
  2051  03AC  1D03               	btfss	3,2
  2052  03AD  2BAF               	goto	u52_21
  2053  03AE  2BB0               	goto	u52_20
  2054  03AF                     u52_21:
  2055  03AF  2BCA               	goto	i1l1075
  2056  03B0                     u52_20:
  2057  03B0                     i1l1063:
  2058                           
  2059                           ;main.c: 67:             if (coffee_or_milk == 0) {
  2060  03B0  0878               	movf	_coffee_or_milk,w
  2061  03B1  0479               	iorwf	_coffee_or_milk+1,w
  2062  03B2  1D03               	btfss	3,2
  2063  03B3  2BB5               	goto	u53_21
  2064  03B4  2BB6               	goto	u53_20
  2065  03B5                     u53_21:
  2066  03B5  2BBC               	goto	i1l1069
  2067  03B6                     u53_20:
  2068  03B6                     i1l1065:
  2069                           
  2070                           ;main.c: 68:                 PORTCbits.RC3 = 1;
  2071  03B6  1587               	bsf	7,3	;volatile
  2072  03B7                     i1l1067:
  2073                           
  2074                           ;main.c: 69:                 coffee_flag = 1;
  2075  03B7  3001               	movlw	1
  2076  03B8  00A8               	movwf	_coffee_flag
  2077  03B9  3000               	movlw	0
  2078  03BA  00A9               	movwf	_coffee_flag+1
  2079                           
  2080                           ;main.c: 70:             } else if (coffee_or_milk == 1) {
  2081  03BB  2BC8               	goto	i1l1073
  2082  03BC                     i1l1069:
  2083  03BC  0378               	decf	_coffee_or_milk,w
  2084  03BD  0479               	iorwf	_coffee_or_milk+1,w
  2085  03BE  1D03               	btfss	3,2
  2086  03BF  2BC1               	goto	u54_21
  2087  03C0  2BC2               	goto	u54_20
  2088  03C1                     u54_21:
  2089  03C1  2BC7               	goto	i1l90
  2090  03C2                     u54_20:
  2091  03C2                     i1l1071:
  2092                           
  2093                           ;main.c: 71:                 milk_flag = 1;
  2094  03C2  3001               	movlw	1
  2095  03C3  00AA               	movwf	_milk_flag
  2096  03C4  3000               	movlw	0
  2097  03C5  00AB               	movwf	_milk_flag+1
  2098                           
  2099                           ;main.c: 72:             } else {
  2100  03C6  2BC8               	goto	i1l1073
  2101  03C7                     i1l90:
  2102                           
  2103                           ;main.c: 73:                 PORTCbits.RC3 = 0;
  2104  03C7  1187               	bcf	7,3	;volatile
  2105  03C8                     i1l1073:
  2106                           
  2107                           ;main.c: 76:             conta = 0;
  2108  03C8  01FA               	clrf	_conta
  2109  03C9  01FB               	clrf	_conta+1
  2110  03CA                     i1l1075:
  2111                           
  2112                           ;main.c: 79:     if (INTF)
  2113  03CA  1C8B               	btfss	11,1	;volatile
  2114  03CB  2BCD               	goto	u55_21
  2115  03CC  2BCE               	goto	u55_20
  2116  03CD                     u55_21:
  2117  03CD  2BE0               	goto	i1l94
  2118  03CE                     u55_20:
  2119  03CE                     i1l1077:
  2120                           
  2121                           ;main.c: 80:     {;main.c: 81:         INTCONbits.INTF = 0;
  2122  03CE  108B               	bcf	11,1	;volatile
  2123  03CF                     i1l1079:
  2124                           
  2125                           ;main.c: 83:         if (preparating == 1) {
  2126  03CF  0326               	decf	_preparating,w
  2127  03D0  0427               	iorwf	_preparating+1,w
  2128  03D1  1D03               	btfss	3,2
  2129  03D2  2BD4               	goto	u56_21
  2130  03D3  2BD5               	goto	u56_20
  2131  03D4                     u56_21:
  2132  03D4  2BE0               	goto	i1l94
  2133  03D5                     u56_20:
  2134  03D5                     i1l1081:
  2135                           
  2136                           ;main.c: 84:             PORTCbits.RC1 = 0;
  2137  03D5  1087               	bcf	7,1	;volatile
  2138                           
  2139                           ;main.c: 85:             PORTCbits.RC2 = 0;
  2140  03D6  1107               	bcf	7,2	;volatile
  2141  03D7                     i1l1083:
  2142                           
  2143                           ;main.c: 86:             coffee_flag = 1;
  2144  03D7  3001               	movlw	1
  2145  03D8  00A8               	movwf	_coffee_flag
  2146  03D9  3000               	movlw	0
  2147  03DA  00A9               	movwf	_coffee_flag+1
  2148                           
  2149                           ;main.c: 87:             milk_flag = 1;
  2150  03DB  3001               	movlw	1
  2151  03DC  00AA               	movwf	_milk_flag
  2152  03DD  3000               	movlw	0
  2153  03DE  00AB               	movwf	_milk_flag+1
  2154  03DF                     i1l1085:
  2155                           
  2156                           ;main.c: 88:             PORTCbits.RC0 = 0;
  2157  03DF  1007               	bcf	7,0	;volatile
  2158  03E0                     i1l94:
  2159  03E0  0871               	movf	??_TrataInt+1,w
  2160  03E1  008A               	movwf	10
  2161  03E2  0E70               	swapf	??_TrataInt,w
  2162  03E3  0083               	movwf	3
  2163  03E4  0EFE               	swapf	btemp,f
  2164  03E5  0E7E               	swapf	btemp,w
  2165  03E6  0009               	retfie
  2166  03E7                     __end_of_TrataInt:
  2167  007E                     btemp	set	126	;btemp
  2168  007E                     wtemp0	set	126
  2169                           
  2170                           	psect	intentry
  2171  0004                     __pintentry:	
  2172                           ;incstack = 0
  2173                           ; Regs used in _TrataInt: [wreg+status,2+status,0]
  2174                           
  2175  0004                     interrupt_function:
  2176  007E                     saved_w	set	btemp
  2177  0004  00FE               	movwf	btemp
  2178  0005  0E03               	swapf	3,w
  2179  0006  00F0               	movwf	??_TrataInt
  2180  0007  080A               	movf	10,w
  2181  0008  00F1               	movwf	??_TrataInt+1
  2182  0009  120A  118A  2B98   	ljmp	_TrataInt
  2183                           
  2184                           	psect	config
  2185                           
  2186                           ;Config register CONFIG @ 0x2007
  2187                           ;	Oscillator Selection bits
  2188                           ;	FOSC = EXTRC, RC oscillator
  2189                           ;	Watchdog Timer Enable bit
  2190                           ;	WDTE = OFF, WDT disabled
  2191                           ;	Power-up Timer Enable bit
  2192                           ;	PWRTE = ON, PWRT enabled
  2193                           ;	Brown-out Reset Enable bit
  2194                           ;	BOREN = ON, BOR enabled
  2195                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2196                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2197                           ;	Data EEPROM Memory Code Protection bit
  2198                           ;	CPD = OFF, Data EEPROM code protection off
  2199                           ;	Flash Program Memory Write Enable bits
  2200                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2201                           ;	In-Circuit Debugger Mode bit
  2202                           ;	DEBUG = 0x1, unprogrammed default
  2203                           ;	Flash Program Memory Code Protection bit
  2204                           ;	CP = OFF, Code protection off
  2205  2007                     	org	8199
  2206  2007  3F73               	dw	16243

Data Sizes:
    Strings     221
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      6      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TrataInt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor

Critical Paths under _TrataInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TrataInt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TrataInt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TrataInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3109
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     960
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1715
                                              6 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TrataInt                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 _TrataInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      18      12        0.0%
ABS                  0      0      18       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 27 11:17:37 2023

                       pc 0002                        l41 0468                        l33 0450  
                      l34 0453                        l35 0459                        l36 045A  
                      l44 0482                        l37 0460                        l53 0397  
                      l38 0461                        l39 0467                        l47 048F  
                      l56 033F                        l65 0446                        l59 041D  
                      fsr 0004                       l100 0070                       l110 010B  
                     l102 0095                       l103 01AC                       l111 012D  
                     l112 011E                       l104 00BA                       l122 017E  
                     l123 018B                       l116 0168                       l108 00FC  
                     l125 019B                       l117 0161                       l126 01A6  
                     l118 0160                       l119 0167                       u810 044C  
                     u811 044B                       u820 0457                       u900 0446  
                     u821 0456                       u901 0445                       u830 045E  
                     u910 004F                       u831 045D                       u911 004E  
                     u840 0465                       u920 0053                       u841 0464  
                     u921 0052                       u930 0074                       u931 0073  
                     u860 0348                       u940 0078                       u861 0347  
                     u941 0077                       u950 0099                       u855 03F8  
                     u951 0098                       u880 0373                       u960 009D  
                     u881 0372                       u961 009C                       u970 00BE  
                     u875 0350                       u971 00BD                       u980 00C2  
                     u981 00C1                       u990 00ED                       u895 037B  
                     u991 00EC                       fsr0 0004                      l1221 0448  
                    l1223 044C                      l1231 046A                      l1311 002F  
                    l1225 0457                      l1233 046D                      l1241 03E8  
                    l1401 0133                      l1321 0034                      l1313 0030  
                    l1305 0027                      l1227 045E                      l1235 0473  
                    l1251 040A                      l1243 03F2                      l1411 014B  
                    l1403 0134                      l1331 003E                      l1323 0037  
                    l1315 0031                      l1307 002A                      l1229 0465  
                    l1237 0476                      l1261 0483                      l1253 040D  
                    l1245 03F5                      l1421 0177                      l1413 0151  
                    l1405 0138                      l1341 004F                      l1333 0040  
                    l1325 003A                      l1317 0032                      l1309 002C  
                    l1239 047F                      l1271 0364                      l1263 0343  
                    l1255 0413                      l1247 0403                      l1431 019C  
                    l1423 017F                      l1415 0159                      l1407 013D  
                    l1351 0078                      l1343 0053                      l1335 0045  
                    l1327 003B                      l1319 0033                      l1281 038F  
                    l1265 0348                      l1273 036D                      l1257 0416  
                    l1249 0406                      l1433 019E                      l1425 0183  
                    l1417 016D                      l1409 0145                      l1361 00A5  
                    l1353 0080                      l1345 005B                      l1337 0049  
                    l1329 003C                      l1291 0306                      l1283 02E3  
                    l1275 0373                      l1267 0359                      l1259 041A  
                    l1435 01A7                      l1419 016F                      l1427 018C  
                    l1371 00D1                      l1363 00AB                      l1355 0086  
                    l1347 0061                      l1339 004B                      l1285 02E9  
                    l1277 0384                      l1269 035E                      l1293 0421  
                    l1429 0194                      l1381 00F1                      l1373 00D9  
                    l1365 00BE                      l1357 0099                      l1349 0074  
                    l1287 02F2                      l1279 0389                      l1295 0424  
                    l1391 0113                      l1383 00F5                      l1375 00DF  
                    l1367 00C2                      l1359 009D                      l1289 0300  
                    l1297 0431                      l1393 0117                      l1385 0100  
                    l1377 00E7                      l1369 00CA                      l1299 0439  
                    l1395 0122                      l1387 0104                      l1379 00ED  
                    l1397 0126                      l1389 010F                      l1399 012D  
                    STR_1 028E                      STR_2 0206                      STR_3 02B0  
                    STR_4 0206                      STR_5 028E                      STR_6 02B0  
                    STR_7 027D                      STR_8 0228                      STR_9 024A  
                    u1000 00F1                      u1001 00F0                      u1010 00F5  
                    u1011 00F4                      u1100 0151                      u1020 0100  
                    u1101 0150                      u1021 00FF                      u1110 0167  
                    u1030 0104                      u1111 0166                      u1031 0103  
                    u1120 016D                      u1040 010F                      u1121 016C  
                    u1041 010E                      u1130 018B                      u1050 0113  
                    u1131 018A                      u1051 0112                      u1140 01A6  
                    u1060 0117                      u1141 01A5                      u1061 0116  
                    u1070 0122                      u1207 047A                      u1071 0121  
                    u1080 0126                      u1081 0125                      u1090 0133  
                    u1091 0132                      u1157 0408                      u1167 0418  
                    u1177 02ED                      u1187 02FC                      u1197 030A  
                    _INTF 0059                      i1l90 03C7                      i1l94 03E0  
       ?_Lcd_Write_String 0070                      _main 0027                      btemp 007E  
                    start 000C        ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 0483  
                   ?_main 0070                     STR_10 026C                     STR_11 0217  
                   STR_12 0239                     STR_13 02D2                     STR_14 025B  
                   STR_15 029F                     STR_16 02C1                     _TMR1H 000F  
                   _TMR1L 000E                     u51_20 039E                     u51_21 039D  
                   u52_20 03B0                     u52_21 03AF                     u53_20 03B6  
                   u53_21 03B5                     u54_20 03C2                     u54_21 03C1  
                   u55_20 03CE                     u55_21 03CD                     u56_20 03D5  
                   u56_21 03D4                     _TRISC 0087                     _TRISD 0088  
                   _conta 007A                     pclath 000A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 0340          __end_of_Lcd_Port 0469  
         __initialization 000F              __end_of_main 01B0                    ??_main 0078  
        __end_of_TrataInt 03E7                    i1l1061 03A9                    i1l1071 03C2  
                  i1l1063 03B0                    i1l1055 0398                    i1l1081 03D5  
                  i1l1073 03C8                    i1l1065 03B6                    i1l1057 039E  
                  i1l1083 03D7                    i1l1067 03B7                    i1l1059 039F  
                  i1l1075 03CA                    i1l1085 03DF                    i1l1077 03CE  
                  i1l1069 03BC                    i1l1079 03CF                 ??_Lcd_Cmd 0073  
                  _TMR1IF 0060                    saved_w 007E           Lcd_Set_Cursor@a 0022  
         Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 0024           Lcd_Set_Cursor@z 0023  
 __end_of__initialization 0023         __end_of_Lcd_Clear 0490            __pcstackCOMMON 0070  
            __pidataBANK0 0490            _Lcd_Set_Cursor 0340            _OPTION_REGbits 0081  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                __pbssBANK0 0026  
              __pmaintext 0027                 ?_TrataInt 0070                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 0398                ??_Lcd_Init 0076                ??_Lcd_Port 0072  
              __stringtab 0200            _Lcd_Write_Char 03E7                   _Lcd_Cmd 0469  
              ??_TrataInt 0070           ?_Lcd_Set_Cursor 0076                   __ptext1 041E  
                 __ptext2 03E7                   __ptext3 0340                   __ptext4 02E3  
                 __ptext5 0483                   __ptext6 0469                   __ptext7 0447  
                 __ptext8 0398                 _T1CONbits 0010    __end_of_Lcd_Write_Char 041E  
    end_of_initialization 0023                 Lcd_Port@a 0072                 _PORTBbits 0006  
               _PORTCbits 0007                 _PORTDbits 0008           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0022         Lcd_Write_String@i 0020                 _Lcd_Clear 0483  
          _coffee_or_milk 0078          _Lcd_Write_String 041E       start_initialization 000F  
              ?_Lcd_Clear 0070               __pdataBANK0 002A           Lcd_Write_Char@a 0076  
         Lcd_Write_Char@y 0075               __pbssCOMMON 0078                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0020  
               __pstrings 0200               _coffee_flag 0028                 _milk_flag 002A  
       interrupt_function 0004                  _PIE1bits 008C                  Lcd_Cmd@a 0075  
                _PIR1bits 000C               ??_Lcd_Clear 0076               __stringbase 0205  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 02E3                  _Lcd_Port 0447  
__end_of_Lcd_Write_String 0447                  _TrataInt 0398        __end_of__stringtab 0206  
              _INTCONbits 000B        Lcd_Write_Char@temp 0074                  intlevel1 0000  
               stringcode 0200        Lcd_Set_Cursor@temp 0025               _preparating 0026  
                stringdir 0200                  stringtab 0200  
