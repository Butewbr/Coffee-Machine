

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 27 11:36:25 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179                           
   180                           	psect	idataBANK0
   181  04A4                     __pidataBANK0:
   182                           
   183                           ;initializer for _milk_flag
   184  04A4  3401               	retlw	1
   185  04A5  3400               	retlw	0
   186  0006                     _PORTBbits	set	6
   187  0010                     _T1CONbits	set	16
   188  000B                     _INTCONbits	set	11
   189  0007                     _PORTCbits	set	7
   190  000F                     _TMR1H	set	15
   191  000E                     _TMR1L	set	14
   192  000C                     _PIR1bits	set	12
   193  0008                     _PORTDbits	set	8
   194  0059                     _INTF	set	89
   195  0060                     _TMR1IF	set	96
   196  008C                     _PIE1bits	set	140
   197  0087                     _TRISC	set	135
   198  0088                     _TRISD	set	136
   199  0081                     _OPTION_REGbits	set	129
   200                           
   201                           	psect	strings
   202  0200                     __pstrings:
   203  0200                     stringtab:
   204  0200                     __stringtab:
   205  0200                     stringcode:	
   206                           ;	String table - string pointers are 1 byte each
   207                           
   208  0200                     stringdir:
   209  0200  3002               	movlw	high stringdir
   210  0201  008A               	movwf	10
   211  0202  0804               	movf	4,w
   212  0203  0A84               	incf	4,f
   213  0204  0782               	addwf	2,f
   214  0205                     __stringbase:
   215  0205  3400               	retlw	0
   216  0206                     __end_of__stringtab:
   217  0206                     STR_2:
   218  0206  3420               	retlw	32	;' '
   219  0207  3420               	retlw	32	;' '
   220  0208  3420               	retlw	32	;' '
   221  0209  3420               	retlw	32	;' '
   222  020A  3420               	retlw	32	;' '
   223  020B  3420               	retlw	32	;' '
   224  020C  3420               	retlw	32	;' '
   225  020D  3420               	retlw	32	;' '
   226  020E  3420               	retlw	32	;' '
   227  020F  3420               	retlw	32	;' '
   228  0210  3420               	retlw	32	;' '
   229  0211  3420               	retlw	32	;' '
   230  0212  3420               	retlw	32	;' '
   231  0213  3420               	retlw	32	;' '
   232  0214  3420               	retlw	32	;' '
   233  0215  3420               	retlw	32	;' '
   234  0216  3400               	retlw	0
   235  0217                     STR_11:
   236  0217  3448               	retlw	72	;'H'
   237  0218  346F               	retlw	111	;'o'
   238  0219  3474               	retlw	116	;'t'
   239  021A  3420               	retlw	32	;' '
   240  021B  3477               	retlw	119	;'w'
   241  021C  342F               	retlw	47	;'/'
   242  021D  3420               	retlw	32	;' '
   243  021E  344D               	retlw	77	;'M'
   244  021F  3469               	retlw	105	;'i'
   245  0220  346C               	retlw	108	;'l'
   246  0221  346B               	retlw	107	;'k'
   247  0222  3420               	retlw	32	;' '
   248  0223  3420               	retlw	32	;' '
   249  0224  3420               	retlw	32	;' '
   250  0225  3420               	retlw	32	;' '
   251  0226  3420               	retlw	32	;' '
   252  0227  3400               	retlw	0
   253  0228                     STR_8:
   254  0228  3459               	retlw	89	;'Y'
   255  0229  346F               	retlw	111	;'o'
   256  022A  3475               	retlw	117	;'u'
   257  022B  3472               	retlw	114	;'r'
   258  022C  3420               	retlw	32	;' '
   259  022D  3463               	retlw	99	;'c'
   260  022E  346F               	retlw	111	;'o'
   261  022F  3466               	retlw	102	;'f'
   262  0230  3466               	retlw	102	;'f'
   263  0231  3465               	retlw	101	;'e'
   264  0232  3465               	retlw	101	;'e'
   265  0233  343A               	retlw	58	;':'
   266  0234  3420               	retlw	32	;' '
   267  0235  3420               	retlw	32	;' '
   268  0236  3420               	retlw	32	;' '
   269  0237  3420               	retlw	32	;' '
   270  0238  3400               	retlw	0
   271  0239                     STR_12:
   272  0239  3448               	retlw	72	;'H'
   273  023A  346F               	retlw	111	;'o'
   274  023B  3474               	retlw	116	;'t'
   275  023C  3420               	retlw	32	;' '
   276  023D  3477               	retlw	119	;'w'
   277  023E  346F               	retlw	111	;'o'
   278  023F  342F               	retlw	47	;'/'
   279  0240  3420               	retlw	32	;' '
   280  0241  344D               	retlw	77	;'M'
   281  0242  3469               	retlw	105	;'i'
   282  0243  346C               	retlw	108	;'l'
   283  0244  346B               	retlw	107	;'k'
   284  0245  3420               	retlw	32	;' '
   285  0246  3420               	retlw	32	;' '
   286  0247  3420               	retlw	32	;' '
   287  0248  3420               	retlw	32	;' '
   288  0249  3400               	retlw	0
   289  024A                     STR_9:
   290  024A  3443               	retlw	67	;'C'
   291  024B  346F               	retlw	111	;'o'
   292  024C  346C               	retlw	108	;'l'
   293  024D  3464               	retlw	100	;'d'
   294  024E  3420               	retlw	32	;' '
   295  024F  3477               	retlw	119	;'w'
   296  0250  342F               	retlw	47	;'/'
   297  0251  3420               	retlw	32	;' '
   298  0252  344D               	retlw	77	;'M'
   299  0253  3469               	retlw	105	;'i'
   300  0254  346C               	retlw	108	;'l'
   301  0255  346B               	retlw	107	;'k'
   302  0256  3420               	retlw	32	;' '
   303  0257  3420               	retlw	32	;' '
   304  0258  3420               	retlw	32	;' '
   305  0259  3420               	retlw	32	;' '
   306  025A  3400               	retlw	0
   307  025B                     STR_14:
   308  025B  3457               	retlw	87	;'W'
   309  025C  3461               	retlw	97	;'a'
   310  025D  3472               	retlw	114	;'r'
   311  025E  346D               	retlw	109	;'m'
   312  025F  3469               	retlw	105	;'i'
   313  0260  346E               	retlw	110	;'n'
   314  0261  3467               	retlw	103	;'g'
   315  0262  3420               	retlw	32	;' '
   316  0263  3455               	retlw	85	;'U'
   317  0264  3470               	retlw	112	;'p'
   318  0265  342E               	retlw	46	;'.'
   319  0266  342E               	retlw	46	;'.'
   320  0267  342E               	retlw	46	;'.'
   321  0268  3420               	retlw	32	;' '
   322  0269  3420               	retlw	32	;' '
   323  026A  3420               	retlw	32	;' '
   324  026B  3400               	retlw	0
   325  026C                     STR_10:
   326  026C  3443               	retlw	67	;'C'
   327  026D  346F               	retlw	111	;'o'
   328  026E  346C               	retlw	108	;'l'
   329  026F  3464               	retlw	100	;'d'
   330  0270  3420               	retlw	32	;' '
   331  0271  3477               	retlw	119	;'w'
   332  0272  346F               	retlw	111	;'o'
   333  0273  342F               	retlw	47	;'/'
   334  0274  3420               	retlw	32	;' '
   335  0275  344D               	retlw	77	;'M'
   336  0276  3469               	retlw	105	;'i'
   337  0277  346C               	retlw	108	;'l'
   338  0278  346B               	retlw	107	;'k'
   339  0279  3420               	retlw	32	;' '
   340  027A  3420               	retlw	32	;' '
   341  027B  3420               	retlw	32	;' '
   342  027C  3400               	retlw	0
   343  027D                     STR_7:
   344  027D  344E               	retlw	78	;'N'
   345  027E  344F               	retlw	79	;'O'
   346  027F  3420               	retlw	32	;' '
   347  0280  344D               	retlw	77	;'M'
   348  0281  3449               	retlw	73	;'I'
   349  0282  344C               	retlw	76	;'L'
   350  0283  344B               	retlw	75	;'K'
   351  0284  3420               	retlw	32	;' '
   352  0285  344C               	retlw	76	;'L'
   353  0286  3445               	retlw	69	;'E'
   354  0287  3446               	retlw	70	;'F'
   355  0288  3454               	retlw	84	;'T'
   356  0289  3421               	retlw	33	;'!'
   357  028A  3421               	retlw	33	;'!'
   358  028B  3420               	retlw	32	;' '
   359  028C  3420               	retlw	32	;' '
   360  028D  3400               	retlw	0
   361  028E                     STR_1:
   362  028E  344E               	retlw	78	;'N'
   363  028F  344F               	retlw	79	;'O'
   364  0290  3420               	retlw	32	;' '
   365  0291  3457               	retlw	87	;'W'
   366  0292  3441               	retlw	65	;'A'
   367  0293  3454               	retlw	84	;'T'
   368  0294  3445               	retlw	69	;'E'
   369  0295  3452               	retlw	82	;'R'
   370  0296  3420               	retlw	32	;' '
   371  0297  344C               	retlw	76	;'L'
   372  0298  3445               	retlw	69	;'E'
   373  0299  3446               	retlw	70	;'F'
   374  029A  3454               	retlw	84	;'T'
   375  029B  3421               	retlw	33	;'!'
   376  029C  3421               	retlw	33	;'!'
   377  029D  3420               	retlw	32	;' '
   378  029E  3400               	retlw	0
   379  029F                     STR_15:
   380  029F  3450               	retlw	80	;'P'
   381  02A0  346F               	retlw	111	;'o'
   382  02A1  3475               	retlw	117	;'u'
   383  02A2  3472               	retlw	114	;'r'
   384  02A3  3469               	retlw	105	;'i'
   385  02A4  346E               	retlw	110	;'n'
   386  02A5  3467               	retlw	103	;'g'
   387  02A6  3420               	retlw	32	;' '
   388  02A7  344D               	retlw	77	;'M'
   389  02A8  3469               	retlw	105	;'i'
   390  02A9  346C               	retlw	108	;'l'
   391  02AA  346B               	retlw	107	;'k'
   392  02AB  342E               	retlw	46	;'.'
   393  02AC  342E               	retlw	46	;'.'
   394  02AD  342E               	retlw	46	;'.'
   395  02AE  3420               	retlw	32	;' '
   396  02AF  3400               	retlw	0
   397  02B0                     STR_3:
   398  02B0  344E               	retlw	78	;'N'
   399  02B1  344F               	retlw	79	;'O'
   400  02B2  3420               	retlw	32	;' '
   401  02B3  3443               	retlw	67	;'C'
   402  02B4  344F               	retlw	79	;'O'
   403  02B5  3446               	retlw	70	;'F'
   404  02B6  3446               	retlw	70	;'F'
   405  02B7  3445               	retlw	69	;'E'
   406  02B8  3445               	retlw	69	;'E'
   407  02B9  3420               	retlw	32	;' '
   408  02BA  344C               	retlw	76	;'L'
   409  02BB  3445               	retlw	69	;'E'
   410  02BC  3446               	retlw	70	;'F'
   411  02BD  3454               	retlw	84	;'T'
   412  02BE  3421               	retlw	33	;'!'
   413  02BF  3421               	retlw	33	;'!'
   414  02C0  3400               	retlw	0
   415  02C1                     STR_16:
   416  02C1  3450               	retlw	80	;'P'
   417  02C2  346F               	retlw	111	;'o'
   418  02C3  3475               	retlw	117	;'u'
   419  02C4  3472               	retlw	114	;'r'
   420  02C5  3469               	retlw	105	;'i'
   421  02C6  346E               	retlw	110	;'n'
   422  02C7  3467               	retlw	103	;'g'
   423  02C8  3420               	retlw	32	;' '
   424  02C9  3443               	retlw	67	;'C'
   425  02CA  346F               	retlw	111	;'o'
   426  02CB  3466               	retlw	102	;'f'
   427  02CC  3466               	retlw	102	;'f'
   428  02CD  3465               	retlw	101	;'e'
   429  02CE  3465               	retlw	101	;'e'
   430  02CF  342E               	retlw	46	;'.'
   431  02D0  342E               	retlw	46	;'.'
   432  02D1  3400               	retlw	0
   433  02D2                     STR_13:
   434  02D2  3450               	retlw	80	;'P'
   435  02D3  3472               	retlw	114	;'r'
   436  02D4  3465               	retlw	101	;'e'
   437  02D5  3470               	retlw	112	;'p'
   438  02D6  3461               	retlw	97	;'a'
   439  02D7  3472               	retlw	114	;'r'
   440  02D8  3469               	retlw	105	;'i'
   441  02D9  346E               	retlw	110	;'n'
   442  02DA  3467               	retlw	103	;'g'
   443  02DB  3420               	retlw	32	;' '
   444  02DC  3443               	retlw	67	;'C'
   445  02DD  346F               	retlw	111	;'o'
   446  02DE  3466               	retlw	102	;'f'
   447  02DF  3466               	retlw	102	;'f'
   448  02E0  3465               	retlw	101	;'e'
   449  02E1  3465               	retlw	101	;'e'
   450  02E2  3400               	retlw	0
   451  0206                     
   452                           	psect	cinit
   453  0011                     start_initialization:	
   454                           ; #config settings
   455                           
   456  0011                     __initialization:
   457                           
   458                           ; Initialize objects allocated to BANK0
   459  0011  120A  118A  24A4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   460  0016  00AC               	movwf	__pdataBANK0& (0+127)
   461  0017  120A  118A  24A5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   462  001C  00AD               	movwf	(__pdataBANK0+1)& (0+127)
   463                           
   464                           ; Clear objects allocated to BANK0
   465  001D  01A0               	clrf	__pbssBANK0& (0+127)
   466  001E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   467  001F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   468  0020  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   469  0021  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   470  0022  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   471                           
   472                           ; Clear objects allocated to COMMON
   473  0023  01F9               	clrf	__pbssCOMMON& (0+127)
   474  0024  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   475  0025                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478  0025                     __end_of__initialization:
   479  0025  0183               	clrf	3
   480  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssCOMMON
   483  0079                     __pbssCOMMON:
   484  0079                     _conta:
   485  0079                     	ds	2
   486                           
   487                           	psect	bssBANK0
   488  0020                     __pbssBANK0:
   489  0020                     _preparating:
   490  0020                     	ds	2
   491  0022                     _coffee_flag:
   492  0022                     	ds	2
   493  0024                     _coffee_or_milk:
   494  0024                     	ds	2
   495                           
   496                           	psect	dataBANK0
   497  002C                     __pdataBANK0:
   498  002C                     _milk_flag:
   499  002C                     	ds	2
   500                           
   501                           	psect	cstackCOMMON
   502  0070                     __pcstackCOMMON:
   503  0070                     ?_Lcd_Port:
   504  0070                     ?_Lcd_Cmd:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_Lcd_Clear:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_Lcd_Init:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_Lcd_Write_Char:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_Lcd_Write_String:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_TrataInt:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_TrataInt:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528                           
   529                           ; 2 bytes @ 0x0
   530  0070                     	ds	3
   531  0073                     ??_Lcd_Port:
   532  0073                     Lcd_Port@a:	
   533                           ; 1 bytes @ 0x3
   534                           
   535                           
   536                           ; 1 bytes @ 0x3
   537  0073                     	ds	1
   538  0074                     ??_Lcd_Cmd:
   539  0074                     ??_Lcd_Write_Char:	
   540                           ; 1 bytes @ 0x4
   541                           
   542                           
   543                           ; 1 bytes @ 0x4
   544  0074                     	ds	1
   545  0075                     Lcd_Write_Char@temp:
   546                           
   547                           ; 1 bytes @ 0x5
   548  0075                     	ds	1
   549  0076                     Lcd_Cmd@a:
   550  0076                     Lcd_Write_Char@y:	
   551                           ; 1 bytes @ 0x6
   552                           
   553                           
   554                           ; 1 bytes @ 0x6
   555  0076                     	ds	1
   556  0077                     ??_Lcd_Clear:
   557  0077                     ?_Lcd_Set_Cursor:	
   558                           ; 1 bytes @ 0x7
   559                           
   560  0077                     ??_Lcd_Init:	
   561                           ; 1 bytes @ 0x7
   562                           
   563  0077                     Lcd_Set_Cursor@b:	
   564                           ; 1 bytes @ 0x7
   565                           
   566  0077                     Lcd_Write_Char@a:	
   567                           ; 1 bytes @ 0x7
   568                           
   569                           
   570                           ; 1 bytes @ 0x7
   571  0077                     	ds	1
   572  0078                     ??_Lcd_Write_String:
   573                           
   574                           ; 1 bytes @ 0x8
   575  0078                     	ds	1
   576  0079                     ??_main:
   577                           
   578                           	psect	cstackBANK0
   579  0026                     __pcstackBANK0:	
   580                           ; 1 bytes @ 0x9
   581                           
   582  0026                     ??_Lcd_Set_Cursor:
   583  0026                     Lcd_Write_String@i:	
   584                           ; 1 bytes @ 0x0
   585                           
   586                           
   587                           ; 2 bytes @ 0x0
   588  0026                     	ds	2
   589  0028                     Lcd_Set_Cursor@a:
   590  0028                     Lcd_Write_String@a:	
   591                           ; 1 bytes @ 0x2
   592                           
   593                           
   594                           ; 1 bytes @ 0x2
   595  0028                     	ds	1
   596  0029                     Lcd_Set_Cursor@z:
   597                           
   598                           ; 1 bytes @ 0x3
   599  0029                     	ds	1
   600  002A                     Lcd_Set_Cursor@y:
   601                           
   602                           ; 1 bytes @ 0x4
   603  002A                     	ds	1
   604  002B                     Lcd_Set_Cursor@temp:
   605                           
   606                           ; 1 bytes @ 0x5
   607  002B                     	ds	1
   608                           
   609                           	psect	maintext
   610  0029                     __pmaintext:	
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 97 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  2   99[None  ] int 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels required when called: 4
   636 ;; This function calls:
   637 ;;		_Lcd_Clear
   638 ;;		_Lcd_Init
   639 ;;		_Lcd_Set_Cursor
   640 ;;		_Lcd_Write_String
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646  0029                     _main:	
   647                           ;psect for function _main
   648                           
   649  0029                     l1318:	
   650                           ;incstack = 0
   651                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   652                           
   653  0029  0064               	clrwdt	;# 
   654                           
   655                           ;main.c: 101:     OPTION_REGbits.nRBPU = 0;
   656  002A  1683               	bsf	3,5	;RP0=1, select bank1
   657  002B  1303               	bcf	3,6	;RP1=0, select bank1
   658  002C  1381               	bcf	1,7	;volatile
   659  002D                     l1320:
   660                           
   661                           ;main.c: 103:     TRISD = 0x00;
   662  002D  0188               	clrf	8	;volatile
   663                           
   664                           ;main.c: 104:     TRISC = 0x00;
   665  002E  0187               	clrf	7	;volatile
   666  002F                     l1322:
   667                           
   668                           ;main.c: 105:     PORTCbits.RC0 = 0;
   669  002F  1283               	bcf	3,5	;RP0=0, select bank0
   670  0030  1303               	bcf	3,6	;RP1=0, select bank0
   671  0031  1007               	bcf	7,0	;volatile
   672  0032                     l1324:
   673                           
   674                           ;main.c: 106:     PORTCbits.RC1 = 0;
   675  0032  1087               	bcf	7,1	;volatile
   676  0033                     l1326:
   677                           
   678                           ;main.c: 107:     PORTCbits.RC2 = 0;
   679  0033  1107               	bcf	7,2	;volatile
   680  0034                     l1328:
   681                           
   682                           ;main.c: 108:     PORTCbits.RC3 = 0;
   683  0034  1187               	bcf	7,3	;volatile
   684  0035                     l1330:
   685                           
   686                           ;main.c: 110:     INTCONbits.GIE = 1;
   687  0035  178B               	bsf	11,7	;volatile
   688  0036                     l1332:
   689                           
   690                           ;main.c: 111:     INTCONbits.PEIE = 1;
   691  0036  170B               	bsf	11,6	;volatile
   692  0037                     l1334:
   693                           
   694                           ;main.c: 112:     PIE1bits.TMR1IE = 1;
   695  0037  1683               	bsf	3,5	;RP0=1, select bank1
   696  0038  1303               	bcf	3,6	;RP1=0, select bank1
   697  0039  140C               	bsf	12,0	;volatile
   698  003A                     l1336:
   699                           
   700                           ;main.c: 114:     T1CONbits.TMR1CS = 0;
   701  003A  1283               	bcf	3,5	;RP0=0, select bank0
   702  003B  1303               	bcf	3,6	;RP1=0, select bank0
   703  003C  1090               	bcf	16,1	;volatile
   704  003D                     l1338:
   705                           
   706                           ;main.c: 115:     T1CONbits.T1CKPS0 = 1;
   707  003D  1610               	bsf	16,4	;volatile
   708  003E                     l1340:
   709                           
   710                           ;main.c: 116:     T1CONbits.T1CKPS1 = 1;
   711  003E  1690               	bsf	16,5	;volatile
   712  003F                     l1342:
   713                           
   714                           ;main.c: 118:     TMR1L = 0xDC;
   715  003F  30DC               	movlw	220
   716  0040  008E               	movwf	14	;volatile
   717  0041                     l1344:
   718                           
   719                           ;main.c: 119:     TMR1H = 0x0B;
   720  0041  300B               	movlw	11
   721  0042  008F               	movwf	15	;volatile
   722  0043                     l1346:
   723                           
   724                           ;main.c: 121:     Lcd_Init();
   725  0043  120A  118A  2346  120A  118A  	fcall	_Lcd_Init
   726  0048                     l100:	
   727                           ;main.c: 123:     while (1) {
   728                           
   729  0048  0064               	clrwdt	;# 
   730  0049                     l1348:
   731                           
   732                           ;main.c: 126:         coffee_flag = 0;
   733  0049  1283               	bcf	3,5	;RP0=0, select bank0
   734  004A  1303               	bcf	3,6	;RP1=0, select bank0
   735  004B  01A2               	clrf	_coffee_flag
   736  004C  01A3               	clrf	_coffee_flag+1
   737  004D                     l1350:
   738                           
   739                           ;main.c: 127:         milk_flag = 0;
   740  004D  01AC               	clrf	_milk_flag
   741  004E  01AD               	clrf	_milk_flag+1
   742  004F                     l1352:
   743                           
   744                           ;main.c: 128:         if (PORTBbits.RB3 == 1 && PORTBbits.RB5 == 0) {
   745  004F  1D86               	btfss	6,3	;volatile
   746  0050  2852               	goto	u931
   747  0051  2853               	goto	u930
   748  0052                     u931:
   749  0052  2874               	goto	l101
   750  0053                     u930:
   751  0053                     l1354:
   752  0053  1A86               	btfsc	6,5	;volatile
   753  0054  2856               	goto	u941
   754  0055  2857               	goto	u940
   755  0056                     u941:
   756  0056  2874               	goto	l101
   757  0057                     u940:
   758  0057                     l1356:
   759                           
   760                           ;main.c: 129:             Lcd_Set_Cursor(1, 1);
   761  0057  01F7               	clrf	Lcd_Set_Cursor@b
   762  0058  0AF7               	incf	Lcd_Set_Cursor@b,f
   763  0059  3001               	movlw	1
   764  005A  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   765  005F                     l1358:
   766                           
   767                           ;main.c: 130:             Lcd_Write_String("NO WATER LEFT!! ");
   768  005F  3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   769  0060  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   770  0065                     l1360:
   771                           
   772                           ;main.c: 131:             Lcd_Set_Cursor(2, 1);
   773  0065  01F7               	clrf	Lcd_Set_Cursor@b
   774  0066  0AF7               	incf	Lcd_Set_Cursor@b,f
   775  0067  3002               	movlw	2
   776  0068  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   777                           
   778                           ;main.c: 132:             Lcd_Write_String("                ");
   779  006D  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   780  006E  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   781                           
   782                           ;main.c: 133:         } else if (PORTBbits.RB3 == 0 && PORTBbits.RB5 == 1) {
   783  0073  2848               	goto	l100
   784  0074                     l101:
   785  0074  1986               	btfsc	6,3	;volatile
   786  0075  2877               	goto	u951
   787  0076  2878               	goto	u950
   788  0077                     u951:
   789  0077  2899               	goto	l103
   790  0078                     u950:
   791  0078                     l1362:
   792  0078  1E86               	btfss	6,5	;volatile
   793  0079  287B               	goto	u961
   794  007A  287C               	goto	u960
   795  007B                     u961:
   796  007B  2899               	goto	l103
   797  007C                     u960:
   798  007C                     l1364:
   799                           
   800                           ;main.c: 134:             Lcd_Set_Cursor(1, 1);
   801  007C  01F7               	clrf	Lcd_Set_Cursor@b
   802  007D  0AF7               	incf	Lcd_Set_Cursor@b,f
   803  007E  3001               	movlw	1
   804  007F  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   805  0084                     l1366:
   806                           
   807                           ;main.c: 135:             Lcd_Write_String("NO COFFEE LEFT!!");
   808  0084  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   809  0085  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   810  008A                     l1368:
   811                           
   812                           ;main.c: 136:             Lcd_Set_Cursor(2, 1);
   813  008A  01F7               	clrf	Lcd_Set_Cursor@b
   814  008B  0AF7               	incf	Lcd_Set_Cursor@b,f
   815  008C  3002               	movlw	2
   816  008D  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   817                           
   818                           ;main.c: 137:             Lcd_Write_String("                ");
   819  0092  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   820  0093  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   821                           
   822                           ;main.c: 138:         } else if (PORTBbits.RB3 == 1 && PORTBbits.RB5 == 1) {
   823  0098  2848               	goto	l100
   824  0099                     l103:
   825  0099  1D86               	btfss	6,3	;volatile
   826  009A  289C               	goto	u971
   827  009B  289D               	goto	u970
   828  009C                     u971:
   829  009C  28BE               	goto	l105
   830  009D                     u970:
   831  009D                     l1370:
   832  009D  1E86               	btfss	6,5	;volatile
   833  009E  28A0               	goto	u981
   834  009F  28A1               	goto	u980
   835  00A0                     u981:
   836  00A0  28BE               	goto	l105
   837  00A1                     u980:
   838  00A1                     l1372:
   839                           
   840                           ;main.c: 139:             Lcd_Set_Cursor(1, 1);
   841  00A1  01F7               	clrf	Lcd_Set_Cursor@b
   842  00A2  0AF7               	incf	Lcd_Set_Cursor@b,f
   843  00A3  3001               	movlw	1
   844  00A4  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   845  00A9                     l1374:
   846                           
   847                           ;main.c: 140:             Lcd_Write_String("NO WATER LEFT!! ");
   848  00A9  3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   849  00AA  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   850  00AF                     l1376:
   851                           
   852                           ;main.c: 141:             Lcd_Set_Cursor(2, 1);
   853  00AF  01F7               	clrf	Lcd_Set_Cursor@b
   854  00B0  0AF7               	incf	Lcd_Set_Cursor@b,f
   855  00B1  3002               	movlw	2
   856  00B2  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   857                           
   858                           ;main.c: 142:             Lcd_Write_String("NO COFFEE LEFT!!");
   859  00B7  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   860  00B8  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   861                           
   862                           ;main.c: 143:         } else if (PORTBbits.RB4 == 1 && PORTBbits.RB2 == 1) {
   863  00BD  2848               	goto	l100
   864  00BE                     l105:
   865  00BE  1E06               	btfss	6,4	;volatile
   866  00BF  28C1               	goto	u991
   867  00C0  28C2               	goto	u990
   868  00C1                     u991:
   869  00C1  28D5               	goto	l1384
   870  00C2                     u990:
   871  00C2                     l1378:
   872  00C2  1D06               	btfss	6,2	;volatile
   873  00C3  28C5               	goto	u1001
   874  00C4  28C6               	goto	u1000
   875  00C5                     u1001:
   876  00C5  28D5               	goto	l1384
   877  00C6                     u1000:
   878  00C6                     l1380:
   879                           
   880                           ;main.c: 144:             Lcd_Set_Cursor(1, 1);
   881  00C6  01F7               	clrf	Lcd_Set_Cursor@b
   882  00C7  0AF7               	incf	Lcd_Set_Cursor@b,f
   883  00C8  3001               	movlw	1
   884  00C9  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   885  00CE                     l1382:
   886                           
   887                           ;main.c: 145:             Lcd_Write_String("NO MILK LEFT!!  ");
   888  00CE  3078               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   889  00CF  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   890                           
   891                           ;main.c: 146:         } else {
   892  00D4  2848               	goto	l100
   893  00D5                     l1384:
   894                           
   895                           ;main.c: 147:             Lcd_Set_Cursor(1, 1);
   896  00D5  01F7               	clrf	Lcd_Set_Cursor@b
   897  00D6  0AF7               	incf	Lcd_Set_Cursor@b,f
   898  00D7  3001               	movlw	1
   899  00D8  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   900  00DD                     l1386:
   901                           
   902                           ;main.c: 148:             Lcd_Write_String("Your coffee:    ");
   903  00DD  3023               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   904  00DE  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   905  00E3                     l1388:
   906                           
   907                           ;main.c: 149:             Lcd_Set_Cursor(2, 1);
   908  00E3  01F7               	clrf	Lcd_Set_Cursor@b
   909  00E4  0AF7               	incf	Lcd_Set_Cursor@b,f
   910  00E5  3002               	movlw	2
   911  00E6  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
   912  00EB                     l1390:
   913                           
   914                           ;main.c: 151:             if (PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && PORTBbits.RB4 
      +                          == 0) {
   915  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   916  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   917  00ED  1C86               	btfss	6,1	;volatile
   918  00EE  28F0               	goto	u1011
   919  00EF  28F1               	goto	u1010
   920  00F0                     u1011:
   921  00F0  2900               	goto	l109
   922  00F1                     u1010:
   923  00F1                     l1392:
   924  00F1  1D06               	btfss	6,2	;volatile
   925  00F2  28F4               	goto	u1021
   926  00F3  28F5               	goto	u1020
   927  00F4                     u1021:
   928  00F4  2900               	goto	l109
   929  00F5                     u1020:
   930  00F5                     l1394:
   931  00F5  1A06               	btfsc	6,4	;volatile
   932  00F6  28F8               	goto	u1031
   933  00F7  28F9               	goto	u1030
   934  00F8                     u1031:
   935  00F8  2900               	goto	l109
   936  00F9                     u1030:
   937  00F9                     l1396:
   938                           
   939                           ;main.c: 152:                 Lcd_Write_String("Cold w/ Milk    ");
   940  00F9  3045               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   941  00FA  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   942                           
   943                           ;main.c: 153:             } else if (PORTBbits.RB1 == 1 && PORTBbits.RB2 == 0) {
   944  00FF  2931               	goto	l1412
   945  0100                     l109:
   946  0100  1C86               	btfss	6,1	;volatile
   947  0101  2903               	goto	u1041
   948  0102  2904               	goto	u1040
   949  0103                     u1041:
   950  0103  290F               	goto	l111
   951  0104                     u1040:
   952  0104                     l1398:
   953  0104  1906               	btfsc	6,2	;volatile
   954  0105  2907               	goto	u1051
   955  0106  2908               	goto	u1050
   956  0107                     u1051:
   957  0107  290F               	goto	l111
   958  0108                     u1050:
   959  0108                     l1400:
   960                           
   961                           ;main.c: 154:                 Lcd_Write_String("Cold wo/ Milk   ");
   962  0108  3067               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   963  0109  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   964                           
   965                           ;main.c: 155:             } else if (PORTBbits.RB1 == 0 && PORTBbits.RB2 == 1 && PORTBbi
      +                          ts.RB4 == 0) {
   966  010E  2931               	goto	l1412
   967  010F                     l111:
   968  010F  1886               	btfsc	6,1	;volatile
   969  0110  2912               	goto	u1061
   970  0111  2913               	goto	u1060
   971  0112                     u1061:
   972  0112  2922               	goto	l113
   973  0113                     u1060:
   974  0113                     l1402:
   975  0113  1D06               	btfss	6,2	;volatile
   976  0114  2916               	goto	u1071
   977  0115  2917               	goto	u1070
   978  0116                     u1071:
   979  0116  2922               	goto	l113
   980  0117                     u1070:
   981  0117                     l1404:
   982  0117  1A06               	btfsc	6,4	;volatile
   983  0118  291A               	goto	u1081
   984  0119  291B               	goto	u1080
   985  011A                     u1081:
   986  011A  2922               	goto	l113
   987  011B                     u1080:
   988  011B                     l1406:
   989                           
   990                           ;main.c: 156:                 Lcd_Write_String("Hot w/ Milk     ");
   991  011B  3012               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   992  011C  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
   993                           
   994                           ;main.c: 157:             } else if (PORTBbits.RB1 == 0 && PORTBbits.RB2 == 0) {
   995  0121  2931               	goto	l1412
   996  0122                     l113:
   997  0122  1886               	btfsc	6,1	;volatile
   998  0123  2925               	goto	u1091
   999  0124  2926               	goto	u1090
  1000  0125                     u1091:
  1001  0125  2931               	goto	l112
  1002  0126                     u1090:
  1003  0126                     l1408:
  1004  0126  1906               	btfsc	6,2	;volatile
  1005  0127  2929               	goto	u1101
  1006  0128  292A               	goto	u1100
  1007  0129                     u1101:
  1008  0129  2931               	goto	l112
  1009  012A                     u1100:
  1010  012A                     l1410:
  1011                           
  1012                           ;main.c: 158:                 Lcd_Write_String("Hot wo/ Milk    ");
  1013  012A  3034               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1014  012B  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
  1015  0130  2931               	goto	l1412
  1016  0131                     l112:
  1017  0131                     l1412:
  1018                           
  1019                           ;main.c: 161:             if (PORTBbits.RB7 == 1) {
  1020  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0133  1F86               	btfss	6,7	;volatile
  1023  0134  2936               	goto	u1111
  1024  0135  2937               	goto	u1110
  1025  0136                     u1111:
  1026  0136  29B9               	goto	l104
  1027  0137                     u1110:
  1028  0137                     l1414:
  1029                           
  1030                           ;main.c: 162:                 T1CONbits.TMR1ON = 0;
  1031  0137  1010               	bcf	16,0	;volatile
  1032  0138                     l1416:
  1033                           
  1034                           ;main.c: 163:                 preparating = 1;
  1035  0138  3001               	movlw	1
  1036  0139  00A0               	movwf	_preparating
  1037  013A  3000               	movlw	0
  1038  013B  00A1               	movwf	_preparating+1
  1039  013C                     l1418:
  1040                           
  1041                           ;main.c: 164:                 Lcd_Clear();
  1042  013C  120A  118A  2497  120A  118A  	fcall	_Lcd_Clear
  1043  0141                     l1420:
  1044                           
  1045                           ;main.c: 165:                 Lcd_Set_Cursor(1, 1);
  1046  0141  01F7               	clrf	Lcd_Set_Cursor@b
  1047  0142  0AF7               	incf	Lcd_Set_Cursor@b,f
  1048  0143  3001               	movlw	1
  1049  0144  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
  1050  0149                     l1422:
  1051                           
  1052                           ;main.c: 166:                 Lcd_Write_String("Preparing Coffee");
  1053  0149  30CD               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1054  014A  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
  1055  014F                     l1424:
  1056                           
  1057                           ;main.c: 167:                 if (PORTBbits.RB1 == 0) {
  1058  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1060  0151  1886               	btfsc	6,1	;volatile
  1061  0152  2954               	goto	u1121
  1062  0153  2955               	goto	u1120
  1063  0154                     u1121:
  1064  0154  296C               	goto	l117
  1065  0155                     u1120:
  1066  0155                     l1426:
  1067                           
  1068                           ;main.c: 168:                     Lcd_Set_Cursor(2, 1);
  1069  0155  01F7               	clrf	Lcd_Set_Cursor@b
  1070  0156  0AF7               	incf	Lcd_Set_Cursor@b,f
  1071  0157  3002               	movlw	2
  1072  0158  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
  1073  015D                     l1428:
  1074                           
  1075                           ;main.c: 169:                     Lcd_Write_String("Warming Up...   ");
  1076  015D  3056               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1077  015E  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
  1078                           
  1079                           ;main.c: 170:                     while (PORTBbits.RB6 == 0) {
  1080  0163  2965               	goto	l118
  1081  0164                     l119:
  1082                           
  1083                           ;main.c: 171:                         PORTCbits.RC0 = 1;
  1084  0164  1407               	bsf	7,0	;volatile
  1085  0165                     l118:	
  1086                           ;main.c: 172:                     }
  1087                           
  1088                           
  1089                           ;main.c: 170:                     while (PORTBbits.RB6 == 0) {
  1090  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0167  1F06               	btfss	6,6	;volatile
  1093  0168  296A               	goto	u1131
  1094  0169  296B               	goto	u1130
  1095  016A                     u1131:
  1096  016A  2964               	goto	l119
  1097  016B                     u1130:
  1098  016B                     l120:
  1099                           
  1100                           ;main.c: 173:                     PORTCbits.RC0 = 0;
  1101  016B  1007               	bcf	7,0	;volatile
  1102  016C                     l117:	
  1103                           ;main.c: 174:                 }
  1104                           
  1105  016C  0064               	clrwdt	;# 
  1106                           
  1107                           ;main.c: 176:                 T1CONbits.TMR1ON = 1;
  1108  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1109  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1110  016F  1410               	bsf	16,0	;volatile
  1111                           
  1112                           ;main.c: 177:                 if (PORTBbits.RB2 == 1) {
  1113  0170  1D06               	btfss	6,2	;volatile
  1114  0171  2973               	goto	u1141
  1115  0172  2974               	goto	u1140
  1116  0173                     u1141:
  1117  0173  2996               	goto	l1440
  1118  0174                     u1140:
  1119  0174                     l1430:
  1120                           
  1121                           ;main.c: 178:                     milk_flag = 0;
  1122  0174  01AC               	clrf	_milk_flag
  1123  0175  01AD               	clrf	_milk_flag+1
  1124  0176                     l1432:
  1125                           
  1126                           ;main.c: 179:                     Lcd_Set_Cursor(2, 1);
  1127  0176  01F7               	clrf	Lcd_Set_Cursor@b
  1128  0177  0AF7               	incf	Lcd_Set_Cursor@b,f
  1129  0178  3002               	movlw	2
  1130  0179  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
  1131  017E                     l1434:
  1132                           
  1133                           ;main.c: 180:                     Lcd_Write_String("Pouring Milk... ");
  1134  017E  309A               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1135  017F  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
  1136                           
  1137                           ;main.c: 182:                     while (milk_flag == 0) {
  1138  0184  298A               	goto	l1438
  1139  0185                     l123:
  1140                           
  1141                           ;main.c: 183:                         PORTCbits.RC2 = 1;
  1142  0185  1507               	bsf	7,2	;volatile
  1143  0186                     l1436:
  1144                           
  1145                           ;main.c: 184:                         coffee_or_milk = 1;
  1146  0186  3001               	movlw	1
  1147  0187  00A4               	movwf	_coffee_or_milk
  1148  0188  3000               	movlw	0
  1149  0189  00A5               	movwf	_coffee_or_milk+1
  1150  018A                     l1438:
  1151                           
  1152                           ;main.c: 182:                     while (milk_flag == 0) {
  1153  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1154  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1155  018C  082C               	movf	_milk_flag,w
  1156  018D  042D               	iorwf	_milk_flag+1,w
  1157  018E  1903               	btfsc	3,2
  1158  018F  2991               	goto	u1151
  1159  0190  2992               	goto	u1150
  1160  0191                     u1151:
  1161  0191  2985               	goto	l123
  1162  0192                     u1150:
  1163  0192                     l124:
  1164  0192  0064               	clrwdt	;# 
  1165                           
  1166                           ;main.c: 187:                     PORTCbits.RC2 = 0;
  1167  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0195  1107               	bcf	7,2	;volatile
  1170  0196                     l1440:
  1171                           
  1172                           ;main.c: 190:                 Lcd_Set_Cursor(2, 1);
  1173  0196  01F7               	clrf	Lcd_Set_Cursor@b
  1174  0197  0AF7               	incf	Lcd_Set_Cursor@b,f
  1175  0198  3002               	movlw	2
  1176  0199  120A  118A  23A3  120A  118A  	fcall	_Lcd_Set_Cursor
  1177  019E                     l1442:
  1178                           
  1179                           ;main.c: 191:                 Lcd_Write_String("Pouring Coffee..");
  1180  019E  30BC               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1181  019F  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
  1182                           
  1183                           ;main.c: 192:                 while (coffee_flag == 0) {
  1184  01A4  29A8               	goto	l1446
  1185  01A5                     l126:
  1186                           
  1187                           ;main.c: 193:                     PORTCbits.RC1 = 1;
  1188  01A5  1487               	bsf	7,1	;volatile
  1189  01A6                     l1444:
  1190                           
  1191                           ;main.c: 194:                     coffee_or_milk = 0;
  1192  01A6  01A4               	clrf	_coffee_or_milk
  1193  01A7  01A5               	clrf	_coffee_or_milk+1
  1194  01A8                     l1446:
  1195                           
  1196                           ;main.c: 192:                 while (coffee_flag == 0) {
  1197  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1198  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1199  01AA  0822               	movf	_coffee_flag,w
  1200  01AB  0423               	iorwf	_coffee_flag+1,w
  1201  01AC  1903               	btfsc	3,2
  1202  01AD  29AF               	goto	u1161
  1203  01AE  29B0               	goto	u1160
  1204  01AF                     u1161:
  1205  01AF  29A5               	goto	l126
  1206  01B0                     u1160:
  1207  01B0                     l127:
  1208  01B0  0064               	clrwdt	;# 
  1209                           
  1210                           ;main.c: 197:                 PORTCbits.RC1 = 0;
  1211  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1212  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1213  01B3  1087               	bcf	7,1	;volatile
  1214  01B4                     l1448:
  1215                           
  1216                           ;main.c: 198:                 coffee_or_milk = 2;
  1217  01B4  3002               	movlw	2
  1218  01B5  00A4               	movwf	_coffee_or_milk
  1219  01B6  3000               	movlw	0
  1220  01B7  00A5               	movwf	_coffee_or_milk+1
  1221  01B8  2848               	goto	l100
  1222  01B9                     l104:
  1223  01B9  2848               	goto	l100
  1224  01BA  120A  118A  280E   	ljmp	start
  1225  01BD                     __end_of_main:
  1226                           
  1227                           	psect	text1
  1228  0432                     __ptext1:	
  1229 ;; *************** function _Lcd_Write_String *****************
  1230 ;; Defined at:
  1231 ;;		line 97 in file "./lcd.h"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  a               1    wreg     PTR unsigned char 
  1234 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  1235 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1236 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1237 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  a               1    2[BANK0 ] PTR unsigned char 
  1240 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  1241 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1242 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1243 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1244 ;;  i               2    0[BANK0 ] int 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       0       0       0       0
  1255 ;;      Locals:         0       3       0       0       0
  1256 ;;      Temps:          0       0       0       0       0
  1257 ;;      Totals:         0       3       0       0       0
  1258 ;;Total ram usage:        3 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 3
  1261 ;; This function calls:
  1262 ;;		_Lcd_Write_Char
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268  0432                     _Lcd_Write_String:	
  1269                           ;psect for function _Lcd_Write_String
  1270                           
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1274                           ;Lcd_Write_String@a stored from wreg
  1275  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0434  00A8               	movwf	Lcd_Write_String@a
  1278  0435                     l1306:
  1279                           
  1280                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  1281  0435  01A6               	clrf	Lcd_Write_String@i
  1282  0436  01A7               	clrf	Lcd_Write_String@i+1
  1283  0437  2C4D               	goto	l1312
  1284  0438                     l1308:
  1285                           
  1286                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  1287  0438  0826               	movf	Lcd_Write_String@i,w
  1288  0439  0728               	addwf	Lcd_Write_String@a,w
  1289  043A  0084               	movwf	4
  1290  043B  120A  118A  2200  120A  118A  	fcall	stringdir
  1291  0440  120A  118A  23FB  120A  118A  	fcall	_Lcd_Write_Char
  1292  0445                     l1310:
  1293  0445  3001               	movlw	1
  1294  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0448  07A6               	addwf	Lcd_Write_String@i,f
  1297  0449  1803               	skipnc
  1298  044A  0AA7               	incf	Lcd_Write_String@i+1,f
  1299  044B  3000               	movlw	0
  1300  044C  07A7               	addwf	Lcd_Write_String@i+1,f
  1301  044D                     l1312:
  1302  044D  0826               	movf	Lcd_Write_String@i,w
  1303  044E  0728               	addwf	Lcd_Write_String@a,w
  1304  044F  0084               	movwf	4
  1305  0450  120A  118A  2200  120A  118A  	fcall	stringdir
  1306  0455  3A00               	xorlw	0
  1307  0456  1D03               	skipz
  1308  0457  2C59               	goto	u921
  1309  0458  2C5A               	goto	u920
  1310  0459                     u921:
  1311  0459  2C38               	goto	l1308
  1312  045A                     u920:
  1313  045A                     l65:
  1314  045A  0008               	return
  1315  045B                     __end_of_Lcd_Write_String:
  1316                           
  1317                           	psect	text2
  1318  03FB                     __ptext2:	
  1319 ;; *************** function _Lcd_Write_Char *****************
  1320 ;; Defined at:
  1321 ;;		line 81 in file "./lcd.h"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  a               1    wreg     unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  a               1    7[COMMON] unsigned char 
  1326 ;;  y               1    6[COMMON] unsigned char 
  1327 ;;  temp            1    5[COMMON] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0, pclath, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         3       0       0       0       0
  1339 ;;      Temps:          1       0       0       0       0
  1340 ;;      Totals:         4       0       0       0       0
  1341 ;;Total ram usage:        4 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 2
  1344 ;; This function calls:
  1345 ;;		_Lcd_Port
  1346 ;; This function is called by:
  1347 ;;		_Lcd_Write_String
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351  03FB                     _Lcd_Write_Char:	
  1352                           ;psect for function _Lcd_Write_Char
  1353                           
  1354                           
  1355                           ;incstack = 0
  1356                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1357                           ;Lcd_Write_Char@a stored from wreg
  1358  03FB  00F7               	movwf	Lcd_Write_Char@a
  1359  03FC                     l1254:
  1360                           
  1361                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  1362  03FC  0877               	movf	Lcd_Write_Char@a,w
  1363  03FD  390F               	andlw	15
  1364  03FE  00F4               	movwf	??_Lcd_Write_Char
  1365  03FF  0874               	movf	??_Lcd_Write_Char,w
  1366  0400  00F5               	movwf	Lcd_Write_Char@temp
  1367                           
  1368                           ;./lcd.h: 85:    y = a&0xF0;
  1369  0401  0877               	movf	Lcd_Write_Char@a,w
  1370  0402  39F0               	andlw	240
  1371  0403  00F4               	movwf	??_Lcd_Write_Char
  1372  0404  0874               	movf	??_Lcd_Write_Char,w
  1373  0405  00F6               	movwf	Lcd_Write_Char@y
  1374  0406                     l1256:
  1375                           
  1376                           ;./lcd.h: 86:    PORTDbits.RD0 = 1;
  1377  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0408  1408               	bsf	8,0	;volatile
  1380  0409                     l1258:
  1381                           
  1382                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  1383  0409  0876               	movf	Lcd_Write_Char@y,w
  1384  040A  00F4               	movwf	??_Lcd_Write_Char
  1385  040B  3004               	movlw	4
  1386  040C                     u875:
  1387  040C  1003               	clrc
  1388  040D  0CF4               	rrf	??_Lcd_Write_Char,f
  1389  040E  3EFF               	addlw	-1
  1390  040F  1D03               	skipz
  1391  0410  2C0C               	goto	u875
  1392  0411  0874               	movf	??_Lcd_Write_Char,w
  1393  0412  120A  118A  245B  120A  118A  	fcall	_Lcd_Port
  1394  0417                     l1260:
  1395                           
  1396                           ;./lcd.h: 88:    PORTDbits.RD2 = 1;
  1397  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0419  1508               	bsf	8,2	;volatile
  1400  041A                     l1262:
  1401                           
  1402                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1403  041A  300D               	movlw	13
  1404  041B  00F4               	movwf	??_Lcd_Write_Char
  1405  041C                     u1177:
  1406  041C  0BF4               	decfsz	??_Lcd_Write_Char,f
  1407  041D  2C1C               	goto	u1177
  1408  041E                     l1264:
  1409                           
  1410                           ;./lcd.h: 90:    PORTDbits.RD2 = 0;
  1411  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1412  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0420  1108               	bcf	8,2	;volatile
  1414  0421                     l1266:
  1415                           
  1416                           ;./lcd.h: 91:    Lcd_Port(temp);
  1417  0421  0875               	movf	Lcd_Write_Char@temp,w
  1418  0422  120A  118A  245B  120A  118A  	fcall	_Lcd_Port
  1419  0427                     l1268:
  1420                           
  1421                           ;./lcd.h: 92:    PORTDbits.RD2 = 1;
  1422  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0429  1508               	bsf	8,2	;volatile
  1425  042A                     l1270:
  1426                           
  1427                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1428  042A  300D               	movlw	13
  1429  042B  00F4               	movwf	??_Lcd_Write_Char
  1430  042C                     u1187:
  1431  042C  0BF4               	decfsz	??_Lcd_Write_Char,f
  1432  042D  2C2C               	goto	u1187
  1433  042E                     l1272:
  1434                           
  1435                           ;./lcd.h: 94:    PORTDbits.RD2 = 0;
  1436  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1437  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0430  1108               	bcf	8,2	;volatile
  1439  0431                     l59:
  1440  0431  0008               	return
  1441  0432                     __end_of_Lcd_Write_Char:
  1442                           
  1443                           	psect	text3
  1444  03A3                     __ptext3:	
  1445 ;; *************** function _Lcd_Set_Cursor *****************
  1446 ;; Defined at:
  1447 ;;		line 41 in file "./lcd.h"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  a               1    wreg     unsigned char 
  1450 ;;  b               1    7[COMMON] unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  a               1    2[BANK0 ] unsigned char 
  1453 ;;  temp            1    5[BANK0 ] unsigned char 
  1454 ;;  y               1    4[BANK0 ] unsigned char 
  1455 ;;  z               1    3[BANK0 ] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0, pclath, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         1       0       0       0       0
  1466 ;;      Locals:         0       4       0       0       0
  1467 ;;      Temps:          0       2       0       0       0
  1468 ;;      Totals:         1       6       0       0       0
  1469 ;;Total ram usage:        7 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 3
  1472 ;; This function calls:
  1473 ;;		_Lcd_Cmd
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479  03A3                     _Lcd_Set_Cursor:	
  1480                           ;psect for function _Lcd_Set_Cursor
  1481                           
  1482                           
  1483                           ;incstack = 0
  1484                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1485                           ;Lcd_Set_Cursor@a stored from wreg
  1486  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1487  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1488  03A5  00A8               	movwf	Lcd_Set_Cursor@a
  1489  03A6                     l1276:
  1490                           
  1491                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  1492  03A6  0328               	decf	Lcd_Set_Cursor@a,w
  1493  03A7  1D03               	btfss	3,2
  1494  03A8  2BAA               	goto	u881
  1495  03A9  2BAB               	goto	u880
  1496  03AA                     u881:
  1497  03AA  2BD0               	goto	l1286
  1498  03AB                     u880:
  1499  03AB                     l1278:
  1500                           
  1501                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  1502  03AB  0877               	movf	Lcd_Set_Cursor@b,w
  1503  03AC  3E7F               	addlw	127
  1504  03AD  00A6               	movwf	??_Lcd_Set_Cursor
  1505  03AE  0826               	movf	??_Lcd_Set_Cursor,w
  1506  03AF  00AB               	movwf	Lcd_Set_Cursor@temp
  1507                           
  1508                           ;./lcd.h: 47:   z = temp>>4;
  1509  03B0  082B               	movf	Lcd_Set_Cursor@temp,w
  1510  03B1  00A6               	movwf	??_Lcd_Set_Cursor
  1511  03B2  3004               	movlw	4
  1512  03B3                     u895:
  1513  03B3  1003               	clrc
  1514  03B4  0CA6               	rrf	??_Lcd_Set_Cursor,f
  1515  03B5  3EFF               	addlw	-1
  1516  03B6  1D03               	skipz
  1517  03B7  2BB3               	goto	u895
  1518  03B8  0826               	movf	??_Lcd_Set_Cursor,w
  1519  03B9  00A7               	movwf	??_Lcd_Set_Cursor+1
  1520  03BA  0827               	movf	??_Lcd_Set_Cursor+1,w
  1521  03BB  00A9               	movwf	Lcd_Set_Cursor@z
  1522  03BC                     l1280:
  1523                           
  1524                           ;./lcd.h: 48:   y = temp & 0x0F;
  1525  03BC  082B               	movf	Lcd_Set_Cursor@temp,w
  1526  03BD  390F               	andlw	15
  1527  03BE  00A6               	movwf	??_Lcd_Set_Cursor
  1528  03BF  0826               	movf	??_Lcd_Set_Cursor,w
  1529  03C0  00AA               	movwf	Lcd_Set_Cursor@y
  1530  03C1                     l1282:
  1531                           
  1532                           ;./lcd.h: 49:   Lcd_Cmd(z);
  1533  03C1  0829               	movf	Lcd_Set_Cursor@z,w
  1534  03C2  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1535  03C7                     l1284:
  1536                           
  1537                           ;./lcd.h: 50:   Lcd_Cmd(y);
  1538  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1539  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1540  03C9  082A               	movf	Lcd_Set_Cursor@y,w
  1541  03CA  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1542                           
  1543                           ;./lcd.h: 51:  }
  1544  03CF  2BFA               	goto	l53
  1545  03D0                     l1286:
  1546  03D0  3002               	movlw	2
  1547  03D1  0628               	xorwf	Lcd_Set_Cursor@a,w
  1548  03D2  1D03               	btfss	3,2
  1549  03D3  2BD5               	goto	u901
  1550  03D4  2BD6               	goto	u900
  1551  03D5                     u901:
  1552  03D5  2BFA               	goto	l53
  1553  03D6                     u900:
  1554  03D6                     l1288:
  1555                           
  1556                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  1557  03D6  0877               	movf	Lcd_Set_Cursor@b,w
  1558  03D7  3EBF               	addlw	191
  1559  03D8  00A6               	movwf	??_Lcd_Set_Cursor
  1560  03D9  0826               	movf	??_Lcd_Set_Cursor,w
  1561  03DA  00AB               	movwf	Lcd_Set_Cursor@temp
  1562                           
  1563                           ;./lcd.h: 55:   z = temp>>4;
  1564  03DB  082B               	movf	Lcd_Set_Cursor@temp,w
  1565  03DC  00A6               	movwf	??_Lcd_Set_Cursor
  1566  03DD  3004               	movlw	4
  1567  03DE                     u915:
  1568  03DE  1003               	clrc
  1569  03DF  0CA6               	rrf	??_Lcd_Set_Cursor,f
  1570  03E0  3EFF               	addlw	-1
  1571  03E1  1D03               	skipz
  1572  03E2  2BDE               	goto	u915
  1573  03E3  0826               	movf	??_Lcd_Set_Cursor,w
  1574  03E4  00A7               	movwf	??_Lcd_Set_Cursor+1
  1575  03E5  0827               	movf	??_Lcd_Set_Cursor+1,w
  1576  03E6  00A9               	movwf	Lcd_Set_Cursor@z
  1577  03E7                     l1290:
  1578                           
  1579                           ;./lcd.h: 56:   y = temp & 0x0F;
  1580  03E7  082B               	movf	Lcd_Set_Cursor@temp,w
  1581  03E8  390F               	andlw	15
  1582  03E9  00A6               	movwf	??_Lcd_Set_Cursor
  1583  03EA  0826               	movf	??_Lcd_Set_Cursor,w
  1584  03EB  00AA               	movwf	Lcd_Set_Cursor@y
  1585  03EC                     l1292:
  1586                           
  1587                           ;./lcd.h: 57:   Lcd_Cmd(z);
  1588  03EC  0829               	movf	Lcd_Set_Cursor@z,w
  1589  03ED  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1590  03F2                     l1294:
  1591                           
  1592                           ;./lcd.h: 58:   Lcd_Cmd(y);
  1593  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1594  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1595  03F4  082A               	movf	Lcd_Set_Cursor@y,w
  1596  03F5  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1597  03FA                     l53:
  1598  03FA  0008               	return
  1599  03FB                     __end_of_Lcd_Set_Cursor:
  1600                           
  1601                           	psect	text4
  1602  0346                     __ptext4:	
  1603 ;; *************** function _Lcd_Init *****************
  1604 ;; Defined at:
  1605 ;;		line 62 in file "./lcd.h"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0
  1621 ;;      Temps:          2       0       0       0       0
  1622 ;;      Totals:         2       0       0       0       0
  1623 ;;Total ram usage:        2 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 3
  1626 ;; This function calls:
  1627 ;;		_Lcd_Cmd
  1628 ;;		_Lcd_Port
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634  0346                     _Lcd_Init:	
  1635                           ;psect for function _Lcd_Init
  1636                           
  1637  0346                     l1296:	
  1638                           ;incstack = 0
  1639                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1640                           
  1641                           
  1642                           ;./lcd.h: 64:   Lcd_Port(0x00);
  1643  0346  3000               	movlw	0
  1644  0347  120A  118A  245B  120A  118A  	fcall	_Lcd_Port
  1645  034C                     l1298:
  1646                           
  1647                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1648  034C  301A               	movlw	26
  1649  034D  00F8               	movwf	??_Lcd_Init+1
  1650  034E  30F8               	movlw	248
  1651  034F  00F7               	movwf	??_Lcd_Init
  1652  0350                     u1197:
  1653  0350  0BF7               	decfsz	??_Lcd_Init,f
  1654  0351  2B50               	goto	u1197
  1655  0352  0BF8               	decfsz	??_Lcd_Init+1,f
  1656  0353  2B50               	goto	u1197
  1657  0354  0000               	nop
  1658  0355                     l1300:
  1659                           
  1660                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  1661  0355  3003               	movlw	3
  1662  0356  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1663                           
  1664                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1665  035B  3007               	movlw	7
  1666  035C  00F8               	movwf	??_Lcd_Init+1
  1667  035D  307D               	movlw	125
  1668  035E  00F7               	movwf	??_Lcd_Init
  1669  035F                     u1207:
  1670  035F  0BF7               	decfsz	??_Lcd_Init,f
  1671  0360  2B5F               	goto	u1207
  1672  0361  0BF8               	decfsz	??_Lcd_Init+1,f
  1673  0362  2B5F               	goto	u1207
  1674  0363                     l1302:
  1675                           
  1676                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  1677  0363  3003               	movlw	3
  1678  0364  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1679  0369                     l1304:
  1680                           
  1681                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1682  0369  300F               	movlw	15
  1683  036A  00F8               	movwf	??_Lcd_Init+1
  1684  036B  3047               	movlw	71
  1685  036C  00F7               	movwf	??_Lcd_Init
  1686  036D                     u1217:
  1687  036D  0BF7               	decfsz	??_Lcd_Init,f
  1688  036E  2B6D               	goto	u1217
  1689  036F  0BF8               	decfsz	??_Lcd_Init+1,f
  1690  0370  2B6D               	goto	u1217
  1691  0371  2B72               	nop2
  1692                           
  1693                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  1694  0372  3003               	movlw	3
  1695  0373  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1696                           
  1697                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  1698  0378  3002               	movlw	2
  1699  0379  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1700                           
  1701                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  1702  037E  3002               	movlw	2
  1703  037F  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1704                           
  1705                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  1706  0384  3008               	movlw	8
  1707  0385  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1708                           
  1709                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  1710  038A  3000               	movlw	0
  1711  038B  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1712                           
  1713                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  1714  0390  300C               	movlw	12
  1715  0391  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1716                           
  1717                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  1718  0396  3000               	movlw	0
  1719  0397  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1720                           
  1721                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  1722  039C  3006               	movlw	6
  1723  039D  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1724  03A2                     l56:
  1725  03A2  0008               	return
  1726  03A3                     __end_of_Lcd_Init:
  1727                           
  1728                           	psect	text5
  1729  0497                     __ptext5:	
  1730 ;; *************** function _Lcd_Clear *****************
  1731 ;; Defined at:
  1732 ;;		line 35 in file "./lcd.h"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 3
  1753 ;; This function calls:
  1754 ;;		_Lcd_Cmd
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760  0497                     _Lcd_Clear:	
  1761                           ;psect for function _Lcd_Clear
  1762                           
  1763  0497                     l1274:	
  1764                           ;incstack = 0
  1765                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1766                           
  1767                           
  1768                           ;./lcd.h: 37:  Lcd_Cmd(0);
  1769  0497  3000               	movlw	0
  1770  0498  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1771                           
  1772                           ;./lcd.h: 38:  Lcd_Cmd(1);
  1773  049D  3001               	movlw	1
  1774  049E  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1775  04A3                     l47:
  1776  04A3  0008               	return
  1777  04A4                     __end_of_Lcd_Clear:
  1778                           
  1779                           	psect	text6
  1780  047D                     __ptext6:	
  1781 ;; *************** function _Lcd_Cmd *****************
  1782 ;; Defined at:
  1783 ;;		line 26 in file "./lcd.h"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  a               1    wreg     unsigned char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  a               1    6[COMMON] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       0       0       0       0
  1798 ;;      Locals:         1       0       0       0       0
  1799 ;;      Temps:          2       0       0       0       0
  1800 ;;      Totals:         3       0       0       0       0
  1801 ;;Total ram usage:        3 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 2
  1804 ;; This function calls:
  1805 ;;		_Lcd_Port
  1806 ;; This function is called by:
  1807 ;;		_Lcd_Clear
  1808 ;;		_Lcd_Set_Cursor
  1809 ;;		_Lcd_Init
  1810 ;;		_Lcd_Shift_Right
  1811 ;;		_Lcd_Shift_Left
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815  047D                     _Lcd_Cmd:	
  1816                           ;psect for function _Lcd_Cmd
  1817                           
  1818                           
  1819                           ;incstack = 0
  1820                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1821                           ;Lcd_Cmd@a stored from wreg
  1822  047D  00F6               	movwf	Lcd_Cmd@a
  1823  047E                     l1244:
  1824                           
  1825                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTDbits.RD0 = 0;
  1826  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1827  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0480  1008               	bcf	8,0	;volatile
  1829  0481                     l1246:
  1830                           
  1831                           ;./lcd.h: 29:  Lcd_Port(a);
  1832  0481  0876               	movf	Lcd_Cmd@a,w
  1833  0482  120A  118A  245B  120A  118A  	fcall	_Lcd_Port
  1834  0487                     l1248:
  1835                           
  1836                           ;./lcd.h: 30:  PORTDbits.RD2 = 1;
  1837  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0489  1508               	bsf	8,2	;volatile
  1840  048A                     l1250:
  1841                           
  1842                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1843  048A  3006               	movlw	6
  1844  048B  00F5               	movwf	??_Lcd_Cmd+1
  1845  048C  3030               	movlw	48
  1846  048D  00F4               	movwf	??_Lcd_Cmd
  1847  048E                     u1227:
  1848  048E  0BF4               	decfsz	??_Lcd_Cmd,f
  1849  048F  2C8E               	goto	u1227
  1850  0490  0BF5               	decfsz	??_Lcd_Cmd+1,f
  1851  0491  2C8E               	goto	u1227
  1852  0492  0000               	nop
  1853  0493                     l1252:
  1854                           
  1855                           ;./lcd.h: 32:         PORTDbits.RD2 = 0;
  1856  0493  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0494  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0495  1108               	bcf	8,2	;volatile
  1859  0496                     l44:
  1860  0496  0008               	return
  1861  0497                     __end_of_Lcd_Cmd:
  1862                           
  1863                           	psect	text7
  1864  045B                     __ptext7:	
  1865 ;; *************** function _Lcd_Port *****************
  1866 ;; Defined at:
  1867 ;;		line 4 in file "./lcd.h"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  a               1    wreg     unsigned char 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  a               1    3[COMMON] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1881 ;;      Params:         0       0       0       0       0
  1882 ;;      Locals:         1       0       0       0       0
  1883 ;;      Temps:          0       0       0       0       0
  1884 ;;      Totals:         1       0       0       0       0
  1885 ;;Total ram usage:        1 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 1
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_Lcd_Cmd
  1892 ;;		_Lcd_Init
  1893 ;;		_Lcd_Write_Char
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897  045B                     _Lcd_Port:	
  1898                           ;psect for function _Lcd_Port
  1899                           
  1900                           
  1901                           ;incstack = 0
  1902                           ; Regs used in _Lcd_Port: [wreg]
  1903                           ;Lcd_Port@a stored from wreg
  1904  045B  00F3               	movwf	Lcd_Port@a
  1905  045C                     l1234:
  1906                           
  1907                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  1908  045C  1C73               	btfss	Lcd_Port@a,0
  1909  045D  2C5F               	goto	u831
  1910  045E  2C60               	goto	u830
  1911  045F                     u831:
  1912  045F  2C64               	goto	l33
  1913  0460                     u830:
  1914  0460                     l1236:
  1915                           
  1916                           ;./lcd.h: 7:   PORTDbits.RD4 = 1;
  1917  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0462  1608               	bsf	8,4	;volatile
  1920  0463  2C67               	goto	l34
  1921  0464                     l33:	
  1922                           ;./lcd.h: 8:  else
  1923                           
  1924                           
  1925                           ;./lcd.h: 9:   PORTDbits.RD4 = 0;
  1926  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0466  1208               	bcf	8,4	;volatile
  1929  0467                     l34:
  1930                           
  1931                           ;./lcd.h: 11:  if(a & 2)
  1932  0467  1CF3               	btfss	Lcd_Port@a,1
  1933  0468  2C6A               	goto	u841
  1934  0469  2C6B               	goto	u840
  1935  046A                     u841:
  1936  046A  2C6D               	goto	l35
  1937  046B                     u840:
  1938  046B                     l1238:
  1939                           
  1940                           ;./lcd.h: 12:   PORTDbits.RD5 = 1;
  1941  046B  1688               	bsf	8,5	;volatile
  1942  046C  2C6E               	goto	l36
  1943  046D                     l35:	
  1944                           ;./lcd.h: 13:  else
  1945                           
  1946                           
  1947                           ;./lcd.h: 14:   PORTDbits.RD5 = 0;
  1948  046D  1288               	bcf	8,5	;volatile
  1949  046E                     l36:
  1950                           
  1951                           ;./lcd.h: 16:  if(a & 4)
  1952  046E  1D73               	btfss	Lcd_Port@a,2
  1953  046F  2C71               	goto	u851
  1954  0470  2C72               	goto	u850
  1955  0471                     u851:
  1956  0471  2C74               	goto	l37
  1957  0472                     u850:
  1958  0472                     l1240:
  1959                           
  1960                           ;./lcd.h: 17:   PORTDbits.RD6 = 1;
  1961  0472  1708               	bsf	8,6	;volatile
  1962  0473  2C75               	goto	l38
  1963  0474                     l37:	
  1964                           ;./lcd.h: 18:  else
  1965                           
  1966                           
  1967                           ;./lcd.h: 19:   PORTDbits.RD6 = 0;
  1968  0474  1308               	bcf	8,6	;volatile
  1969  0475                     l38:
  1970                           
  1971                           ;./lcd.h: 21:  if(a & 8)
  1972  0475  1DF3               	btfss	Lcd_Port@a,3
  1973  0476  2C78               	goto	u861
  1974  0477  2C79               	goto	u860
  1975  0478                     u861:
  1976  0478  2C7B               	goto	l39
  1977  0479                     u860:
  1978  0479                     l1242:
  1979                           
  1980                           ;./lcd.h: 22:   PORTDbits.RD7 = 1;
  1981  0479  1788               	bsf	8,7	;volatile
  1982  047A  2C7C               	goto	l41
  1983  047B                     l39:	
  1984                           ;./lcd.h: 23:  else
  1985                           
  1986                           
  1987                           ;./lcd.h: 24:   PORTDbits.RD7 = 0;
  1988  047B  1388               	bcf	8,7	;volatile
  1989  047C                     l41:
  1990  047C  0008               	return
  1991  047D                     __end_of_Lcd_Port:
  1992                           
  1993                           	psect	text8
  1994  02E3                     __ptext8:	
  1995 ;; *************** function _TrataInt *****************
  1996 ;; Defined at:
  1997 ;;		line 57 in file "main.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, btemp+1
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          3       0       0       0       0
  2014 ;;      Totals:         3       0       0       0       0
  2015 ;;Total ram usage:        3 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		Interrupt level 1
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024  02E3                     _TrataInt:	
  2025                           ;psect for function _TrataInt
  2026                           
  2027  02E3                     i1l1062:
  2028                           
  2029                           ;main.c: 58:     if (TMR1IF)
  2030  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2031  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2032  02E5  1C0C               	btfss	12,0	;volatile
  2033  02E6  2AE8               	goto	u52_21
  2034  02E7  2AE9               	goto	u52_20
  2035  02E8                     u52_21:
  2036  02E8  2B25               	goto	i1l1088
  2037  02E9                     u52_20:
  2038  02E9                     i1l1064:
  2039                           
  2040                           ;main.c: 59:     {;main.c: 60:         PIR1bits.TMR1IF = 0;
  2041  02E9  100C               	bcf	12,0	;volatile
  2042  02EA                     i1l1066:
  2043                           
  2044                           ;main.c: 61:         TMR1L = 0xDC;
  2045  02EA  30DC               	movlw	220
  2046  02EB  008E               	movwf	14	;volatile
  2047                           
  2048                           ;main.c: 62:         TMR1H = 0x0B;
  2049  02EC  300B               	movlw	11
  2050  02ED  008F               	movwf	15	;volatile
  2051  02EE                     i1l1068:
  2052                           
  2053                           ;main.c: 64:         if (conta < 20) {
  2054  02EE  087A               	movf	_conta+1,w
  2055  02EF  3A80               	xorlw	128
  2056  02F0  00FF               	movwf	btemp+1
  2057  02F1  3080               	movlw	128
  2058  02F2  027F               	subwf	btemp+1,w
  2059  02F3  1D03               	skipz
  2060  02F4  2AF7               	goto	u53_25
  2061  02F5  3014               	movlw	20
  2062  02F6  0279               	subwf	_conta,w
  2063  02F7                     u53_25:
  2064  02F7  1803               	skipnc
  2065  02F8  2AFA               	goto	u53_21
  2066  02F9  2AFB               	goto	u53_20
  2067  02FA                     u53_21:
  2068  02FA  2AFC               	goto	i1l1072
  2069  02FB                     u53_20:
  2070  02FB                     i1l1070:
  2071  02FB  0064               	clrwdt	;# 
  2072  02FC                     i1l1072:
  2073                           
  2074                           ;main.c: 67:         conta++;
  2075  02FC  3001               	movlw	1
  2076  02FD  07F9               	addwf	_conta,f
  2077  02FE  1803               	skipnc
  2078  02FF  0AFA               	incf	_conta+1,f
  2079  0300  3000               	movlw	0
  2080  0301  07FA               	addwf	_conta+1,f
  2081  0302                     i1l1074:
  2082                           
  2083                           ;main.c: 68:         if (conta == 20) {
  2084  0302  3014               	movlw	20
  2085  0303  0679               	xorwf	_conta,w
  2086  0304  047A               	iorwf	_conta+1,w
  2087  0305  1D03               	btfss	3,2
  2088  0306  2B08               	goto	u54_21
  2089  0307  2B09               	goto	u54_20
  2090  0308                     u54_21:
  2091  0308  2B25               	goto	i1l1088
  2092  0309                     u54_20:
  2093  0309                     i1l1076:
  2094                           
  2095                           ;main.c: 70:             if (coffee_or_milk == 0) {
  2096  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2097  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2098  030B  0824               	movf	_coffee_or_milk,w
  2099  030C  0425               	iorwf	_coffee_or_milk+1,w
  2100  030D  1D03               	btfss	3,2
  2101  030E  2B10               	goto	u55_21
  2102  030F  2B11               	goto	u55_20
  2103  0310                     u55_21:
  2104  0310  2B17               	goto	i1l1082
  2105  0311                     u55_20:
  2106  0311                     i1l1078:
  2107                           
  2108                           ;main.c: 71:                 PORTCbits.RC3 = 1;
  2109  0311  1587               	bsf	7,3	;volatile
  2110  0312                     i1l1080:
  2111                           
  2112                           ;main.c: 72:                 coffee_flag = 1;
  2113  0312  3001               	movlw	1
  2114  0313  00A2               	movwf	_coffee_flag
  2115  0314  3000               	movlw	0
  2116  0315  00A3               	movwf	_coffee_flag+1
  2117                           
  2118                           ;main.c: 73:             } else if (coffee_or_milk == 1) {
  2119  0316  2B23               	goto	i1l1086
  2120  0317                     i1l1082:
  2121  0317  0324               	decf	_coffee_or_milk,w
  2122  0318  0425               	iorwf	_coffee_or_milk+1,w
  2123  0319  1D03               	btfss	3,2
  2124  031A  2B1C               	goto	u56_21
  2125  031B  2B1D               	goto	u56_20
  2126  031C                     u56_21:
  2127  031C  2B22               	goto	i1l91
  2128  031D                     u56_20:
  2129  031D                     i1l1084:
  2130                           
  2131                           ;main.c: 74:                 milk_flag = 1;
  2132  031D  3001               	movlw	1
  2133  031E  00AC               	movwf	_milk_flag
  2134  031F  3000               	movlw	0
  2135  0320  00AD               	movwf	_milk_flag+1
  2136                           
  2137                           ;main.c: 75:             } else {
  2138  0321  2B23               	goto	i1l1086
  2139  0322                     i1l91:
  2140                           
  2141                           ;main.c: 76:                 PORTCbits.RC3 = 0;
  2142  0322  1187               	bcf	7,3	;volatile
  2143  0323                     i1l1086:
  2144                           
  2145                           ;main.c: 79:             conta = 0;
  2146  0323  01F9               	clrf	_conta
  2147  0324  01FA               	clrf	_conta+1
  2148  0325                     i1l1088:
  2149                           
  2150                           ;main.c: 82:     if (INTF)
  2151  0325  1C8B               	btfss	11,1	;volatile
  2152  0326  2B28               	goto	u57_21
  2153  0327  2B29               	goto	u57_20
  2154  0328                     u57_21:
  2155  0328  2B3D               	goto	i1l95
  2156  0329                     u57_20:
  2157  0329                     i1l1090:
  2158                           
  2159                           ;main.c: 83:     {;main.c: 84:         INTCONbits.INTF = 0;
  2160  0329  108B               	bcf	11,1	;volatile
  2161  032A                     i1l1092:
  2162                           
  2163                           ;main.c: 86:         if (preparating == 1) {
  2164  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2165  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2166  032C  0320               	decf	_preparating,w
  2167  032D  0421               	iorwf	_preparating+1,w
  2168  032E  1D03               	btfss	3,2
  2169  032F  2B31               	goto	u58_21
  2170  0330  2B32               	goto	u58_20
  2171  0331                     u58_21:
  2172  0331  2B3D               	goto	i1l95
  2173  0332                     u58_20:
  2174  0332                     i1l1094:
  2175                           
  2176                           ;main.c: 87:             PORTCbits.RC1 = 0;
  2177  0332  1087               	bcf	7,1	;volatile
  2178                           
  2179                           ;main.c: 88:             PORTCbits.RC2 = 0;
  2180  0333  1107               	bcf	7,2	;volatile
  2181  0334                     i1l1096:
  2182                           
  2183                           ;main.c: 89:             coffee_flag = 1;
  2184  0334  3001               	movlw	1
  2185  0335  00A2               	movwf	_coffee_flag
  2186  0336  3000               	movlw	0
  2187  0337  00A3               	movwf	_coffee_flag+1
  2188                           
  2189                           ;main.c: 90:             milk_flag = 1;
  2190  0338  3001               	movlw	1
  2191  0339  00AC               	movwf	_milk_flag
  2192  033A  3000               	movlw	0
  2193  033B  00AD               	movwf	_milk_flag+1
  2194  033C                     i1l1098:
  2195                           
  2196                           ;main.c: 91:             PORTCbits.RC0 = 0;
  2197  033C  1007               	bcf	7,0	;volatile
  2198  033D                     i1l95:
  2199  033D  0872               	movf	??_TrataInt+2,w
  2200  033E  00FF               	movwf	btemp+1
  2201  033F  0871               	movf	??_TrataInt+1,w
  2202  0340  008A               	movwf	10
  2203  0341  0E70               	swapf	??_TrataInt,w
  2204  0342  0083               	movwf	3
  2205  0343  0EFE               	swapf	btemp,f
  2206  0344  0E7E               	swapf	btemp,w
  2207  0345  0009               	retfie
  2208  0346                     __end_of_TrataInt:
  2209  007E                     btemp	set	126	;btemp
  2210  007E                     wtemp0	set	126
  2211                           
  2212                           	psect	intentry
  2213  0004                     __pintentry:	
  2214                           ;incstack = 0
  2215                           ; Regs used in _TrataInt: [wreg+status,2+status,0+btemp+1]
  2216                           
  2217  0004                     interrupt_function:
  2218  007E                     saved_w	set	btemp
  2219  0004  00FE               	movwf	btemp
  2220  0005  0E03               	swapf	3,w
  2221  0006  00F0               	movwf	??_TrataInt
  2222  0007  080A               	movf	10,w
  2223  0008  00F1               	movwf	??_TrataInt+1
  2224  0009  087F               	movf	btemp+1,w
  2225  000A  00F2               	movwf	??_TrataInt+2
  2226  000B  120A  118A  2AE3   	ljmp	_TrataInt
  2227                           
  2228                           	psect	config
  2229                           
  2230                           ;Config register CONFIG @ 0x2007
  2231                           ;	Oscillator Selection bits
  2232                           ;	FOSC = EXTRC, RC oscillator
  2233                           ;	Watchdog Timer Enable bit
  2234                           ;	WDTE = ON, WDT enabled
  2235                           ;	Power-up Timer Enable bit
  2236                           ;	PWRTE = ON, PWRT enabled
  2237                           ;	Brown-out Reset Enable bit
  2238                           ;	BOREN = ON, BOR enabled
  2239                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2240                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2241                           ;	Data EEPROM Memory Code Protection bit
  2242                           ;	CPD = OFF, Data EEPROM code protection off
  2243                           ;	Flash Program Memory Write Enable bits
  2244                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2245                           ;	In-Circuit Debugger Mode bit
  2246                           ;	DEBUG = 0x1, unprogrammed default
  2247                           ;	Flash Program Memory Code Protection bit
  2248                           ;	CP = OFF, Code protection off
  2249  2007                     	org	8199
  2250  2007  3F77               	dw	16247

Data Sizes:
    Strings     221
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      6      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TrataInt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor

Critical Paths under _TrataInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TrataInt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TrataInt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TrataInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3109
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     960
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1715
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TrataInt                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 _TrataInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       E       5       17.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 27 11:36:25 2023

                       pc 0002                        l41 047C                        l33 0464  
                      l34 0467                        l35 046D                        l36 046E  
                      l44 0496                        l37 0474                        l53 03FA  
                      l38 0475                        l39 047B                        l47 04A3  
                      l56 03A2                        l65 045A                        l59 0431  
                      fsr 0004                       l100 0048                       l101 0074  
                     l111 010F                       l103 0099                       l120 016B  
                     l104 01B9                       l112 0131                       l113 0122  
                     l105 00BE                       l123 0185                       l124 0192  
                     l117 016C                       l109 0100                       l126 01A5  
                     l118 0165                       l127 01B0                       l119 0164  
                     u900 03D6                       u901 03D5                       u830 0460  
                     u831 045F                       u840 046B                       u920 045A  
                     u841 046A                       u921 0459                       u850 0472  
                     u930 0053                       u851 0471                       u915 03DE  
                     u931 0052                       u860 0479                       u940 0057  
                     u861 0478                       u941 0056                       u950 0078  
                     u951 0077                       u880 03AB                       u960 007C  
                     u881 03AA                       u961 007B                       u970 009D  
                     u875 040C                       u971 009C                       u980 00A1  
                     u981 00A0                       u990 00C2                       u895 03B3  
                     u991 00C1                       fsr0 0004                      l1300 0355  
                    l1302 0363                      l1310 0445                      l1240 0472  
                    l1304 0369                      l1312 044D                      l1400 0108  
                    l1320 002D                      l1242 0479                      l1234 045C  
                    l1250 048A                      l1306 0435                      l1410 012A  
                    l1402 0113                      l1330 0035                      l1322 002F  
                    l1236 0460                      l1252 0493                      l1244 047E  
                    l1260 0417                      l1308 0438                      l1420 0141  
                    l1404 0117                      l1412 0131                      l1340 003E  
                    l1332 0036                      l1324 0032                      l1238 046B  
                    l1246 0481                      l1270 042A                      l1262 041A  
                    l1254 03FC                      l1430 0174                      l1422 0149  
                    l1414 0137                      l1406 011B                      l1350 004D  
                    l1342 003F                      l1334 0037                      l1326 0033  
                    l1318 0029                      l1248 0487                      l1280 03BC  
                    l1272 042E                      l1264 041E                      l1256 0406  
                    l1432 0176                      l1440 0196                      l1424 014F  
                    l1416 0138                      l1408 0126                      l1360 0065  
                    l1352 004F                      l1344 0041                      l1336 003A  
                    l1328 0034                      l1274 0497                      l1290 03E7  
                    l1282 03C1                      l1266 0421                      l1258 0409  
                    l1442 019E                      l1434 017E                      l1426 0155  
                    l1418 013C                      l1370 009D                      l1362 0078  
                    l1354 0053                      l1346 0043                      l1338 003D  
                    l1292 03EC                      l1284 03C7                      l1276 03A6  
                    l1268 0427                      l1444 01A6                      l1436 0186  
                    l1428 015D                      l1380 00C6                      l1372 00A1  
                    l1364 007C                      l1356 0057                      l1348 0049  
                    l1294 03F2                      l1278 03AB                      l1286 03D0  
                    l1446 01A8                      l1438 018A                      l1390 00EB  
                    l1382 00CE                      l1374 00A9                      l1366 0084  
                    l1358 005F                      l1296 0346                      l1288 03D6  
                    l1448 01B4                      l1392 00F1                      l1384 00D5  
                    l1376 00AF                      l1368 008A                      l1298 034C  
                    l1394 00F5                      l1386 00DD                      l1378 00C2  
                    l1396 00F9                      l1388 00E3                      l1398 0104  
                    STR_1 028E                      STR_2 0206                      STR_3 02B0  
                    STR_4 0206                      STR_5 028E                      STR_6 02B0  
                    STR_7 027D                      STR_8 0228                      STR_9 024A  
                    u1000 00C6                      u1001 00C5                      u1010 00F1  
                    u1011 00F0                      u1100 012A                      u1020 00F5  
                    u1101 0129                      u1021 00F4                      u1110 0137  
                    u1030 00F9                      u1111 0136                      u1031 00F8  
                    u1120 0155                      u1040 0104                      u1121 0154  
                    u1041 0103                      u1130 016B                      u1050 0108  
                    u1131 016A                      u1051 0107                      u1140 0174  
                    u1060 0113                      u1141 0173                      u1061 0112  
                    u1150 0192                      u1070 0117                      u1207 035F  
                    u1151 0191                      u1071 0116                      u1160 01B0  
                    u1080 011B                      u1217 036D                      u1161 01AF  
                    u1081 011A                      u1090 0126                      u1227 048E  
                    u1091 0125                      u1177 041C                      u1187 042C  
                    u1197 0350                      _INTF 0059                      i1l91 0322  
                    i1l95 033D         ?_Lcd_Write_String 0070                      _main 0029  
                    btemp 007E                      start 000E        ??_Lcd_Write_String 0078  
         __end_of_Lcd_Cmd 0497                     ?_main 0070                     STR_10 026C  
                   STR_11 0217                     STR_12 0239                     STR_13 02D2  
                   STR_14 025B                     STR_15 029F                     STR_16 02C1  
                   _TMR1H 000F                     _TMR1L 000E                     u52_20 02E9  
                   u52_21 02E8                     u53_20 02FB                     u53_21 02FA  
                   u53_25 02F7                     u54_20 0309                     u54_21 0308  
                   u55_20 0311                     u55_21 0310                     u56_20 031D  
                   u56_21 031C                     u57_20 0329                     u57_21 0328  
                   _TRISC 0087                     _TRISD 0088                     u58_20 0332  
                   u58_21 0331                     _conta 0079                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 03A3  
        __end_of_Lcd_Port 047D           __initialization 0011              __end_of_main 01BD  
                  ??_main 0079          __end_of_TrataInt 0346                    i1l1070 02FB  
                  i1l1062 02E3                    i1l1080 0312                    i1l1072 02FC  
                  i1l1064 02E9                    i1l1090 0329                    i1l1082 0317  
                  i1l1074 0302                    i1l1066 02EA                    i1l1092 032A  
                  i1l1084 031D                    i1l1076 0309                    i1l1068 02EE  
                  i1l1094 0332                    i1l1086 0323                    i1l1078 0311  
                  i1l1096 0334                    i1l1088 0325                    i1l1098 033C  
               ??_Lcd_Cmd 0074                    _TMR1IF 0060                    saved_w 007E  
         Lcd_Set_Cursor@a 0028           Lcd_Set_Cursor@b 0077           Lcd_Set_Cursor@y 002A  
         Lcd_Set_Cursor@z 0029   __end_of__initialization 0025         __end_of_Lcd_Clear 04A4  
          __pcstackCOMMON 0070              __pidataBANK0 04A4            _Lcd_Set_Cursor 03A3  
          _OPTION_REGbits 0081                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
              __pbssBANK0 0020                __pmaintext 0029                 ?_TrataInt 0070  
              __pintentry 0004    __end_of_Lcd_Set_Cursor 03FB                ??_Lcd_Init 0077  
              ??_Lcd_Port 0073                __stringtab 0200            _Lcd_Write_Char 03FB  
                 _Lcd_Cmd 047D                ??_TrataInt 0070           ?_Lcd_Set_Cursor 0077  
                 __ptext1 0432                   __ptext2 03FB                   __ptext3 03A3  
                 __ptext4 0346                   __ptext5 0497                   __ptext6 047D  
                 __ptext7 045B                   __ptext8 02E3                 _T1CONbits 0010  
  __end_of_Lcd_Write_Char 0432      end_of_initialization 0025                 Lcd_Port@a 0073  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0028         Lcd_Write_String@i 0026  
               _Lcd_Clear 0497            _coffee_or_milk 0024          _Lcd_Write_String 0432  
     start_initialization 0011                ?_Lcd_Clear 0070               __pdataBANK0 002C  
         Lcd_Write_Char@a 0077           Lcd_Write_Char@y 0076               __pbssCOMMON 0079  
               ___latbits 0002             __pcstackBANK0 0026                  ?_Lcd_Cmd 0070  
        ??_Lcd_Set_Cursor 0026                 __pstrings 0200               _coffee_flag 0022  
               _milk_flag 002C         interrupt_function 0004                  _PIE1bits 008C  
                Lcd_Cmd@a 0076                  _PIR1bits 000C               ??_Lcd_Clear 0077  
             __stringbase 0205          ??_Lcd_Write_Char 0074                  _Lcd_Init 0346  
                _Lcd_Port 045B  __end_of_Lcd_Write_String 045B                  _TrataInt 02E3  
      __end_of__stringtab 0206                _INTCONbits 000B        Lcd_Write_Char@temp 0075  
                intlevel1 0000                 stringcode 0200        Lcd_Set_Cursor@temp 002B  
             _preparating 0020                  stringdir 0200                  stringtab 0200  
