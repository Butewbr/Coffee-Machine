

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jun 25 19:39:20 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0006                     _PORTBbits	set	6
   173  0007                     _PORTCbits	set	7
   174  0008                     _PORTDbits	set	8
   175  0087                     _TRISC	set	135
   176  0088                     _TRISD	set	136
   177                           
   178                           	psect	strings
   179  0003                     __pstrings:
   180  0003                     stringtab:
   181  0003                     __stringtab:
   182  0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185  0003                     stringdir:
   186  0003  3000               	movlw	high stringdir
   187  0004  008A               	movwf	10
   188  0005  0804               	movf	4,w
   189  0006  0A84               	incf	4,f
   190  0007  0782               	addwf	2,f
   191  0008                     __stringbase:
   192  0008  3400               	retlw	0
   193  0009                     __end_of__stringtab:
   194  0009                     STR_2:
   195  0009  3420               	retlw	32	;' '
   196  000A  3420               	retlw	32	;' '
   197  000B  3420               	retlw	32	;' '
   198  000C  3420               	retlw	32	;' '
   199  000D  3420               	retlw	32	;' '
   200  000E  3420               	retlw	32	;' '
   201  000F  3420               	retlw	32	;' '
   202  0010  3420               	retlw	32	;' '
   203  0011  3420               	retlw	32	;' '
   204  0012  3420               	retlw	32	;' '
   205  0013  3420               	retlw	32	;' '
   206  0014  3420               	retlw	32	;' '
   207  0015  3420               	retlw	32	;' '
   208  0016  3420               	retlw	32	;' '
   209  0017  3420               	retlw	32	;' '
   210  0018  3420               	retlw	32	;' '
   211  0019  3400               	retlw	0
   212  001A                     STR_11:
   213  001A  3448               	retlw	72	;'H'
   214  001B  346F               	retlw	111	;'o'
   215  001C  3474               	retlw	116	;'t'
   216  001D  3420               	retlw	32	;' '
   217  001E  3477               	retlw	119	;'w'
   218  001F  342F               	retlw	47	;'/'
   219  0020  3420               	retlw	32	;' '
   220  0021  344D               	retlw	77	;'M'
   221  0022  3469               	retlw	105	;'i'
   222  0023  346C               	retlw	108	;'l'
   223  0024  346B               	retlw	107	;'k'
   224  0025  3420               	retlw	32	;' '
   225  0026  3420               	retlw	32	;' '
   226  0027  3420               	retlw	32	;' '
   227  0028  3420               	retlw	32	;' '
   228  0029  3420               	retlw	32	;' '
   229  002A  3400               	retlw	0
   230  002B                     STR_8:
   231  002B  3459               	retlw	89	;'Y'
   232  002C  346F               	retlw	111	;'o'
   233  002D  3475               	retlw	117	;'u'
   234  002E  3472               	retlw	114	;'r'
   235  002F  3420               	retlw	32	;' '
   236  0030  3463               	retlw	99	;'c'
   237  0031  346F               	retlw	111	;'o'
   238  0032  3466               	retlw	102	;'f'
   239  0033  3466               	retlw	102	;'f'
   240  0034  3465               	retlw	101	;'e'
   241  0035  3465               	retlw	101	;'e'
   242  0036  343A               	retlw	58	;':'
   243  0037  3420               	retlw	32	;' '
   244  0038  3420               	retlw	32	;' '
   245  0039  3420               	retlw	32	;' '
   246  003A  3420               	retlw	32	;' '
   247  003B  3400               	retlw	0
   248  003C                     STR_12:
   249  003C  3448               	retlw	72	;'H'
   250  003D  346F               	retlw	111	;'o'
   251  003E  3474               	retlw	116	;'t'
   252  003F  3420               	retlw	32	;' '
   253  0040  3477               	retlw	119	;'w'
   254  0041  346F               	retlw	111	;'o'
   255  0042  342F               	retlw	47	;'/'
   256  0043  3420               	retlw	32	;' '
   257  0044  344D               	retlw	77	;'M'
   258  0045  3469               	retlw	105	;'i'
   259  0046  346C               	retlw	108	;'l'
   260  0047  346B               	retlw	107	;'k'
   261  0048  3420               	retlw	32	;' '
   262  0049  3420               	retlw	32	;' '
   263  004A  3420               	retlw	32	;' '
   264  004B  3420               	retlw	32	;' '
   265  004C  3400               	retlw	0
   266  004D                     STR_9:
   267  004D  3443               	retlw	67	;'C'
   268  004E  346F               	retlw	111	;'o'
   269  004F  346C               	retlw	108	;'l'
   270  0050  3464               	retlw	100	;'d'
   271  0051  3420               	retlw	32	;' '
   272  0052  3477               	retlw	119	;'w'
   273  0053  342F               	retlw	47	;'/'
   274  0054  3420               	retlw	32	;' '
   275  0055  344D               	retlw	77	;'M'
   276  0056  3469               	retlw	105	;'i'
   277  0057  346C               	retlw	108	;'l'
   278  0058  346B               	retlw	107	;'k'
   279  0059  3420               	retlw	32	;' '
   280  005A  3420               	retlw	32	;' '
   281  005B  3420               	retlw	32	;' '
   282  005C  3420               	retlw	32	;' '
   283  005D  3400               	retlw	0
   284  005E                     STR_14:
   285  005E  3457               	retlw	87	;'W'
   286  005F  3461               	retlw	97	;'a'
   287  0060  3472               	retlw	114	;'r'
   288  0061  346D               	retlw	109	;'m'
   289  0062  3469               	retlw	105	;'i'
   290  0063  346E               	retlw	110	;'n'
   291  0064  3467               	retlw	103	;'g'
   292  0065  3420               	retlw	32	;' '
   293  0066  3455               	retlw	85	;'U'
   294  0067  3470               	retlw	112	;'p'
   295  0068  342E               	retlw	46	;'.'
   296  0069  342E               	retlw	46	;'.'
   297  006A  342E               	retlw	46	;'.'
   298  006B  3420               	retlw	32	;' '
   299  006C  3420               	retlw	32	;' '
   300  006D  3420               	retlw	32	;' '
   301  006E  3400               	retlw	0
   302  006F                     STR_10:
   303  006F  3443               	retlw	67	;'C'
   304  0070  346F               	retlw	111	;'o'
   305  0071  346C               	retlw	108	;'l'
   306  0072  3464               	retlw	100	;'d'
   307  0073  3420               	retlw	32	;' '
   308  0074  3477               	retlw	119	;'w'
   309  0075  346F               	retlw	111	;'o'
   310  0076  342F               	retlw	47	;'/'
   311  0077  3420               	retlw	32	;' '
   312  0078  344D               	retlw	77	;'M'
   313  0079  3469               	retlw	105	;'i'
   314  007A  346C               	retlw	108	;'l'
   315  007B  346B               	retlw	107	;'k'
   316  007C  3420               	retlw	32	;' '
   317  007D  3420               	retlw	32	;' '
   318  007E  3420               	retlw	32	;' '
   319  007F  3400               	retlw	0
   320  0080                     STR_17:
   321  0080  3443               	retlw	67	;'C'
   322  0081  346F               	retlw	111	;'o'
   323  0082  3466               	retlw	102	;'f'
   324  0083  3466               	retlw	102	;'f'
   325  0084  3465               	retlw	101	;'e'
   326  0085  3465               	retlw	101	;'e'
   327  0086  3420               	retlw	32	;' '
   328  0087  3444               	retlw	68	;'D'
   329  0088  346F               	retlw	111	;'o'
   330  0089  346E               	retlw	110	;'n'
   331  008A  3465               	retlw	101	;'e'
   332  008B  3421               	retlw	33	;'!'
   333  008C  3421               	retlw	33	;'!'
   334  008D  3421               	retlw	33	;'!'
   335  008E  3420               	retlw	32	;' '
   336  008F  3420               	retlw	32	;' '
   337  0090  3400               	retlw	0
   338  0091                     STR_7:
   339  0091  344E               	retlw	78	;'N'
   340  0092  344F               	retlw	79	;'O'
   341  0093  3420               	retlw	32	;' '
   342  0094  344D               	retlw	77	;'M'
   343  0095  3449               	retlw	73	;'I'
   344  0096  344C               	retlw	76	;'L'
   345  0097  344B               	retlw	75	;'K'
   346  0098  3420               	retlw	32	;' '
   347  0099  344C               	retlw	76	;'L'
   348  009A  3445               	retlw	69	;'E'
   349  009B  3446               	retlw	70	;'F'
   350  009C  3454               	retlw	84	;'T'
   351  009D  3421               	retlw	33	;'!'
   352  009E  3421               	retlw	33	;'!'
   353  009F  3420               	retlw	32	;' '
   354  00A0  3420               	retlw	32	;' '
   355  00A1  3400               	retlw	0
   356  00A2                     STR_1:
   357  00A2  344E               	retlw	78	;'N'
   358  00A3  344F               	retlw	79	;'O'
   359  00A4  3420               	retlw	32	;' '
   360  00A5  3457               	retlw	87	;'W'
   361  00A6  3441               	retlw	65	;'A'
   362  00A7  3454               	retlw	84	;'T'
   363  00A8  3445               	retlw	69	;'E'
   364  00A9  3452               	retlw	82	;'R'
   365  00AA  3420               	retlw	32	;' '
   366  00AB  344C               	retlw	76	;'L'
   367  00AC  3445               	retlw	69	;'E'
   368  00AD  3446               	retlw	70	;'F'
   369  00AE  3454               	retlw	84	;'T'
   370  00AF  3421               	retlw	33	;'!'
   371  00B0  3421               	retlw	33	;'!'
   372  00B1  3420               	retlw	32	;' '
   373  00B2  3400               	retlw	0
   374  00B3                     STR_16:
   375  00B3  3450               	retlw	80	;'P'
   376  00B4  346F               	retlw	111	;'o'
   377  00B5  3475               	retlw	117	;'u'
   378  00B6  3472               	retlw	114	;'r'
   379  00B7  3469               	retlw	105	;'i'
   380  00B8  346E               	retlw	110	;'n'
   381  00B9  3467               	retlw	103	;'g'
   382  00BA  3420               	retlw	32	;' '
   383  00BB  344D               	retlw	77	;'M'
   384  00BC  3469               	retlw	105	;'i'
   385  00BD  346C               	retlw	108	;'l'
   386  00BE  346B               	retlw	107	;'k'
   387  00BF  342E               	retlw	46	;'.'
   388  00C0  342E               	retlw	46	;'.'
   389  00C1  342E               	retlw	46	;'.'
   390  00C2  3420               	retlw	32	;' '
   391  00C3  3400               	retlw	0
   392  00C4                     STR_3:
   393  00C4  344E               	retlw	78	;'N'
   394  00C5  344F               	retlw	79	;'O'
   395  00C6  3420               	retlw	32	;' '
   396  00C7  3443               	retlw	67	;'C'
   397  00C8  344F               	retlw	79	;'O'
   398  00C9  3446               	retlw	70	;'F'
   399  00CA  3446               	retlw	70	;'F'
   400  00CB  3445               	retlw	69	;'E'
   401  00CC  3445               	retlw	69	;'E'
   402  00CD  3420               	retlw	32	;' '
   403  00CE  344C               	retlw	76	;'L'
   404  00CF  3445               	retlw	69	;'E'
   405  00D0  3446               	retlw	70	;'F'
   406  00D1  3454               	retlw	84	;'T'
   407  00D2  3421               	retlw	33	;'!'
   408  00D3  3421               	retlw	33	;'!'
   409  00D4  3400               	retlw	0
   410  00D5                     STR_15:
   411  00D5  3450               	retlw	80	;'P'
   412  00D6  346F               	retlw	111	;'o'
   413  00D7  3475               	retlw	117	;'u'
   414  00D8  3472               	retlw	114	;'r'
   415  00D9  3469               	retlw	105	;'i'
   416  00DA  346E               	retlw	110	;'n'
   417  00DB  3467               	retlw	103	;'g'
   418  00DC  3420               	retlw	32	;' '
   419  00DD  3443               	retlw	67	;'C'
   420  00DE  346F               	retlw	111	;'o'
   421  00DF  3466               	retlw	102	;'f'
   422  00E0  3466               	retlw	102	;'f'
   423  00E1  3465               	retlw	101	;'e'
   424  00E2  3465               	retlw	101	;'e'
   425  00E3  342E               	retlw	46	;'.'
   426  00E4  342E               	retlw	46	;'.'
   427  00E5  3400               	retlw	0
   428  00E6                     STR_13:
   429  00E6  3450               	retlw	80	;'P'
   430  00E7  3472               	retlw	114	;'r'
   431  00E8  3465               	retlw	101	;'e'
   432  00E9  3470               	retlw	112	;'p'
   433  00EA  3461               	retlw	97	;'a'
   434  00EB  3472               	retlw	114	;'r'
   435  00EC  3469               	retlw	105	;'i'
   436  00ED  346E               	retlw	110	;'n'
   437  00EE  3467               	retlw	103	;'g'
   438  00EF  3420               	retlw	32	;' '
   439  00F0  3443               	retlw	67	;'C'
   440  00F1  346F               	retlw	111	;'o'
   441  00F2  3466               	retlw	102	;'f'
   442  00F3  3466               	retlw	102	;'f'
   443  00F4  3465               	retlw	101	;'e'
   444  00F5  3465               	retlw	101	;'e'
   445  00F6  3400               	retlw	0
   446  0009                     
   447                           	psect	cinit
   448  07FC                     start_initialization:	
   449                           ; #config settings
   450                           
   451  07FC                     __initialization:
   452  07FC                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  07FC                     __end_of__initialization:
   456  07FC  0183               	clrf	3
   457  07FD  120A  118A  2E62   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	cstackCOMMON
   460  0070                     __pcstackCOMMON:
   461  0070                     ?_Lcd_Port:
   462  0070                     ??_Lcd_Port:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_Lcd_Cmd:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_Lcd_Clear:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_Lcd_Init:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_Lcd_Write_Char:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_Lcd_Write_String:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_main:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     Lcd_Port@a:	
   484                           ; 2 bytes @ 0x0
   485                           
   486                           
   487                           ; 1 bytes @ 0x0
   488  0070                     	ds	1
   489  0071                     ??_Lcd_Cmd:
   490  0071                     ??_Lcd_Write_Char:	
   491                           ; 1 bytes @ 0x1
   492                           
   493                           
   494                           ; 1 bytes @ 0x1
   495  0071                     	ds	1
   496  0072                     Lcd_Write_Char@temp:
   497                           
   498                           ; 1 bytes @ 0x2
   499  0072                     	ds	1
   500  0073                     Lcd_Cmd@a:
   501  0073                     Lcd_Write_Char@y:	
   502                           ; 1 bytes @ 0x3
   503                           
   504                           
   505                           ; 1 bytes @ 0x3
   506  0073                     	ds	1
   507  0074                     ??_Lcd_Clear:
   508  0074                     ?_Lcd_Set_Cursor:	
   509                           ; 1 bytes @ 0x4
   510                           
   511  0074                     ??_Lcd_Init:	
   512                           ; 1 bytes @ 0x4
   513                           
   514  0074                     Lcd_Set_Cursor@b:	
   515                           ; 1 bytes @ 0x4
   516                           
   517  0074                     Lcd_Write_Char@a:	
   518                           ; 1 bytes @ 0x4
   519                           
   520                           
   521                           ; 1 bytes @ 0x4
   522  0074                     	ds	1
   523  0075                     ??_Lcd_Set_Cursor:
   524  0075                     ??_Lcd_Write_String:	
   525                           ; 1 bytes @ 0x5
   526                           
   527  0075                     Lcd_Write_String@i:	
   528                           ; 1 bytes @ 0x5
   529                           
   530                           
   531                           ; 2 bytes @ 0x5
   532  0075                     	ds	2
   533  0077                     Lcd_Set_Cursor@a:
   534  0077                     Lcd_Write_String@a:	
   535                           ; 1 bytes @ 0x7
   536                           
   537                           
   538                           ; 1 bytes @ 0x7
   539  0077                     	ds	1
   540  0078                     Lcd_Set_Cursor@z:
   541                           
   542                           ; 1 bytes @ 0x8
   543  0078                     	ds	1
   544  0079                     Lcd_Set_Cursor@y:
   545                           
   546                           ; 1 bytes @ 0x9
   547  0079                     	ds	1
   548  007A                     Lcd_Set_Cursor@temp:
   549                           
   550                           ; 1 bytes @ 0xA
   551  007A                     	ds	1
   552  007B                     ??_main:
   553                           
   554                           ; 1 bytes @ 0xB
   555  007B                     	ds	3
   556                           
   557                           	psect	maintext
   558  0662                     __pmaintext:	
   559 ;;
   560 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   561 ;;
   562 ;; *************** function _main *****************
   563 ;; Defined at:
   564 ;;		line 53 in file "main.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  buffer         20    0        unsigned char [20]
   569 ;; Return value:  Size  Location     Type
   570 ;;                  2   57[None  ] int 
   571 ;; Registers used:
   572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : B00/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0
   580 ;;      Temps:          3       0       0       0       0
   581 ;;      Totals:         3       0       0       0       0
   582 ;;Total ram usage:        3 bytes
   583 ;; Hardware stack levels required when called: 3
   584 ;; This function calls:
   585 ;;		_Lcd_Clear
   586 ;;		_Lcd_Init
   587 ;;		_Lcd_Set_Cursor
   588 ;;		_Lcd_Write_String
   589 ;; This function is called by:
   590 ;;		Startup code after reset
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594  0662                     _main:	
   595                           ;psect for function _main
   596                           
   597  0662                     l904:	
   598                           ;incstack = 0
   599                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   600                           
   601                           
   602                           ;main.c: 55:   char buffer[20];;main.c: 57:   TRISD = 0x00;
   603  0662  1683               	bsf	3,5	;RP0=1, select bank1
   604  0663  1303               	bcf	3,6	;RP1=0, select bank1
   605  0664  0188               	clrf	8	;volatile
   606                           
   607                           ;main.c: 58:   TRISC = 0x00;
   608  0665  0187               	clrf	7	;volatile
   609  0666                     l906:
   610                           
   611                           ;main.c: 59:   PORTCbits.RC0 = 0;
   612  0666  1283               	bcf	3,5	;RP0=0, select bank0
   613  0667  1303               	bcf	3,6	;RP1=0, select bank0
   614  0668  1007               	bcf	7,0	;volatile
   615  0669                     l908:
   616                           
   617                           ;main.c: 60:   PORTCbits.RC1 = 0;
   618  0669  1087               	bcf	7,1	;volatile
   619  066A                     l910:
   620                           
   621                           ;main.c: 61:   PORTCbits.RC2 = 0;
   622  066A  1107               	bcf	7,2	;volatile
   623  066B                     l912:
   624                           
   625                           ;main.c: 62:   PORTCbits.RC3 = 0;
   626  066B  1187               	bcf	7,3	;volatile
   627  066C                     l914:
   628                           
   629                           ;main.c: 64:   Lcd_Init();
   630  066C  120A  118A  2605  120A  118A  	fcall	_Lcd_Init
   631  0671                     l916:
   632                           
   633                           ;main.c: 67:   {;main.c: 68:     if(PORTBbits.RB3 == 1 && PORTBbits.RB5 == 0) {
   634  0671  1283               	bcf	3,5	;RP0=0, select bank0
   635  0672  1303               	bcf	3,6	;RP1=0, select bank0
   636  0673  1D86               	btfss	6,3	;volatile
   637  0674  2E76               	goto	u381
   638  0675  2E77               	goto	u380
   639  0676                     u381:
   640  0676  2E98               	goto	l59
   641  0677                     u380:
   642  0677                     l918:
   643  0677  1A86               	btfsc	6,5	;volatile
   644  0678  2E7A               	goto	u391
   645  0679  2E7B               	goto	u390
   646  067A                     u391:
   647  067A  2E98               	goto	l59
   648  067B                     u390:
   649  067B                     l920:
   650                           
   651                           ;main.c: 69:         Lcd_Set_Cursor(1,1);
   652  067B  01F4               	clrf	Lcd_Set_Cursor@b
   653  067C  0AF4               	incf	Lcd_Set_Cursor@b,f
   654  067D  3001               	movlw	1
   655  067E  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   656  0683                     l922:
   657                           
   658                           ;main.c: 70:         Lcd_Write_String("NO WATER LEFT!! ");
   659  0683  309A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   660  0684  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   661  0689                     l924:
   662                           
   663                           ;main.c: 71:         Lcd_Set_Cursor(2,1);
   664  0689  01F4               	clrf	Lcd_Set_Cursor@b
   665  068A  0AF4               	incf	Lcd_Set_Cursor@b,f
   666  068B  3002               	movlw	2
   667  068C  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   668                           
   669                           ;main.c: 72:         Lcd_Write_String("                ");
   670  0691  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   671  0692  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   672                           
   673                           ;main.c: 73:     }
   674  0697  2E71               	goto	l916
   675  0698                     l59:	
   676                           ;main.c: 74:     else if(PORTBbits.RB3 == 0 && PORTBbits.RB5 == 1) {
   677                           
   678  0698  1986               	btfsc	6,3	;volatile
   679  0699  2E9B               	goto	u401
   680  069A  2E9C               	goto	u400
   681  069B                     u401:
   682  069B  2EBD               	goto	l61
   683  069C                     u400:
   684  069C                     l926:
   685  069C  1E86               	btfss	6,5	;volatile
   686  069D  2E9F               	goto	u411
   687  069E  2EA0               	goto	u410
   688  069F                     u411:
   689  069F  2EBD               	goto	l61
   690  06A0                     u410:
   691  06A0                     l928:
   692                           
   693                           ;main.c: 75:         Lcd_Set_Cursor(1,1);
   694  06A0  01F4               	clrf	Lcd_Set_Cursor@b
   695  06A1  0AF4               	incf	Lcd_Set_Cursor@b,f
   696  06A2  3001               	movlw	1
   697  06A3  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   698  06A8                     l930:
   699                           
   700                           ;main.c: 76:         Lcd_Write_String("NO COFFEE LEFT!!");
   701  06A8  30BC               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   702  06A9  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   703  06AE                     l932:
   704                           
   705                           ;main.c: 77:         Lcd_Set_Cursor(2,1);
   706  06AE  01F4               	clrf	Lcd_Set_Cursor@b
   707  06AF  0AF4               	incf	Lcd_Set_Cursor@b,f
   708  06B0  3002               	movlw	2
   709  06B1  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   710                           
   711                           ;main.c: 78:         Lcd_Write_String("                ");
   712  06B6  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   713  06B7  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   714                           
   715                           ;main.c: 79:     }
   716  06BC  2E71               	goto	l916
   717  06BD                     l61:	
   718                           ;main.c: 80:     else if(PORTBbits.RB3 == 1 && PORTBbits.RB5 == 1) {
   719                           
   720  06BD  1D86               	btfss	6,3	;volatile
   721  06BE  2EC0               	goto	u421
   722  06BF  2EC1               	goto	u420
   723  06C0                     u421:
   724  06C0  2EE2               	goto	l63
   725  06C1                     u420:
   726  06C1                     l934:
   727  06C1  1E86               	btfss	6,5	;volatile
   728  06C2  2EC4               	goto	u431
   729  06C3  2EC5               	goto	u430
   730  06C4                     u431:
   731  06C4  2EE2               	goto	l63
   732  06C5                     u430:
   733  06C5                     l936:
   734                           
   735                           ;main.c: 81:         Lcd_Set_Cursor(1,1);
   736  06C5  01F4               	clrf	Lcd_Set_Cursor@b
   737  06C6  0AF4               	incf	Lcd_Set_Cursor@b,f
   738  06C7  3001               	movlw	1
   739  06C8  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   740  06CD                     l938:
   741                           
   742                           ;main.c: 82:         Lcd_Write_String("NO WATER LEFT!! ");
   743  06CD  309A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   744  06CE  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   745  06D3                     l940:
   746                           
   747                           ;main.c: 83:         Lcd_Set_Cursor(2,1);
   748  06D3  01F4               	clrf	Lcd_Set_Cursor@b
   749  06D4  0AF4               	incf	Lcd_Set_Cursor@b,f
   750  06D5  3002               	movlw	2
   751  06D6  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   752                           
   753                           ;main.c: 84:         Lcd_Write_String("NO COFFEE LEFT!!");
   754  06DB  30BC               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   755  06DC  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   756                           
   757                           ;main.c: 85:     }
   758  06E1  2E71               	goto	l916
   759  06E2                     l63:	
   760                           ;main.c: 86:     else if(PORTBbits.RB4 == 1 && PORTBbits.RB2 == 1) {
   761                           
   762  06E2  1E06               	btfss	6,4	;volatile
   763  06E3  2EE5               	goto	u441
   764  06E4  2EE6               	goto	u440
   765  06E5                     u441:
   766  06E5  2EF9               	goto	l948
   767  06E6                     u440:
   768  06E6                     l942:
   769  06E6  1D06               	btfss	6,2	;volatile
   770  06E7  2EE9               	goto	u451
   771  06E8  2EEA               	goto	u450
   772  06E9                     u451:
   773  06E9  2EF9               	goto	l948
   774  06EA                     u450:
   775  06EA                     l944:
   776                           
   777                           ;main.c: 87:         Lcd_Set_Cursor(1,1);
   778  06EA  01F4               	clrf	Lcd_Set_Cursor@b
   779  06EB  0AF4               	incf	Lcd_Set_Cursor@b,f
   780  06EC  3001               	movlw	1
   781  06ED  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   782  06F2                     l946:
   783                           
   784                           ;main.c: 88:         Lcd_Write_String("NO MILK LEFT!!  ");
   785  06F2  3089               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   786  06F3  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   787                           
   788                           ;main.c: 89:     }
   789  06F8  2E71               	goto	l916
   790  06F9                     l948:
   791                           
   792                           ;main.c: 91:         Lcd_Set_Cursor(1,1);
   793  06F9  01F4               	clrf	Lcd_Set_Cursor@b
   794  06FA  0AF4               	incf	Lcd_Set_Cursor@b,f
   795  06FB  3001               	movlw	1
   796  06FC  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   797  0701                     l950:
   798                           
   799                           ;main.c: 92:         Lcd_Write_String("Your coffee:    ");
   800  0701  3023               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   801  0702  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   802  0707                     l952:
   803                           
   804                           ;main.c: 93:         Lcd_Set_Cursor(2,1);
   805  0707  01F4               	clrf	Lcd_Set_Cursor@b
   806  0708  0AF4               	incf	Lcd_Set_Cursor@b,f
   807  0709  3002               	movlw	2
   808  070A  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   809  070F                     l954:
   810                           
   811                           ;main.c: 95:         if(PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && PORTBbits.RB4 == 0) 
      +                          {
   812  070F  1283               	bcf	3,5	;RP0=0, select bank0
   813  0710  1303               	bcf	3,6	;RP1=0, select bank0
   814  0711  1C86               	btfss	6,1	;volatile
   815  0712  2F14               	goto	u461
   816  0713  2F15               	goto	u460
   817  0714                     u461:
   818  0714  2F24               	goto	l67
   819  0715                     u460:
   820  0715                     l956:
   821  0715  1D06               	btfss	6,2	;volatile
   822  0716  2F18               	goto	u471
   823  0717  2F19               	goto	u470
   824  0718                     u471:
   825  0718  2F24               	goto	l67
   826  0719                     u470:
   827  0719                     l958:
   828  0719  1A06               	btfsc	6,4	;volatile
   829  071A  2F1C               	goto	u481
   830  071B  2F1D               	goto	u480
   831  071C                     u481:
   832  071C  2F24               	goto	l67
   833  071D                     u480:
   834  071D                     l960:
   835                           
   836                           ;main.c: 96:             Lcd_Write_String("Cold w/ Milk    ");
   837  071D  3045               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   838  071E  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   839                           
   840                           ;main.c: 97:         }
   841  0723  2F55               	goto	l976
   842  0724                     l67:	
   843                           ;main.c: 98:         else if(PORTBbits.RB1 == 1 && PORTBbits.RB2 == 0) {
   844                           
   845  0724  1C86               	btfss	6,1	;volatile
   846  0725  2F27               	goto	u491
   847  0726  2F28               	goto	u490
   848  0727                     u491:
   849  0727  2F33               	goto	l69
   850  0728                     u490:
   851  0728                     l962:
   852  0728  1906               	btfsc	6,2	;volatile
   853  0729  2F2B               	goto	u501
   854  072A  2F2C               	goto	u500
   855  072B                     u501:
   856  072B  2F33               	goto	l69
   857  072C                     u500:
   858  072C                     l964:
   859                           
   860                           ;main.c: 99:             Lcd_Write_String("Cold wo/ Milk   ");
   861  072C  3067               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   862  072D  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   863                           
   864                           ;main.c: 100:         }
   865  0732  2F55               	goto	l976
   866  0733                     l69:	
   867                           ;main.c: 101:         else if (PORTBbits.RB1 == 0 && PORTBbits.RB2 == 1 && PORTBbits.RB4
      +                           == 0){
   868                           
   869  0733  1886               	btfsc	6,1	;volatile
   870  0734  2F36               	goto	u511
   871  0735  2F37               	goto	u510
   872  0736                     u511:
   873  0736  2F46               	goto	l71
   874  0737                     u510:
   875  0737                     l966:
   876  0737  1D06               	btfss	6,2	;volatile
   877  0738  2F3A               	goto	u521
   878  0739  2F3B               	goto	u520
   879  073A                     u521:
   880  073A  2F46               	goto	l71
   881  073B                     u520:
   882  073B                     l968:
   883  073B  1A06               	btfsc	6,4	;volatile
   884  073C  2F3E               	goto	u531
   885  073D  2F3F               	goto	u530
   886  073E                     u531:
   887  073E  2F46               	goto	l71
   888  073F                     u530:
   889  073F                     l970:
   890                           
   891                           ;main.c: 102:             Lcd_Write_String("Hot w/ Milk     ");
   892  073F  3012               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   893  0740  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   894                           
   895                           ;main.c: 103:         }
   896  0745  2F55               	goto	l976
   897  0746                     l71:	
   898                           ;main.c: 104:         else if (PORTBbits.RB1 == 0 && PORTBbits.RB2 == 0) {
   899                           
   900  0746  1886               	btfsc	6,1	;volatile
   901  0747  2F49               	goto	u541
   902  0748  2F4A               	goto	u540
   903  0749                     u541:
   904  0749  2F55               	goto	l70
   905  074A                     u540:
   906  074A                     l972:
   907  074A  1906               	btfsc	6,2	;volatile
   908  074B  2F4D               	goto	u551
   909  074C  2F4E               	goto	u550
   910  074D                     u551:
   911  074D  2F55               	goto	l70
   912  074E                     u550:
   913  074E                     l974:
   914                           
   915                           ;main.c: 105:             Lcd_Write_String("Hot wo/ Milk    ");
   916  074E  3034               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
   917  074F  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   918  0754  2F55               	goto	l976
   919  0755                     l70:
   920  0755                     l976:
   921                           
   922                           ;main.c: 108:         if(PORTBbits.RB7 == 1) {
   923  0755  1283               	bcf	3,5	;RP0=0, select bank0
   924  0756  1303               	bcf	3,6	;RP1=0, select bank0
   925  0757  1F86               	btfss	6,7	;volatile
   926  0758  2F5A               	goto	u561
   927  0759  2F5B               	goto	u560
   928  075A                     u561:
   929  075A  2FF8               	goto	l62
   930  075B                     u560:
   931  075B                     l978:
   932                           
   933                           ;main.c: 109:             Lcd_Clear();
   934  075B  120A  118A  250E  120A  118A  	fcall	_Lcd_Clear
   935                           
   936                           ;main.c: 110:             Lcd_Set_Cursor(1,1);
   937  0760  01F4               	clrf	Lcd_Set_Cursor@b
   938  0761  0AF4               	incf	Lcd_Set_Cursor@b,f
   939  0762  3001               	movlw	1
   940  0763  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   941  0768                     l980:
   942                           
   943                           ;main.c: 111:             Lcd_Write_String("Preparing Coffee");
   944  0768  30DE               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
   945  0769  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   946  076E                     l982:
   947                           
   948                           ;main.c: 112:             if(PORTBbits.RB1 == 0) {
   949  076E  1283               	bcf	3,5	;RP0=0, select bank0
   950  076F  1303               	bcf	3,6	;RP1=0, select bank0
   951  0770  1886               	btfsc	6,1	;volatile
   952  0771  2F73               	goto	u571
   953  0772  2F74               	goto	u570
   954  0773                     u571:
   955  0773  2F8B               	goto	l988
   956  0774                     u570:
   957  0774                     l984:
   958                           
   959                           ;main.c: 113:                 Lcd_Set_Cursor(2,1);
   960  0774  01F4               	clrf	Lcd_Set_Cursor@b
   961  0775  0AF4               	incf	Lcd_Set_Cursor@b,f
   962  0776  3002               	movlw	2
   963  0777  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
   964  077C                     l986:
   965                           
   966                           ;main.c: 114:                 Lcd_Write_String("Warming Up...   ");
   967  077C  3056               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
   968  077D  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
   969                           
   970                           ;main.c: 115:                 while(PORTBbits.RB6 == 0){
   971  0782  2F84               	goto	l76
   972  0783                     l77:
   973                           
   974                           ;main.c: 116:                     PORTCbits.RC0 = 1;
   975  0783  1407               	bsf	7,0	;volatile
   976  0784                     l76:	
   977                           ;main.c: 117:                 };
   978                           
   979                           
   980                           ;main.c: 115:                 while(PORTBbits.RB6 == 0){
   981  0784  1283               	bcf	3,5	;RP0=0, select bank0
   982  0785  1303               	bcf	3,6	;RP1=0, select bank0
   983  0786  1F06               	btfss	6,6	;volatile
   984  0787  2F89               	goto	u581
   985  0788  2F8A               	goto	u580
   986  0789                     u581:
   987  0789  2F83               	goto	l77
   988  078A                     u580:
   989  078A                     l78:
   990                           
   991                           ;main.c: 118:                 PORTCbits.RC0 = 0;
   992  078A  1007               	bcf	7,0	;volatile
   993  078B                     l988:
   994                           
   995                           ;main.c: 120:             Lcd_Set_Cursor(2,1);
   996  078B  01F4               	clrf	Lcd_Set_Cursor@b
   997  078C  0AF4               	incf	Lcd_Set_Cursor@b,f
   998  078D  3002               	movlw	2
   999  078E  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
  1000  0793                     l990:
  1001                           
  1002                           ;main.c: 121:             Lcd_Write_String("Pouring Coffee..");
  1003  0793  30CD               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1004  0794  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
  1005  0799                     l992:
  1006                           
  1007                           ;main.c: 122:             PORTCbits.RC1 = 1;
  1008  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1009  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1010  079B  1487               	bsf	7,1	;volatile
  1011  079C                     l994:
  1012                           
  1013                           ;main.c: 123:             _delay((unsigned long)((3000)*(4000000/4000.0)));
  1014  079C  3010               	movlw	16
  1015  079D  00FD               	movwf	??_main+2
  1016  079E  3039               	movlw	57
  1017  079F  00FC               	movwf	??_main+1
  1018  07A0  300D               	movlw	13
  1019  07A1  00FB               	movwf	??_main
  1020  07A2                     u607:
  1021  07A2  0BFB               	decfsz	??_main,f
  1022  07A3  2FA2               	goto	u607
  1023  07A4  0BFC               	decfsz	??_main+1,f
  1024  07A5  2FA2               	goto	u607
  1025  07A6  0BFD               	decfsz	??_main+2,f
  1026  07A7  2FA2               	goto	u607
  1027  07A8  2FA9               	nop2
  1028  07A9                     l996:
  1029                           
  1030                           ;main.c: 124:             PORTCbits.RC1 = 0;
  1031  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1032  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1033  07AB  1087               	bcf	7,1	;volatile
  1034  07AC                     l998:
  1035                           
  1036                           ;main.c: 125:             if(PORTBbits.RB2 == 1) {
  1037  07AC  1D06               	btfss	6,2	;volatile
  1038  07AD  2FAF               	goto	u591
  1039  07AE  2FB0               	goto	u590
  1040  07AF                     u591:
  1041  07AF  2FD1               	goto	l1010
  1042  07B0                     u590:
  1043  07B0                     l1000:
  1044                           
  1045                           ;main.c: 126:                 Lcd_Set_Cursor(2,1);
  1046  07B0  01F4               	clrf	Lcd_Set_Cursor@b
  1047  07B1  0AF4               	incf	Lcd_Set_Cursor@b,f
  1048  07B2  3002               	movlw	2
  1049  07B3  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
  1050  07B8                     l1002:
  1051                           
  1052                           ;main.c: 127:                 Lcd_Write_String("Pouring Milk... ");
  1053  07B8  30AB               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1054  07B9  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
  1055  07BE                     l1004:
  1056                           
  1057                           ;main.c: 128:                 PORTCbits.RC2 = 1;
  1058  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1059  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1060  07C0  1507               	bsf	7,2	;volatile
  1061  07C1                     l1006:
  1062                           
  1063                           ;main.c: 129:                 _delay((unsigned long)((3000)*(4000000/4000.0)));
  1064  07C1  3010               	movlw	16
  1065  07C2  00FD               	movwf	??_main+2
  1066  07C3  3039               	movlw	57
  1067  07C4  00FC               	movwf	??_main+1
  1068  07C5  300D               	movlw	13
  1069  07C6  00FB               	movwf	??_main
  1070  07C7                     u617:
  1071  07C7  0BFB               	decfsz	??_main,f
  1072  07C8  2FC7               	goto	u617
  1073  07C9  0BFC               	decfsz	??_main+1,f
  1074  07CA  2FC7               	goto	u617
  1075  07CB  0BFD               	decfsz	??_main+2,f
  1076  07CC  2FC7               	goto	u617
  1077  07CD  2FCE               	nop2
  1078  07CE                     l1008:
  1079                           
  1080                           ;main.c: 130:                 PORTCbits.RC2 = 0;
  1081  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1082  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1083  07D0  1107               	bcf	7,2	;volatile
  1084  07D1                     l1010:
  1085                           
  1086                           ;main.c: 132:             Lcd_Clear();
  1087  07D1  120A  118A  250E  120A  118A  	fcall	_Lcd_Clear
  1088  07D6                     l1012:
  1089                           
  1090                           ;main.c: 133:             Lcd_Set_Cursor(1,1);
  1091  07D6  01F4               	clrf	Lcd_Set_Cursor@b
  1092  07D7  0AF4               	incf	Lcd_Set_Cursor@b,f
  1093  07D8  3001               	movlw	1
  1094  07D9  120A  118A  25B3  120A  118A  	fcall	_Lcd_Set_Cursor
  1095  07DE                     l1014:
  1096                           
  1097                           ;main.c: 134:             PORTCbits.RC3 = 1;
  1098  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1099  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1100  07E0  1587               	bsf	7,3	;volatile
  1101  07E1                     l1016:
  1102                           
  1103                           ;main.c: 135:             Lcd_Write_String("Coffee Done!!!  ");
  1104  07E1  3078               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1105  07E2  120A  118A  2557  120A  118A  	fcall	_Lcd_Write_String
  1106  07E7                     l1018:
  1107                           
  1108                           ;main.c: 136:             _delay((unsigned long)((3000)*(4000000/4000.0)));
  1109  07E7  3010               	movlw	16
  1110  07E8  00FD               	movwf	??_main+2
  1111  07E9  3039               	movlw	57
  1112  07EA  00FC               	movwf	??_main+1
  1113  07EB  300D               	movlw	13
  1114  07EC  00FB               	movwf	??_main
  1115  07ED                     u627:
  1116  07ED  0BFB               	decfsz	??_main,f
  1117  07EE  2FED               	goto	u627
  1118  07EF  0BFC               	decfsz	??_main+1,f
  1119  07F0  2FED               	goto	u627
  1120  07F1  0BFD               	decfsz	??_main+2,f
  1121  07F2  2FED               	goto	u627
  1122  07F3  2FF4               	nop2
  1123  07F4                     l1020:
  1124                           
  1125                           ;main.c: 137:             PORTCbits.RC3 = 0;
  1126  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  1127  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  1128  07F6  1187               	bcf	7,3	;volatile
  1129  07F7  2E71               	goto	l916
  1130  07F8                     l62:
  1131  07F8  2E71               	goto	l916
  1132  07F9  120A  118A  2800   	ljmp	start
  1133  07FC                     __end_of_main:
  1134                           
  1135                           	psect	text1
  1136  0557                     __ptext1:	
  1137 ;; *************** function _Lcd_Write_String *****************
  1138 ;; Defined at:
  1139 ;;		line 97 in file "./lcd.h"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  a               1    wreg     PTR unsigned char 
  1142 ;;		 -> STR_17(17), STR_16(17), STR_15(17), STR_14(17), 
  1143 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
  1144 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
  1145 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
  1146 ;;		 -> STR_1(17), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  a               1    7[COMMON] PTR unsigned char 
  1149 ;;		 -> STR_17(17), STR_16(17), STR_15(17), STR_14(17), 
  1150 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
  1151 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
  1152 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
  1153 ;;		 -> STR_1(17), 
  1154 ;;  i               2    5[COMMON] int 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       0       0       0       0
  1165 ;;      Locals:         3       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0
  1167 ;;      Totals:         3       0       0       0       0
  1168 ;;Total ram usage:        3 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 2
  1171 ;; This function calls:
  1172 ;;		_Lcd_Write_Char
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178  0557                     _Lcd_Write_String:	
  1179                           ;psect for function _Lcd_Write_String
  1180                           
  1181                           
  1182                           ;incstack = 0
  1183                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1184                           ;Lcd_Write_String@a stored from wreg
  1185  0557  00F7               	movwf	Lcd_Write_String@a
  1186  0558                     l896:
  1187                           
  1188                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  1189  0558  01F5               	clrf	Lcd_Write_String@i
  1190  0559  01F6               	clrf	Lcd_Write_String@i+1
  1191  055A  2D6E               	goto	l902
  1192  055B                     l898:
  1193                           
  1194                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  1195  055B  0875               	movf	Lcd_Write_String@i,w
  1196  055C  0777               	addwf	Lcd_Write_String@a,w
  1197  055D  0084               	movwf	4
  1198  055E  120A  118A  2003  120A  118A  	fcall	stringdir
  1199  0563  120A  118A  257C  120A  118A  	fcall	_Lcd_Write_Char
  1200  0568                     l900:
  1201  0568  3001               	movlw	1
  1202  0569  07F5               	addwf	Lcd_Write_String@i,f
  1203  056A  1803               	skipnc
  1204  056B  0AF6               	incf	Lcd_Write_String@i+1,f
  1205  056C  3000               	movlw	0
  1206  056D  07F6               	addwf	Lcd_Write_String@i+1,f
  1207  056E                     l902:
  1208  056E  0875               	movf	Lcd_Write_String@i,w
  1209  056F  0777               	addwf	Lcd_Write_String@a,w
  1210  0570  0084               	movwf	4
  1211  0571  120A  118A  2003  120A  118A  	fcall	stringdir
  1212  0576  3A00               	xorlw	0
  1213  0577  1D03               	skipz
  1214  0578  2D7A               	goto	u371
  1215  0579  2D7B               	goto	u370
  1216  057A                     u371:
  1217  057A  2D5B               	goto	l898
  1218  057B                     u370:
  1219  057B                     l47:
  1220  057B  0008               	return
  1221  057C                     __end_of_Lcd_Write_String:
  1222                           
  1223                           	psect	text2
  1224  057C                     __ptext2:	
  1225 ;; *************** function _Lcd_Write_Char *****************
  1226 ;; Defined at:
  1227 ;;		line 81 in file "./lcd.h"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  a               1    wreg     unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  a               1    4[COMMON] unsigned char 
  1232 ;;  y               1    3[COMMON] unsigned char 
  1233 ;;  temp            1    2[COMMON] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         0       0       0       0       0
  1244 ;;      Locals:         3       0       0       0       0
  1245 ;;      Temps:          1       0       0       0       0
  1246 ;;      Totals:         4       0       0       0       0
  1247 ;;Total ram usage:        4 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 1
  1250 ;; This function calls:
  1251 ;;		_Lcd_Port
  1252 ;; This function is called by:
  1253 ;;		_Lcd_Write_String
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257  057C                     _Lcd_Write_Char:	
  1258                           ;psect for function _Lcd_Write_Char
  1259                           
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1263                           ;Lcd_Write_Char@a stored from wreg
  1264  057C  00F4               	movwf	Lcd_Write_Char@a
  1265  057D                     l694:
  1266                           
  1267                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  1268  057D  0874               	movf	Lcd_Write_Char@a,w
  1269  057E  390F               	andlw	15
  1270  057F  00F1               	movwf	??_Lcd_Write_Char
  1271  0580  0871               	movf	??_Lcd_Write_Char,w
  1272  0581  00F2               	movwf	Lcd_Write_Char@temp
  1273                           
  1274                           ;./lcd.h: 85:    y = a&0xF0;
  1275  0582  0874               	movf	Lcd_Write_Char@a,w
  1276  0583  39F0               	andlw	240
  1277  0584  00F1               	movwf	??_Lcd_Write_Char
  1278  0585  0871               	movf	??_Lcd_Write_Char,w
  1279  0586  00F3               	movwf	Lcd_Write_Char@y
  1280  0587                     l696:
  1281                           
  1282                           ;./lcd.h: 86:    PORTDbits.RD0 = 1;
  1283  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0589  1408               	bsf	8,0	;volatile
  1286  058A                     l698:
  1287                           
  1288                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  1289  058A  0873               	movf	Lcd_Write_Char@y,w
  1290  058B  00F1               	movwf	??_Lcd_Write_Char
  1291  058C  3004               	movlw	4
  1292  058D                     u55:
  1293  058D  1003               	clrc
  1294  058E  0CF1               	rrf	??_Lcd_Write_Char,f
  1295  058F  3EFF               	addlw	-1
  1296  0590  1D03               	skipz
  1297  0591  2D8D               	goto	u55
  1298  0592  0871               	movf	??_Lcd_Write_Char,w
  1299  0593  120A  118A  2535  120A  118A  	fcall	_Lcd_Port
  1300  0598                     l700:
  1301                           
  1302                           ;./lcd.h: 88:    PORTDbits.RD2 = 1;
  1303  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1305  059A  1508               	bsf	8,2	;volatile
  1306  059B                     l702:
  1307                           
  1308                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1309  059B  300D               	movlw	13
  1310  059C  00F1               	movwf	??_Lcd_Write_Char
  1311  059D                     u637:
  1312  059D  0BF1               	decfsz	??_Lcd_Write_Char,f
  1313  059E  2D9D               	goto	u637
  1314  059F                     l704:
  1315                           
  1316                           ;./lcd.h: 90:    PORTDbits.RD2 = 0;
  1317  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1318  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1319  05A1  1108               	bcf	8,2	;volatile
  1320  05A2                     l706:
  1321                           
  1322                           ;./lcd.h: 91:    Lcd_Port(temp);
  1323  05A2  0872               	movf	Lcd_Write_Char@temp,w
  1324  05A3  120A  118A  2535  120A  118A  	fcall	_Lcd_Port
  1325  05A8                     l708:
  1326                           
  1327                           ;./lcd.h: 92:    PORTDbits.RD2 = 1;
  1328  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1329  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1330  05AA  1508               	bsf	8,2	;volatile
  1331  05AB                     l710:
  1332                           
  1333                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1334  05AB  300D               	movlw	13
  1335  05AC  00F1               	movwf	??_Lcd_Write_Char
  1336  05AD                     u647:
  1337  05AD  0BF1               	decfsz	??_Lcd_Write_Char,f
  1338  05AE  2DAD               	goto	u647
  1339  05AF                     l712:
  1340                           
  1341                           ;./lcd.h: 94:    PORTDbits.RD2 = 0;
  1342  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1343  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1344  05B1  1108               	bcf	8,2	;volatile
  1345  05B2                     l41:
  1346  05B2  0008               	return
  1347  05B3                     __end_of_Lcd_Write_Char:
  1348                           
  1349                           	psect	text3
  1350  05B3                     __ptext3:	
  1351 ;; *************** function _Lcd_Set_Cursor *****************
  1352 ;; Defined at:
  1353 ;;		line 41 in file "./lcd.h"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  a               1    wreg     unsigned char 
  1356 ;;  b               1    4[COMMON] unsigned char 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  a               1    7[COMMON] unsigned char 
  1359 ;;  temp            1   10[COMMON] unsigned char 
  1360 ;;  y               1    9[COMMON] unsigned char 
  1361 ;;  z               1    8[COMMON] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         1       0       0       0       0
  1372 ;;      Locals:         4       0       0       0       0
  1373 ;;      Temps:          2       0       0       0       0
  1374 ;;      Totals:         7       0       0       0       0
  1375 ;;Total ram usage:        7 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 2
  1378 ;; This function calls:
  1379 ;;		_Lcd_Cmd
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385  05B3                     _Lcd_Set_Cursor:	
  1386                           ;psect for function _Lcd_Set_Cursor
  1387                           
  1388                           
  1389                           ;incstack = 0
  1390                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1391                           ;Lcd_Set_Cursor@a stored from wreg
  1392  05B3  00F7               	movwf	Lcd_Set_Cursor@a
  1393  05B4                     l876:
  1394                           
  1395                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  1396  05B4  0377               	decf	Lcd_Set_Cursor@a,w
  1397  05B5  1D03               	btfss	3,2
  1398  05B6  2DB8               	goto	u331
  1399  05B7  2DB9               	goto	u330
  1400  05B8                     u331:
  1401  05B8  2DDC               	goto	l886
  1402  05B9                     u330:
  1403  05B9                     l878:
  1404                           
  1405                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  1406  05B9  0874               	movf	Lcd_Set_Cursor@b,w
  1407  05BA  3E7F               	addlw	127
  1408  05BB  00F5               	movwf	??_Lcd_Set_Cursor
  1409  05BC  0875               	movf	??_Lcd_Set_Cursor,w
  1410  05BD  00FA               	movwf	Lcd_Set_Cursor@temp
  1411                           
  1412                           ;./lcd.h: 47:   z = temp>>4;
  1413  05BE  087A               	movf	Lcd_Set_Cursor@temp,w
  1414  05BF  00F5               	movwf	??_Lcd_Set_Cursor
  1415  05C0  3004               	movlw	4
  1416  05C1                     u345:
  1417  05C1  1003               	clrc
  1418  05C2  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1419  05C3  3EFF               	addlw	-1
  1420  05C4  1D03               	skipz
  1421  05C5  2DC1               	goto	u345
  1422  05C6  0875               	movf	??_Lcd_Set_Cursor,w
  1423  05C7  00F6               	movwf	??_Lcd_Set_Cursor+1
  1424  05C8  0876               	movf	??_Lcd_Set_Cursor+1,w
  1425  05C9  00F8               	movwf	Lcd_Set_Cursor@z
  1426  05CA                     l880:
  1427                           
  1428                           ;./lcd.h: 48:   y = temp & 0x0F;
  1429  05CA  087A               	movf	Lcd_Set_Cursor@temp,w
  1430  05CB  390F               	andlw	15
  1431  05CC  00F5               	movwf	??_Lcd_Set_Cursor
  1432  05CD  0875               	movf	??_Lcd_Set_Cursor,w
  1433  05CE  00F9               	movwf	Lcd_Set_Cursor@y
  1434  05CF                     l882:
  1435                           
  1436                           ;./lcd.h: 49:   Lcd_Cmd(z);
  1437  05CF  0878               	movf	Lcd_Set_Cursor@z,w
  1438  05D0  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1439  05D5                     l884:
  1440                           
  1441                           ;./lcd.h: 50:   Lcd_Cmd(y);
  1442  05D5  0879               	movf	Lcd_Set_Cursor@y,w
  1443  05D6  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1444                           
  1445                           ;./lcd.h: 51:  }
  1446  05DB  2E04               	goto	l35
  1447  05DC                     l886:
  1448  05DC  3002               	movlw	2
  1449  05DD  0677               	xorwf	Lcd_Set_Cursor@a,w
  1450  05DE  1D03               	btfss	3,2
  1451  05DF  2DE1               	goto	u351
  1452  05E0  2DE2               	goto	u350
  1453  05E1                     u351:
  1454  05E1  2E04               	goto	l35
  1455  05E2                     u350:
  1456  05E2                     l888:
  1457                           
  1458                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  1459  05E2  0874               	movf	Lcd_Set_Cursor@b,w
  1460  05E3  3EBF               	addlw	191
  1461  05E4  00F5               	movwf	??_Lcd_Set_Cursor
  1462  05E5  0875               	movf	??_Lcd_Set_Cursor,w
  1463  05E6  00FA               	movwf	Lcd_Set_Cursor@temp
  1464                           
  1465                           ;./lcd.h: 55:   z = temp>>4;
  1466  05E7  087A               	movf	Lcd_Set_Cursor@temp,w
  1467  05E8  00F5               	movwf	??_Lcd_Set_Cursor
  1468  05E9  3004               	movlw	4
  1469  05EA                     u365:
  1470  05EA  1003               	clrc
  1471  05EB  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1472  05EC  3EFF               	addlw	-1
  1473  05ED  1D03               	skipz
  1474  05EE  2DEA               	goto	u365
  1475  05EF  0875               	movf	??_Lcd_Set_Cursor,w
  1476  05F0  00F6               	movwf	??_Lcd_Set_Cursor+1
  1477  05F1  0876               	movf	??_Lcd_Set_Cursor+1,w
  1478  05F2  00F8               	movwf	Lcd_Set_Cursor@z
  1479  05F3                     l890:
  1480                           
  1481                           ;./lcd.h: 56:   y = temp & 0x0F;
  1482  05F3  087A               	movf	Lcd_Set_Cursor@temp,w
  1483  05F4  390F               	andlw	15
  1484  05F5  00F5               	movwf	??_Lcd_Set_Cursor
  1485  05F6  0875               	movf	??_Lcd_Set_Cursor,w
  1486  05F7  00F9               	movwf	Lcd_Set_Cursor@y
  1487  05F8                     l892:
  1488                           
  1489                           ;./lcd.h: 57:   Lcd_Cmd(z);
  1490  05F8  0878               	movf	Lcd_Set_Cursor@z,w
  1491  05F9  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1492  05FE                     l894:
  1493                           
  1494                           ;./lcd.h: 58:   Lcd_Cmd(y);
  1495  05FE  0879               	movf	Lcd_Set_Cursor@y,w
  1496  05FF  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1497  0604                     l35:
  1498  0604  0008               	return
  1499  0605                     __end_of_Lcd_Set_Cursor:
  1500                           
  1501                           	psect	text4
  1502  0605                     __ptext4:	
  1503 ;; *************** function _Lcd_Init *****************
  1504 ;; Defined at:
  1505 ;;		line 62 in file "./lcd.h"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0
  1521 ;;      Temps:          2       0       0       0       0
  1522 ;;      Totals:         2       0       0       0       0
  1523 ;;Total ram usage:        2 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 2
  1526 ;; This function calls:
  1527 ;;		_Lcd_Cmd
  1528 ;;		_Lcd_Port
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534  0605                     _Lcd_Init:	
  1535                           ;psect for function _Lcd_Init
  1536                           
  1537  0605                     l736:	
  1538                           ;incstack = 0
  1539                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1540                           
  1541                           
  1542                           ;./lcd.h: 64:   Lcd_Port(0x00);
  1543  0605  3000               	movlw	0
  1544  0606  120A  118A  2535  120A  118A  	fcall	_Lcd_Port
  1545  060B                     l738:
  1546                           
  1547                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1548  060B  301A               	movlw	26
  1549  060C  00F5               	movwf	??_Lcd_Init+1
  1550  060D  30F8               	movlw	248
  1551  060E  00F4               	movwf	??_Lcd_Init
  1552  060F                     u657:
  1553  060F  0BF4               	decfsz	??_Lcd_Init,f
  1554  0610  2E0F               	goto	u657
  1555  0611  0BF5               	decfsz	??_Lcd_Init+1,f
  1556  0612  2E0F               	goto	u657
  1557  0613  0000               	nop
  1558  0614                     l740:
  1559                           
  1560                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  1561  0614  3003               	movlw	3
  1562  0615  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1563                           
  1564                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1565  061A  3007               	movlw	7
  1566  061B  00F5               	movwf	??_Lcd_Init+1
  1567  061C  307D               	movlw	125
  1568  061D  00F4               	movwf	??_Lcd_Init
  1569  061E                     u667:
  1570  061E  0BF4               	decfsz	??_Lcd_Init,f
  1571  061F  2E1E               	goto	u667
  1572  0620  0BF5               	decfsz	??_Lcd_Init+1,f
  1573  0621  2E1E               	goto	u667
  1574  0622                     l742:
  1575                           
  1576                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  1577  0622  3003               	movlw	3
  1578  0623  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1579  0628                     l744:
  1580                           
  1581                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1582  0628  300F               	movlw	15
  1583  0629  00F5               	movwf	??_Lcd_Init+1
  1584  062A  3047               	movlw	71
  1585  062B  00F4               	movwf	??_Lcd_Init
  1586  062C                     u677:
  1587  062C  0BF4               	decfsz	??_Lcd_Init,f
  1588  062D  2E2C               	goto	u677
  1589  062E  0BF5               	decfsz	??_Lcd_Init+1,f
  1590  062F  2E2C               	goto	u677
  1591  0630  2E31               	nop2
  1592                           
  1593                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  1594  0631  3003               	movlw	3
  1595  0632  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1596                           
  1597                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  1598  0637  3002               	movlw	2
  1599  0638  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1600                           
  1601                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  1602  063D  3002               	movlw	2
  1603  063E  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1604                           
  1605                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  1606  0643  3008               	movlw	8
  1607  0644  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1608                           
  1609                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  1610  0649  3000               	movlw	0
  1611  064A  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1612                           
  1613                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  1614  064F  300C               	movlw	12
  1615  0650  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1616                           
  1617                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  1618  0655  3000               	movlw	0
  1619  0656  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1620                           
  1621                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  1622  065B  3006               	movlw	6
  1623  065C  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1624  0661                     l38:
  1625  0661  0008               	return
  1626  0662                     __end_of_Lcd_Init:
  1627                           
  1628                           	psect	text5
  1629  050E                     __ptext5:	
  1630 ;; *************** function _Lcd_Clear *****************
  1631 ;; Defined at:
  1632 ;;		line 35 in file "./lcd.h"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 2
  1653 ;; This function calls:
  1654 ;;		_Lcd_Cmd
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660  050E                     _Lcd_Clear:	
  1661                           ;psect for function _Lcd_Clear
  1662                           
  1663  050E                     l714:	
  1664                           ;incstack = 0
  1665                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1666                           
  1667                           
  1668                           ;./lcd.h: 37:  Lcd_Cmd(0);
  1669  050E  3000               	movlw	0
  1670  050F  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1671                           
  1672                           ;./lcd.h: 38:  Lcd_Cmd(1);
  1673  0514  3001               	movlw	1
  1674  0515  120A  118A  251B  120A  118A  	fcall	_Lcd_Cmd
  1675  051A                     l29:
  1676  051A  0008               	return
  1677  051B                     __end_of_Lcd_Clear:
  1678                           
  1679                           	psect	text6
  1680  051B                     __ptext6:	
  1681 ;; *************** function _Lcd_Cmd *****************
  1682 ;; Defined at:
  1683 ;;		line 26 in file "./lcd.h"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  a               1    wreg     unsigned char 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  a               1    3[COMMON] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, pclath, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         0       0       0       0       0
  1698 ;;      Locals:         1       0       0       0       0
  1699 ;;      Temps:          2       0       0       0       0
  1700 ;;      Totals:         3       0       0       0       0
  1701 ;;Total ram usage:        3 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 1
  1704 ;; This function calls:
  1705 ;;		_Lcd_Port
  1706 ;; This function is called by:
  1707 ;;		_Lcd_Clear
  1708 ;;		_Lcd_Set_Cursor
  1709 ;;		_Lcd_Init
  1710 ;;		_Lcd_Shift_Right
  1711 ;;		_Lcd_Shift_Left
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715  051B                     _Lcd_Cmd:	
  1716                           ;psect for function _Lcd_Cmd
  1717                           
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1721                           ;Lcd_Cmd@a stored from wreg
  1722  051B  00F3               	movwf	Lcd_Cmd@a
  1723  051C                     l684:
  1724                           
  1725                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTDbits.RD0 = 0;
  1726  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1727  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1728  051E  1008               	bcf	8,0	;volatile
  1729  051F                     l686:
  1730                           
  1731                           ;./lcd.h: 29:  Lcd_Port(a);
  1732  051F  0873               	movf	Lcd_Cmd@a,w
  1733  0520  120A  118A  2535  120A  118A  	fcall	_Lcd_Port
  1734  0525                     l688:
  1735                           
  1736                           ;./lcd.h: 30:  PORTDbits.RD2 = 1;
  1737  0525  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0526  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0527  1508               	bsf	8,2	;volatile
  1740  0528                     l690:
  1741                           
  1742                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1743  0528  3006               	movlw	6
  1744  0529  00F2               	movwf	??_Lcd_Cmd+1
  1745  052A  3030               	movlw	48
  1746  052B  00F1               	movwf	??_Lcd_Cmd
  1747  052C                     u687:
  1748  052C  0BF1               	decfsz	??_Lcd_Cmd,f
  1749  052D  2D2C               	goto	u687
  1750  052E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1751  052F  2D2C               	goto	u687
  1752  0530  0000               	nop
  1753  0531                     l692:
  1754                           
  1755                           ;./lcd.h: 32:         PORTDbits.RD2 = 0;
  1756  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0533  1108               	bcf	8,2	;volatile
  1759  0534                     l26:
  1760  0534  0008               	return
  1761  0535                     __end_of_Lcd_Cmd:
  1762                           
  1763                           	psect	text7
  1764  0535                     __ptext7:	
  1765 ;; *************** function _Lcd_Port *****************
  1766 ;; Defined at:
  1767 ;;		line 4 in file "./lcd.h"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  a               1    wreg     unsigned char 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  a               1    0[COMMON] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         1       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0
  1784 ;;      Totals:         1       0       0       0       0
  1785 ;;Total ram usage:        1 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_Lcd_Cmd
  1791 ;;		_Lcd_Init
  1792 ;;		_Lcd_Write_Char
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796  0535                     _Lcd_Port:	
  1797                           ;psect for function _Lcd_Port
  1798                           
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _Lcd_Port: [wreg]
  1802                           ;Lcd_Port@a stored from wreg
  1803  0535  00F0               	movwf	Lcd_Port@a
  1804  0536                     l674:
  1805                           
  1806                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  1807  0536  1C70               	btfss	Lcd_Port@a,0
  1808  0537  2D39               	goto	u11
  1809  0538  2D3A               	goto	u10
  1810  0539                     u11:
  1811  0539  2D3E               	goto	l15
  1812  053A                     u10:
  1813  053A                     l676:
  1814                           
  1815                           ;./lcd.h: 7:   PORTDbits.RD4 = 1;
  1816  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1817  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1818  053C  1608               	bsf	8,4	;volatile
  1819  053D  2D41               	goto	l16
  1820  053E                     l15:	
  1821                           ;./lcd.h: 8:  else
  1822                           
  1823                           
  1824                           ;./lcd.h: 9:   PORTDbits.RD4 = 0;
  1825  053E  1283               	bcf	3,5	;RP0=0, select bank0
  1826  053F  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0540  1208               	bcf	8,4	;volatile
  1828  0541                     l16:
  1829                           
  1830                           ;./lcd.h: 11:  if(a & 2)
  1831  0541  1CF0               	btfss	Lcd_Port@a,1
  1832  0542  2D44               	goto	u21
  1833  0543  2D45               	goto	u20
  1834  0544                     u21:
  1835  0544  2D47               	goto	l17
  1836  0545                     u20:
  1837  0545                     l678:
  1838                           
  1839                           ;./lcd.h: 12:   PORTDbits.RD5 = 1;
  1840  0545  1688               	bsf	8,5	;volatile
  1841  0546  2D48               	goto	l18
  1842  0547                     l17:	
  1843                           ;./lcd.h: 13:  else
  1844                           
  1845                           
  1846                           ;./lcd.h: 14:   PORTDbits.RD5 = 0;
  1847  0547  1288               	bcf	8,5	;volatile
  1848  0548                     l18:
  1849                           
  1850                           ;./lcd.h: 16:  if(a & 4)
  1851  0548  1D70               	btfss	Lcd_Port@a,2
  1852  0549  2D4B               	goto	u31
  1853  054A  2D4C               	goto	u30
  1854  054B                     u31:
  1855  054B  2D4E               	goto	l19
  1856  054C                     u30:
  1857  054C                     l680:
  1858                           
  1859                           ;./lcd.h: 17:   PORTDbits.RD6 = 1;
  1860  054C  1708               	bsf	8,6	;volatile
  1861  054D  2D4F               	goto	l20
  1862  054E                     l19:	
  1863                           ;./lcd.h: 18:  else
  1864                           
  1865                           
  1866                           ;./lcd.h: 19:   PORTDbits.RD6 = 0;
  1867  054E  1308               	bcf	8,6	;volatile
  1868  054F                     l20:
  1869                           
  1870                           ;./lcd.h: 21:  if(a & 8)
  1871  054F  1DF0               	btfss	Lcd_Port@a,3
  1872  0550  2D52               	goto	u41
  1873  0551  2D53               	goto	u40
  1874  0552                     u41:
  1875  0552  2D55               	goto	l21
  1876  0553                     u40:
  1877  0553                     l682:
  1878                           
  1879                           ;./lcd.h: 22:   PORTDbits.RD7 = 1;
  1880  0553  1788               	bsf	8,7	;volatile
  1881  0554  2D56               	goto	l23
  1882  0555                     l21:	
  1883                           ;./lcd.h: 23:  else
  1884                           
  1885                           
  1886                           ;./lcd.h: 24:   PORTDbits.RD7 = 0;
  1887  0555  1388               	bcf	8,7	;volatile
  1888  0556                     l23:
  1889  0556  0008               	return
  1890  0557                     __end_of_Lcd_Port:
  1891  007E                     btemp	set	126	;btemp
  1892  007E                     wtemp0	set	126
  1893                           
  1894                           	psect	config
  1895                           
  1896                           ;Config register CONFIG @ 0x2007
  1897                           ;	Oscillator Selection bits
  1898                           ;	FOSC = EXTRC, RC oscillator
  1899                           ;	Watchdog Timer Enable bit
  1900                           ;	WDTE = OFF, WDT disabled
  1901                           ;	Power-up Timer Enable bit
  1902                           ;	PWRTE = ON, PWRT enabled
  1903                           ;	Brown-out Reset Enable bit
  1904                           ;	BOREN = ON, BOR enabled
  1905                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1906                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1907                           ;	Data EEPROM Memory Code Protection bit
  1908                           ;	CPD = OFF, Data EEPROM code protection off
  1909                           ;	Flash Program Memory Write Enable bits
  1910                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1911                           ;	In-Circuit Debugger Mode bit
  1912                           ;	DEBUG = 0x1, unprogrammed default
  1913                           ;	Flash Program Memory Code Protection bit
  1914                           ;	CP = OFF, Code protection off
  1915  2007                     	org	8199
  1916  2007  3F73               	dw	16243

Data Sizes:
    Strings     238
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    2390
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     771
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1409
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jun 25 19:39:20 2023

                       pc 0002                        l20 054F                        l21 0555  
                      l23 0556                        l15 053E                        l16 0541  
                      l17 0547                        l41 05B2                        l18 0548  
                      l26 0534                        l19 054E                        l35 0604  
                      l29 051A                        l61 06BD                        l38 0661  
                      l62 07F8                        l70 0755                        l47 057B  
                      l71 0746                        l63 06E2                        l67 0724  
                      l59 0698                        l76 0784                        l77 0783  
                      l69 0733                        l78 078A                        u10 053A  
                      u11 0539                        u20 0545                        u21 0544  
                      u30 054C                        u31 054B                        u40 0553  
                      u41 0552                        u55 058D                        fsr 0004  
                     l700 0598                       l710 05AB                       l702 059B  
                     l712 05AF                       l704 059F                       l714 050E  
                     l706 05A2                       l740 0614                       l708 05A8  
                     l900 0568                       l742 0622                       l902 056E  
                     l910 066A                       l680 054C                       l744 0628  
                     l736 0605                       l920 067B                       l912 066B  
                     l904 0662                       l682 0553                       l674 0536  
                     l690 0528                       l738 060B                       l930 06A8  
                     l922 0683                       l914 066C                       l906 0666  
                     l676 053A                       l692 0531                       l684 051C  
                     l940 06D3                       l932 06AE                       l924 0689  
                     l916 0671                       l908 0669                       l678 0545  
                     l686 051F                       l694 057D                       l950 0701  
                     l942 06E6                       l934 06C1                       l926 069C  
                     l918 0677                       l688 0525                       l880 05CA  
                     l696 0587                       l960 071D                       l952 0707  
                     l944 06EA                       l936 06C5                       l928 06A0  
                     l890 05F3                       l882 05CF                       l698 058A  
                     l970 073F                       l962 0728                       l954 070F  
                     l946 06F2                       l938 06CD                       l892 05F8  
                     l884 05D5                       l876 05B4                       l980 0768  
                     l972 074A                       l964 072C                       l956 0715  
                     l948 06F9                       l894 05FE                       l878 05B9  
                     l886 05DC                       l990 0793                       l982 076E  
                     l974 074E                       l966 0737                       l958 0719  
                     l888 05E2                       l896 0558                       l992 0799  
                     l984 0774                       l968 073B                       l976 0755  
                     l898 055B                       l994 079C                       l986 077C  
                     l978 075B                       l996 07A9                       l988 078B  
                     l998 07AC                       u400 069C                       u401 069B  
                     u330 05B9                       u410 06A0                       u331 05B8  
                     u411 069F                       u500 072C                       u420 06C1  
                     u501 072B                       u421 06C0                       u350 05E2  
                     u510 0737                       u430 06C5                       u351 05E1  
                     u511 0736                       u431 06C4                       u520 073B  
                     u440 06E6                       u345 05C1                       u521 073A  
                     u441 06E5                       u370 057B                       u530 073F  
                     u450 06EA                       u371 057A                       u531 073E  
                     u451 06E9                       u540 074A                       u460 0715  
                     u380 0677                       u365 05EA                       u541 0749  
                     u461 0714                       u381 0676                       u550 074E  
                     u470 0719                       u390 067B                       u607 07A2  
                     u551 074D                       u471 0718                       u391 067A  
                     u560 075B                       u480 071D                       u617 07C7  
                     u561 075A                       u481 071C                       u570 0774  
                     u490 0728                       u627 07ED                       u571 0773  
                     u491 0727                       u580 078A                       u637 059D  
                     u581 0789                       u590 07B0                       u647 05AD  
                     u591 07AF                       u657 060F                       u667 061E  
                     u677 062C                       u687 052C                       fsr0 0004  
                    l1000 07B0                      l1002 07B8                      l1010 07D1  
                    l1020 07F4                      l1012 07D6                      l1004 07BE  
                    l1014 07DE                      l1006 07C1                      l1016 07E1  
                    l1008 07CE                      l1018 07E7                      STR_1 00A2  
                    STR_2 0009                      STR_3 00C4                      STR_4 0009  
                    STR_5 00A2                      STR_6 00C4                      STR_7 0091  
                    STR_8 002B                      STR_9 004D         ?_Lcd_Write_String 0070  
                    _main 0662                      btemp 007E                      start 0000  
      ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 0535                     ?_main 0070  
                   STR_10 006F                     STR_11 001A                     STR_12 003C  
                   STR_13 00E6                     STR_14 005E                     STR_15 00D5  
                   STR_16 00B3                     STR_17 0080                     _TRISC 0087  
                   _TRISD 0088                     pclath 000A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 0662          __end_of_Lcd_Port 0557  
         __initialization 07FC              __end_of_main 07FC                    ??_main 007B  
               ??_Lcd_Cmd 0071           Lcd_Set_Cursor@a 0077           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0079           Lcd_Set_Cursor@z 0078   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 051B            __pcstackCOMMON 0070            _Lcd_Set_Cursor 05B3  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                __pmaintext 0662  
  __end_of_Lcd_Set_Cursor 0605                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
              __stringtab 0003            _Lcd_Write_Char 057C                   _Lcd_Cmd 051B  
         ?_Lcd_Set_Cursor 0074                   __ptext1 0557                   __ptext2 057C  
                 __ptext3 05B3                   __ptext4 0605                   __ptext5 050E  
                 __ptext6 051B                   __ptext7 0535    __end_of_Lcd_Write_Char 05B3  
    end_of_initialization 07FC                 Lcd_Port@a 0070                 _PORTBbits 0006  
               _PORTCbits 0007                 _PORTDbits 0008           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0077         Lcd_Write_String@i 0075                 _Lcd_Clear 050E  
        _Lcd_Write_String 0557       start_initialization 07FC                ?_Lcd_Clear 0070  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073                 ___latbits 0002  
                ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0075                 __pstrings 0003  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074               __stringbase 0008  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 0605                  _Lcd_Port 0535  
__end_of_Lcd_Write_String 057C        __end_of__stringtab 0009        Lcd_Write_Char@temp 0072  
               stringcode 0003        Lcd_Set_Cursor@temp 007A                  stringdir 0003  
                stringtab 0003  
